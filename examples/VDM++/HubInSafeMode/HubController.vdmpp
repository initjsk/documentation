class HubController
 instance variables
 mHub : Hub;
 mMainShaftController : MainShaftController;
 mMode : Mode;
 inv Mode`HubInSafeModeInv(mMode, mMainShaftController.GetRPM(), 
                           mMainShaftController.IsLocked(), mHub.IsOpen());
 mEStopSeq : seq of bool := []; 

 operations
 public HubController : seq of bool * MainShaftController ==> HubController
 HubController(eStopSeq, mainShaftController) ==
 (
  mHub := new Hub();
  mEStopSeq := eStopSeq;
  mMainShaftController := mainShaftController;
  mMode := new ModeOperational();
  Mode`SetHubController(self);
 );

 public GetHub : () ==> Hub
 GetHub() ==
  return mHub;

 public GetMainShaftController : () ==> MainShaftController
 GetMainShaftController() ==
  return mMainShaftController;

 public SetMode : Mode ==> ()
 SetMode(mode) ==
  mMode := mode
 pre Mode`StateChangeInv(mMode, mode) and 
     Mode`HubInSafeModeInv(mode, mMainShaftController.GetRPM(), 
                           mMainShaftController.IsLocked(), mHub.IsOpen());
 
 public GetMode : () ==> Mode
 GetMode() ==
  return mMode;

 public Run : () ==> ()
 Run() ==
 (if len mEStopSeq >= 1 
  then let eStop = hd mEStopSeq
       in
        (mEStopSeq := tl mEStopSeq;

         if eStop 
         then mHub.PressEStop()
         else mHub.ReleaseEStop()
        );

  mHub.Run();
  mMode.Run();
 );

end HubController
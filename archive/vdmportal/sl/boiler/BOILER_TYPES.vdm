\section{Types and constants of the boiler}\label{BOILER_TYPES}

A first module, named $BOILER-TYPES$ introduces the constants and types 
for this modelisation. 

\begin{vdm_al}
module BOILER_TYPES

exports all

definitions
\end{vdm_al}

The constants of this module are:

\begin{itemize}
\item $C$, the maximum capacity of the boiler;
\item $M1$ and $M2$, the limits on the allowed water level;
\item $N1$ and $N2$, the preferred interval for the water level;
\item $W$, the maximum steam outcome;
\item $U1$ and $U2$, the absolute values on the extreme  gradients on the steam
outcome;
\item $P$, the nominal capacity of one pump;
\item $V$, the nominal capacity of the valve.
\end{itemize}

\begin{vdm_al}
 values 
	C  : kilograms = 1000.0 ;
	M1 : water_level = 200.0 ;
	M2 : water_level = 800.0 ;
	N1 : water_level = 400.0 ;
	N2 : water_level = 600.0 ;
	W  : kilograms_psec = 25.0 ;
	U1 : kilograms_psec2 = 1.0 ;
	U2 : kilograms_psec2 = 1.0 ;
	P  : kilograms_psec = 10.0 ;
	V  : kilograms_psec = 50.0 ;
\end{vdm_al}

The values given here are the ones of the
steamboiler simulator. They are given because VDM mandates to link constants to
values.
Additional constants in the statement of the problem are  the number of
pumps, the set of valid pump numbers, and the time needed to start a pump.

\begin{vdm_al}
	Pump_nb_max : nat1 = 4 ;
	Pump_nb_set : set of pump_nb  = {1,...,Pump_nb_max} ;
	Pump_starting_time : seconds = 5 
\end{vdm_al}

A first series of type definitions introduces the units of the problem:

\begin{itemize}
\item $kilograms$ measures quantities of water or steam;
\item $seconds$ is the time unit;
\item $kilograms-psec$ measures flows of water or steam;
\item $kilograms-psec2$ measures gradients of flows of water or steam;
\item $watts$ is a power unit;
\end{itemize} 

These units are real numbers; the gradients and  $watts$, aimed at measuring
the heat 
provided to the boiler, are considered  positive reals. Invariants on these types  enforce this property.

\begin{vdm_al}
types 
-- unities
	kilograms = real;
	seconds = real;
	kilograms_psec = real;
	kilograms_psec2 = real
	inv k == 0 <= k ;
	watts = real
	inv w == 0 <= w ;
\end{vdm_al}

As far as the semantics of VDM are concerned, these definitions do not express
a difference between $kilograms$ and $seconds$. Both are equivalent to reals!
Nevertheless, the introduction of these types is a meaningful way to document
the specification.

Three units are constructed on these:
\begin{itemize}
\item $water-level$ corresponds to a level  of the boiler;
\item $steam-outcome$ corresponds to the flow of steam;
\item $duration$ corresponds to a positive time interval.
\end{itemize}

\begin{vdm_al}
	water_level = kilograms
	inv wl == 0 <= wl and wl <= C ;
	steam_outcome = kilograms_psec
	inv so == 0 <= so and so <= W ;
	duration = seconds
	inv d == d >= 0 ;
\end{vdm_al}

Further types are associated to pumps:

\begin{itemize}
\item $pump-nb$ is the type of valid pump numbers;
\item $pump-state$ is an enumerated type that lists the possible states of the
pump: state $Starting$ corresponds to the intermediate state where a pump is
switched on but has not balanced the pressure of the boiler.
\item $pump-to-state-map$ is a map from pump numbers to pump states; an
invariant enforces that it is total, i.e.\ its domain is the set of all pump
numbers. In other words, each pump has a state.
\end{itemize}

\begin{vdm_al}
-- boiler caracteristics
        pump_nb = nat1
	inv p == p <= Pump_nb_max ;
-- boiler state
	pump_state = <Stopped> | <Starting> | <Pumping>;
	pump_to_state_map = map pump_nb to pump_state
	inv pm == dom pm =  Pump_nb_set;
\end{vdm_al}

Type $valve-state$ is an enumerated type that lists the possible states of the
valve. 

\begin{vdm_al}
	valve_state = <Opened> | <Closed>;
\end{vdm_al}

Finally, type $boiler-mode$ lists the possible physical modes of the boiler.

\begin{vdm_al}
	boiler_mode = <Stopped> | <Running> | <Init> | <Explosion>

end BOILER_TYPES
\end{vdm_al}

\section{Alternative view of MSMIE}

\begin{vdm_al}

types

 BName = <N1>|<N2>|<N3>;
 MName = token

functions

nil_or_different[@A] : seq of [[@A]] -> bool
nil_or_different(l) == 
     forall i in set inds l & 
             l(i) = nil or
             (forall j in set inds l & l(i) = l(j) => i = j)

state #S3 of

 s : BName
 m : [BName]
 n : [BName]
 ms : set of MName

inv mk_#S3 (s, n, m, ms) == 
   (m = nil <=> ms = {}) and
   nil_or_different[BName]([s,m,n])

init s == s = mk_#S3(<N1>, nil, nil, {})
end

\end{vdm_al}

The operations are specified as follows:

\begin{vdm_al}

operations

slave ()
 ext rd m : ([BName])
     wr n : ([BName])
     wr s : BName

 pre true

 post n = s~ ;

acq (l:MName)

ext wr ms : (set of MName)
    wr n, m : ([BName])

pre (not (l in set ms)) and not (n = nil and m = nil)

post ms = ms~ union {l} and
          (not(ms~ = {}) => m = m~ and n = n~) and
          (ms~ = {} => m = n~ and n = nil) ;

rel (l:MName)

ext wr ms : (set of MName)
    wr n,m : ([BName])

pre l in set ms

post ms = ms~ \ {l} and
     (not (ms = {}) => m = m~ and n = n~) and
     (ms = {} and not (n = nil) => n = n~ and m = nil) and
     (ms = {} and n = nil => n = m~ and m = nil)

\end{vdm_al}

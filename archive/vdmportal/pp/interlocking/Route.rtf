{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}{\f16\froman\fcharset238\fprq2 Times New Roman CE;}
{\f17\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f19\froman\fcharset161\fprq2 Times New Roman Greek;}{\f20\froman\fcharset162\fprq2 Times New Roman Tur;}{\f21\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f22\fswiss\fcharset238\fprq2 Arial CE;}
{\f23\fswiss\fcharset204\fprq2 Arial Cyr;}{\f25\fswiss\fcharset161\fprq2 Arial Greek;}{\f26\fswiss\fcharset162\fprq2 Arial Tur;}{\f27\fswiss\fcharset186\fprq2 Arial Baltic;}{\f28\fmodern\fcharset238\fprq1 Courier New CE;}
{\f29\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f31\fmodern\fcharset161\fprq1 Courier New Greek;}{\f32\fmodern\fcharset162\fprq1 Courier New Tur;}{\f33\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;
\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;
\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid 
\sbasedon0 \snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \shading1500\cbpat8 \f2\fs20\lang1024\cgrid \snext15 VDM;}{\*\cs16 \additive \f6 \sbasedon10 VDM_COV;}{\*\cs17 \additive \f6\cf16 \sbasedon10 
VDM_NCOV;}{\s18\nowidctlpar\widctlpar\adjustright \shading1500\cbpat8 \f2\fs20\lang1024\cgrid \sbasedon15 \snext18 VDM_TC_TABLE;}{\s19\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid \sbasedon0 \snext19 Plain Text;}}{\info
{\title Default Rose-VDM++ Link forward engineering file}{\author IFAD VDM Tools}{\operator Benny Graff Mortensen}{\creatim\yr1998\mo10\dy16\hr14\min8}{\revtim\yr2000\mo2\dy22\hr13\min35}{\version11}{\edmins51}{\nofpages1}{\nofwords15}{\nofchars86}
{\*\company IFAD}{\nofcharsws0}{\vern71}}\widowctrl\ftnbj\aenddoc\linkstyles\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid {\lang2057 The Route Class
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \shading1500\cbpat8 \f2\fs20\lang1024\cgrid {class Route
\par 
\par instance variables
\par  
\par   allroute : seq1 of Station`TrackId;
\par   partroute : seq1 of Station`TrackId;
\par   points : PointDir;
\par   route_lock : set of RouteId;
\par inv len allroute > 1 and
\par     elems allroute subset dom points and
\par     (forall i,j in set inds allroute & 
\par \tab \tab i <> j => allroute(i) <> allroute(j)) and
\par      exists i in set inds allroute & 
\par \tab \tab partroute = allroute(i,...,len allroute);
\par 
\par operations
\par 
\par   public
\par   GetLock: () ==> set of RouteId
\par   GetLock() ==
\par     return route_lock;
\par 
\par   public
\par   GetPoints: () ==> }{PointDir}{
\par   GetPoints() ==
\par     return points;
\par 
\par   public
\par   GetPartRoutes: () ==> }{seq1 of Station`TrackId}{
\par   GetPartRoutes() ==
\par     return partroute;
\par }{
\par   public
\par   Get}{All}{Route: }{()}{ ==> }{seq1 of }{Station`TrackId
\par }{  GetAll}{Route() ==
\par     return allroute}{;}{
\par }{
\par   public
\par   GetIndexRoute: nat1 ==> }{Station`TrackId}{
\par   GetIndexRoute(index) ==
\par     return allroute(index)
\par   pre index in set inds allroute;
\par 
\par types
\par 
\par   public RouteId = token;
\par 
\par   public PointDir = map Station`TrackId to Track`Direction;
\par 
\par end Route
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }}
-----------------------------------------------
-- Author:	Kim Christensen
-- Created:	26/02-2009
-- Updated: 19/04-2009
-- Description: Enviroment class for ORAMS
-----------------------------------------------

class Environment is subclass of GLOBAL


instance variables
	ctl : AccessController;
	Linlines : seq of Linline := [];
	Pinlines : seq of Pinline := [];
	events : seq of event := [];
	busy : bool := true;
	running : bool := true;
	outlines : seq of outline := [];
	
	-- access to the VDMTools stdio
	io : IO := new IO();
	
types
	
	
operations
			
	public Environment : String ==> Environment
		Environment(sfname) == 
		(
			ctl := new AccessController();
			
			def mk_(-,input1) = io.freadval[seq of event](sfname) 
  			in
    			events := input1;
    			
    		init();
		);
	

	public sendEvents : () ==> ()
		sendEvents() == 
			(
 			if len events > 0
  			then (dcl curtime : Time := World`timer.GetTime(),
            	done    : bool := false;
        		while not done do
          		def mk_(type, id1, id2, intend, pt) = hd events
          		in 
            		if pt <= curtime 
            		then (
            			ctl.addEvent(mk_(type, id1, id2, intend, pt));
                  		events := tl events; 
                	  	done := len events = 0 )
       		    	else done := true)
  			else running := false
 			);

	
	public addOutline : outline ==> ()
		addOutline(line) == 
		(
			outlines := outlines ^ [line];
		);


	public showResult: () ==> ()
		showResult () ==
  			def - = io.writeval[seq of outline](outlines) in skip;


	private init : () ==> ()
		init() ==
			(
			ORAMS`a1.addBoat(ORAMS`l1);
			ORAMS`a1.addEquipment(ORAMS`f1);
			ORAMS`a1.addEquipment(ORAMS`f2);
			ORAMS`a1.addEquipment(ORAMS`f3);
			
			ORAMS`a2.addBoat(ORAMS`l2);
			ORAMS`a2.addBoat(ORAMS`l3);
			ORAMS`a2.addEquipment(ORAMS`f4);
			ORAMS`a2.addEquipment(ORAMS`f5);
			ORAMS`a2.addEquipment(ORAMS`f6);
			
			ORAMS`a3.addBoat(ORAMS`l3);
			ORAMS`a3.addBoat(ORAMS`l4);
			ORAMS`a3.addEquipment(ORAMS`f7);
			ORAMS`a3.addEquipment(ORAMS`f8);
			ORAMS`a3.addEquipment(ORAMS`f9);
			ORAMS`a3.addEquipment(ORAMS`f10);
			);
	
	
	public isFinished : () ==> ()
		isFinished() ==
			skip;

sync
per isFinished => not busy;

thread 
	(
		start(new ClockTick(threadid));
		start(ctl);
		for all a in set rng ORAMS`areas do
			start(a);
		while running do 
			(
				sendEvents();
				World`timer.NotifyAndIncTime();
				World`timer.WaitRelative(0);
			);	
		def - = io.writeval[seq of char]("Done sending events") in skip;
		ctl.isFinished();
		for all a in set rng ORAMS`areas do 
			a.isFinished();
		busy := false;
	)

end Environment

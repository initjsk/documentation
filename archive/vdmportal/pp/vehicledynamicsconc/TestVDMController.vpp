------------------------------------------------
-- Class:			TestVDMController
-- Description: 	Test the VDMController class 
-----------------------------------------------

--
-- class definition
--
class TestVDMController is subclass of TestCase

--
-- instance variables
--
instance variables
private pos : Position;
--
-- Operations definition section
--
operations

protected SetUp: () ==> ()
SetUp () == pos := new Position(1,1); 

protected RunTest: () ==> ()
RunTest () ==
(
 Printer`OutAlways("Testing VDMController");
 start(self);
 self.IsFinished();
);
  
  
private runner : () ==> ()
runner () ==
(
 dcl vec : Vehicle := new Vehicle(2, pos, 1, <NORTH>),
 vec2 : Vehicle := new Vehicle(3, new Position(1,3), 1, <SOUTH>),
 ctrl : Controller := new Controller(vec),
 ctrl2 : Controller := new Controller(vec2),
 vdmCtrl : VDMController := new VDMController();
 
 --test call of inrange and data exchange
 vec.setLowGrip(true);
 vdmCtrl.addController(ctrl);
 vdmCtrl.addController(ctrl2);
 AssertTrue(vdmCtrl.getController(2) = ctrl);
 
 start(vdmCtrl);
 start(ctrl);
 start(new ClockTick(threadid));
 World`timerRef.NotifyAndIncTime();
 World`timerRef.WaitRelative(0);	
 vdmCtrl.Step();
 --let vs = ctrl.GetTrafficData() in
  --(
  --skip;
   --let v = vs(1) in
   --(
   --AssertTrue(v.GetPosition().X() = 1);
  -- AssertTrue(v.GetPosition().Y() = 2);
  -- AssertTrue(v.GetMessage() = <LowGrip>);
 --  AssertTrue(v.GetDirection() = <NORTH>);
  -- )
  --)
);
  
  
private IsFinished : () ==> ()
IsFinished () ==  skip;

  
protected TearDown: () ==> ()
TearDown () == skip;


thread
(
 	self.runner(); 
)

--
-- sync definition section
--
sync
 per IsFinished => #fin(runner) > 0;

end TestVDMController

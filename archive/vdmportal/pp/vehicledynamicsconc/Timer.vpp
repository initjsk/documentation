-----------------------------------------------
-- Class:			Timer
-- Description: 	Time is of the essence
-----------------------------------------------

--
-- class definition
--
class Timer

--
-- instance variables
--
instance variables

private static simulation : bool := false;
private static currentTime : nat := 0;

--
-- Types definition section
--
types   

--
-- Values definition section
--
values 
step : nat = 100;

--
-- Operations definition section
--
operations

public Timer : () ==> Timer
Timer() ==
(
 Printer`Out("Timer created: Time is what prevents everything from happening at once.");
);

public static Simulation : bool ==> ()
Simulation(on) ==
 simulation := on;

public static Tick: () ==> ()
Tick() ==
(
  currentTime := currentTime + step;
  Printer`Out("Timer: Current Time " ^ Printer`natToString(currentTime))
);

public static GetTime : () ==> nat
GetTime() ==
(
 if simulation = true then 
 (
 	return currentTime;
 )
 else 
 (
  	return World`timerRef.GetTime()
 );
);

--
-- Functions definition section
--
functions

--
-- Values definition section
--
values

end Timer
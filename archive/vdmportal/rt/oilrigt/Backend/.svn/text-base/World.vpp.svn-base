 	\section{World2}

\begin{vdm_al}
class World2

instance variables
  protected env : [Environment] := nil;

operations


  public World2 : seq of char ==> World2
  World2(fname) ==
	(
		duration(0)(
		env := new Environment(fname);

		env.addController(CRSystem`ctrl);
		CRSystem`cb.setAPM(CRSystem`apm);
		CRSystem`cb.setRailwayGrid(CRSystem`grid2);
		CRSystem`apm.setCR(CRSystem`cb);
		CRSystem`ctrl.setAPM(CRSystem`apm);
		CRSystem`ctrl.setRailwayGrid(CRSystem`grid);
		CRSystem`ctrl.setTPC(CRSystem`cb);
		CRSystem`sms.initialize(13600,1000);
		
		--Token Device set up generated by repeater
		--env.addTokenDevice(CRSystem`tok0);
		--CRSystem`tok0.setAPM(CRSystem`apm);
		--CRSystem`tok0.setEnv(env);
		env.addTokenDevice(CRSystem`tok7);

		
		
		CRSystem`tok7.setAPM(CRSystem`apm);

		
		
		CRSystem`tok7.setEnv(env);


	);
		
	);

	public run : () ==>  seq of Logger`logType
	run() == 	
	(
		--dcl i : nat := 5;
		duration(0)(
		CRSystem`grid.initGrid();
		CRSystem`grid2.initGrid();
		CRSystem`ctrl.initTrains();
		CRSystem`ctrl.initStations();
		CRSystem`ctrl.startTrains();
		CRSystem`apm.initAPM();
		);
		start(CRSystem`sms);
		start(env);
		Logger`write2("World Setup complete",0,time);
		--env.isFinished();
		CRSystem`ctrl.isFinished();	
		Logger`write("This is the end");	
		env.showResults();
		RTLog`RTflush();
		return Logger`printLog();


	)
end World2
\end{vdm_al}

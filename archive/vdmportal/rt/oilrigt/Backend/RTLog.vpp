\section{Logger class}

\begin{vdm_al}

class RTLog

types
	public LType =  map seq of char to seq of nat; 
	
instance variables 
	public static rtlog : LType := {|->};
	private static initLog : bool := true;
	private static temp : seq of nat := [];

operations

	public static RTWrite : seq of char * nat ==> () 
	RTWrite(id, val)== 	( 
		duration(0)(	
			if {id} subset dom rtlog then (
				rtlog(id) := rtlog(id) ^ [val]; 
			)		
			else (
				rtlog := rtlog munion {id |-> [val]};
			);
			
		);
	);
	
	public static RTflush : () ==> ()	
	RTflush()== (
	dcl io: IO := new IO();
	if(initLog = true) then
		 def - = io.fwriteval[LType]("RTLog.log",rtlog,<start>) in skip
	else
		 def - = io.fwriteval[LType]("RTLog.log",rtlog,<append>) in skip;
	);
	
	public test : () ==> ()
	test()==
	(
		RTLog`RTWrite("a", 1);
		RTLog`RTWrite("b", 2);
		RTLog`RTWrite("a", 3);
		RTLog`RTWrite("b", 4);
		RTLog`RTWrite("a", 5);
		RTLog`RTWrite("b", 6);
		RTLog`RTflush();	
	)

sync
mutex(RTWrite);

end RTLog

\end{vdm_al}

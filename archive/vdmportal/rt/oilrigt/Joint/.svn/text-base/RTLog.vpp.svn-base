\section{Logger class}

\begin{vdm_al}

class RTLog

types
	public logType =  map seq of char to seq of nat; 
	
instance variables 
	public static log : logType := {|->};
	private static initLog : bool := true;

operations

	public static write : Types`String * nat ==> () 
	write(id, val)== ( 
		duration(0)(	
			if {id} subset dom log then (
				log(id) := log(id) ^ [val]; 
			)		
			else (
				log := log munion {id |-> [val]};
			);
		);
	);
	
	public static flush : () ==> ()	
	flush()== (
	dcl io: IO := new IO();
	if(initLog = true) then
		 def - = io.fwriteval[logType]("RTLog.log",log,<start>) in skip
	else
		 def - = io.fwriteval[logType]("RTLog.log",log,<append>) in skip;
	);
	
	public test : () ==> ()
	test()==
	(
		RTLog`write("a", 1);
		RTLog`write("b", 2);
		RTLog`write("a", 3);
		RTLog`write("b", 4);
		RTLog`write("a", 5);
		RTLog`write("b", 6);
		RTLog`flush();	
	)

sync
mutex(write);

end RTLog
\end{vdm_al}

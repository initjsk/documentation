\begin{vdm_al}
system PMUSystem

instance variables

-- create cpu's and busses
-- 1 cpu per medicaldevice
-- 1 cpu per PMU / Transmitter / Battery Monitor

medicalDevice1CPU : CPU := new CPU (<FCFS>,1E6); -- md1
medicalDevice2CPU : CPU := new CPU (<FCFS>,1E6); -- md2
pmu1CPU : CPU := new CPU (<FCFS>,1E6); -- pmu1
heartRateAnalyzerCPU : CPU := new CPU (<FCFS>,1E6); -- analyzer 1
--dfdf : CPU := new CPU (<FP>,1E9);

wiredBus : BUS := new BUS (<FCFS>,1E6,{heartRateAnalyzerCPU,pmu1CPU}); -- cpu3 on 2 busses
wirelessBus : BUS := new BUS (<FCFS>,1E6,{medicalDevice1CPU,pmu1CPU});

-- create medical devices
public static medicalDevice0 : MedicalDevice := new MedicalDevice(2508821401, 3);


-- create PMU's
public static pmu0 : PMU := new PMU(2508821401);

-- create analyzers
public static analyzer0 : Analyzer := new Analyzer(3);
public static batteryMonitor0 : BatteryMonitor := new BatteryMonitor(1000);
public static transmitter0 : Transmitter := new Transmitter();

operations 

PMUSystem : () ==> PMUSystem
PMUSystem() ==
(
    medicalDevice1CPU.deploy(medicalDevice0);
    medicalDevice1CPU.setPriority(MedicalDevice`poll, 100);
    
    pmu1CPU.deploy(pmu0);
    pmu1CPU.setPriority(PMU`collectDeviceData, 100);
    pmu1CPU.deploy(transmitter0);
    pmu1CPU.deploy(batteryMonitor0);
    
    heartRateAnalyzerCPU.deploy(analyzer0);
    
);

end PMUSystem
\end{vdm_al}

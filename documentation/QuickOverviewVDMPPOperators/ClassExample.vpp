class Person

types
public String = seq of char;

values

protected Name : seq of char = "Peter";

instance variables

public nationality : seq of char:="Danish";
comment            : String;
yearOfBirth        : int;
sex                : Male | Female;
friends            : map String to Person;

operations

public Person: int * (Male | Female) ==> Person
Person(pYear,pSex) ==
  (yearOfBirth := pYear;
   sex := pSex);

public GetAge : int ==> int
GetAge(year) == CalculateAge(year,yearOfBirth)
pre pre_CalculateYear(year,yearOfBirth);

functions

public CalculateAge : int * int -> int
CalculateAge (year,bornInYear) ==  year-bornInYear
pre year >= bornInYear
post RESULT + bornInYear = year;

Card: set of nat -> nat
Card(s) == card s;

thread
while true do
  skip;

traces
  Mytrace: --regular expression with operation calls

end Person


class Male is subclass of Person
end Male
class Female is subclass of Person
end Female
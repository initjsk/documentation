WARNING:Letter.vdmpp:5001:11,14:Instance variable 'date' is not initialized.
WARNING:Withdrawal.vdmpp:5001:11,9:Instance variable 'amount' is not initialized.
WARNING:Letter.vdmpp:5001:12,22:Instance variable 'transactions' is not initialized.
WARNING:Account.vdmpp:5001:12,10:Instance variable 'balance' is not initialized.
WARNING:Account.vdmpp:5012:119,6:Recursive function has no measure.
WARNING:SendStatement.vdmpp:5001:12,9:Instance variable 'tillid' is not initialized.
WARNING:Withdrawal.vdmpp:5001:10,9:Instance variable 'tillid' is not initialized.
WARNING:Letter.vdmpp:5001:9,14:Instance variable 'name' is not initialized.
WARNING:GetBalance.vdmpp:5001:10,9:Instance variable 'tillid' is not initialized.
WARNING:Letter.vdmpp:5001:10,17:Instance variable 'address' is not initialized.
WARNING:CardHolder.vdmpp:5001:15,7:Instance variable 'name' is not initialized.
WARNING:CardHolder.vdmpp:5001:16,10:Instance variable 'address' is not initialized.
WARNING:CentralResource.vdmpp:5001:18,12:Instance variable 'letterbox' is not initialized.
WARNING:Validate.vdmpp:5001:9,7:Instance variable 'code' is not initialized.
WARNING:Letter.vdmpp:5001:13,17:Instance variable 'balance' is not initialized.
WARNING:IllegalCard.vdmpp:5001:8,9:Instance variable 'mycard' is not initialized.
WARNING:InsertCard.vdmpp:5001:11,9:Instance variable 'mycard' is not initialized.
WARNING:Validate.vdmpp:5001:8,9:Instance variable 'tillid' is not initialized.
WARNING:CentralResource.vdmpp:5001:19,8:Instance variable 'clock' is not initialized.
WARNING:ReturnCard.vdmpp:5001:11,9:Instance variable 'tillid' is not initialized.
WARNING:Account.vdmpp:5001:11,8:Instance variable 'cards' is not initialized.
WARNING:InsertCard.vdmpp:5001:10,9:Instance variable 'tillid' is not initialized.
RESULT:result:-1:-1,-1:class Withdrawal is subclass of Eventprivate instance variable tillid'TillIdprivate instance variable amount'natpublic explicit operation Init(TillId, nat)'(TillId * nat ==> Withdrawal)public explicit operation execute(System)'(System ==> TestResult)end Withdrawalclass CentralResourceprivate instance variable accounts'map (AccountId) to (Account)private instance variable numberOfTries'map (CardId) to (nat)private instance variable illegalCards'set of (CardId)private invariant inv_CentralResource'boolprivate instance variable letterbox'Letterboxprivate instance variable clock'Clockprivate invariant inv_CentralResource'boolstatic private value maxNumberOfTries'natpublic explicit operation AddLetterbox(Clock, Letterbox)'(Clock * Letterbox ==> ())public explicit operation GetBalance(AccountId)'(AccountId ==> [nat])public explicit operation Withdrawal(AccountId, CardId, nat)'(AccountId * CardId * nat ==> bool)public explicit operation PostStatement(AccountId, CardId)'(AccountId * CardId ==> bool)public explicit operation IsLegalCard(AccountId, CardId)'(AccountId * CardId ==> bool)public explicit operation NumberOfTriesExceeded(CardId)'(CardId ==> bool)public explicit operation ResetNumberOfTries(CardId)'(CardId ==> ())public explicit operation IncrNumberOfTries(CardId)'(CardId ==> ())public explicit operation AddAccount(AccountId, Account)'(AccountId * Account ==> ())public explicit operation AddIllegalCard(CardId)'(CardId ==> ())end CentralResourceclass InsertCard is subclass of Eventprivate instance variable tillid'TillIdprivate instance variable mycard'Cardpublic explicit operation Init(TillId, Card)'(TillId * Card ==> InsertCard)public explicit operation execute(System)'(System ==> TestResult)end InsertCardclass GetBalance is subclass of Eventprivate instance variable tillid'TillIdpublic explicit operation Init(TillId)'(TillId ==> GetBalance)public explicit operation execute(System)'(System ==> TestResult)end GetBalanceclass IllegalCard is subclass of Eventprivate instance variable mycard'CardIdpublic explicit operation Init(CardId)'(CardId ==> IllegalCard)public explicit operation execute(System)'(System ==> TestResult)end IllegalCardclass Accountprivate instance variable cards'map (CardId) to (Cardholder)private instance variable balance'natprivate instance variable transactions'seq of (Transaction)private invariant inv_Account'boolstatic private value dailyLimit'natstatic public type AccountId'AccountIdstatic public type Transaction'Transactionprivate explicit operation ValidTransaction(Transaction)'(Transaction ==> bool)public explicit operation Create(map (CardId) to (Cardholder), nat)'(map (CardId) to (Cardholder) * nat ==> Account)public explicit operation GetBalance()'(() ==> nat)public explicit operation Withdrawal(CardId, nat, Date)'(CardId * nat * Date ==> bool)public explicit operation MakeStatement(CardId, Date)'(CardId * Date ==> Letter)public explicit operation GetCardIds()'(() ==> set of (CardId))public explicit operation AddCard(CardId, Cardholder)'(CardId * Cardholder ==> ())public explicit operation RemoveCard(CardId)'(CardId ==> ())private explicit function TransactionsInvariant(seq of (Transaction))'(seq of (Transaction) +> bool)private explicit function DateTotal(Date, seq of (Transaction))'(Date * seq of (Transaction) +> nat)private explicit function Sum(seq of (real))'(seq of (real) +> real)end Accountclass Teststatic public type TestResult'TestResultprivate instance variable system'Systempublic explicit operation runTests(seq of (Event))'(seq of (Event) ==> seq of (TestResult))public explicit operation runOneTest(Event)'(Event ==> TestResult)end Testclass SimpleTeststatic private value c1'Cardstatic private value cards'set of (Card)static private value resource'CentralResourcestatic private value tills'map (TillId) to (Till)private instance variable clock'Clockprivate instance variable letterbox'Letterboxstatic public type TillId'TillIdpublic explicit operation Run()'(() ==> bool)end SimpleTestclass Validate is subclass of Eventprivate instance variable tillid'TillIdprivate instance variable code'PinCodepublic explicit operation Init(TillId, PinCode)'(TillId * PinCode ==> Validate)public explicit operation execute(System)'(System ==> TestResult)end Validateclass Letterboxprivate instance variable statements'seq of (Letter)public explicit operation PostStatement(Letter)'(Letter ==> ())public explicit operation GetLastStatement()'(() ==> Letter)end Letterboxclass Tillprivate instance variable curCard'[Card]private instance variable cardOk'boolprivate instance variable retainedCards'set of (Card)private instance variable resource'CentralResourceprivate invariant inv_Till'boolpublic explicit operation Till(CentralResource)'(CentralResource ==> Till)public explicit operation InsertCard(Card)'(Card ==> ())public explicit operation Validate(PinCode)'(PinCode ==> (<PinNotOk> | <PinOk> | <Retained>))public explicit operation ReturnCard()'(() ==> ())public explicit operation GetBalance()'(() ==> [nat])public explicit operation MakeWithdrawal(nat)'(nat ==> bool)public explicit operation RequestStatement()'(() ==> bool)public explicit operation IsLegalCard()'(() ==> bool)public explicit operation CardValidated()'(() ==> bool)public explicit operation CardInside()'(() ==> bool)private explicit function Encode(PinCode)'(PinCode +> Code)end Tillclass Cardholderstatic public type Address'Addressstatic public type Name'Nameprivate instance variable name'Nameprivate instance variable address'Addresspublic explicit operation Create(Name, Address)'(Name * Address ==> Cardholder)public explicit operation GetName()'(() ==> Name)public explicit operation GetAddress()'(() ==> Address)end Cardholderclass Clockstatic public type Date'Dateprivate instance variable date'Datepublic explicit operation SetDate(Date)'(Date ==> ())public explicit operation GetDate()'(() ==> Date)end Clockclass ReturnCard is subclass of Eventprivate instance variable tillid'TillIdpublic explicit operation Init(TillId)'(TillId ==> ReturnCard)public explicit operation execute(System)'(System ==> TestResult)end ReturnCardclass Cardstatic public type CardId'CardIdstatic public type Code'Codestatic public type PinCode'PinCodeprivate instance variable code'Codeprivate instance variable cardId'CardIdprivate instance variable accountId'AccountIdpublic explicit operation Card(Code, CardId, AccountId)'(Code * CardId * AccountId ==> Card)public explicit operation GetCode()'(() ==> Code)public explicit operation GetAccountId()'(() ==> AccountId)public explicit operation GetCardId()'(() ==> CardId)end Cardclass SendStatement is subclass of Eventprivate instance variable tillid'TillIdpublic explicit operation Init(TillId)'(TillId ==> SendStatement)public explicit operation execute(System)'(System ==> TestResult)end SendStatementclass Systemstatic private value c1'Cardstatic private value c2'Cardstatic private value c3'Cardstatic private value c4'Cardstatic private value c5'Cardstatic private value c6'Cardstatic private value c7'Cardstatic private value cards'set of (Card)static private value resource'CentralResourcestatic private value tills'map (TillId) to (Till)private instance variable clock'Clockprivate instance variable letterbox'Letterboxstatic public type TillId'TillIdpublic explicit operation GetTill(TillId)'(TillId ==> Till)public explicit operation GetResource()'(() ==> CentralResource)public explicit operation System()'(() ==> System)public trace '(() ==> ())public trace '(() ==> ())end Systemclass Eventpublic explicit operation execute(System)'(System ==> TestResult)end Eventclass Letterpublic instance variable name'Namepublic instance variable address'Addresspublic instance variable date'Datepublic instance variable transactions'seq of (Transaction)public instance variable balance'natpublic explicit operation Create(Name, Address, Date, seq of (Transaction), nat)'(Name * Address * Date * seq of (Transaction) * nat ==> Letter)end Letter

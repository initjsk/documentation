RESULT:result:-1:-1,-1:class Letterpublic instance variable name'(unresolved Cardholder`Name)public instance variable address'(unresolved Cardholder`Address)public instance variable date'(unresolved Clock`Date)public instance variable transactions'seq of ((unresolved Account`Transaction))public instance variable balance'natpublic explicit operation Create'((unresolved Cardholder`Name) * (unresolved Cardholder`Address) * (unresolved Clock`Date) * seq of ((unresolved Account`Transaction)) * nat ==> (unresolved Letter`Letter))end Letterclass GetBalance is subclass of Eventprivate instance variable tillid'(unresolved System`TillId)public explicit operation Init'((unresolved System`TillId) ==> (unresolved GetBalance`GetBalance))public explicit operation execute'((unresolved GetBalance`System) ==> (unresolved Test`TestResult))end GetBalanceclass Eventpublic explicit operation execute'((unresolved Event`System) ==> (unresolved Test`TestResult))end Eventclass Validate is subclass of Eventprivate instance variable tillid'(unresolved System`TillId)private instance variable code'(unresolved Card`PinCode)public explicit operation Init'((unresolved System`TillId) * (unresolved Card`PinCode) ==> (unresolved Validate`Validate))public explicit operation execute'((unresolved Validate`System) ==> (unresolved Test`TestResult))end Validateclass CentralResourceprivate instance variable accounts'map ((unresolved Account`AccountId)) to ((unresolved CentralResource`Account))private instance variable numberOfTries'map ((unresolved Card`CardId)) to (nat)private instance variable illegalCards'set of ((unresolved Card`CardId))private invariant inv_CentralResource'boolprivate instance variable letterbox'(unresolved CentralResource`Letterbox)private instance variable clock'(unresolved CentralResource`Clock)private invariant inv_CentralResource'boolstatic private value maxNumberOfTries'natpublic explicit operation AddLetterbox'((unresolved CentralResource`Clock) * (unresolved CentralResource`Letterbox) ==> ())public explicit operation GetBalance'((unresolved Account`AccountId) ==> [nat])public explicit operation Withdrawal'((unresolved Account`AccountId) * (unresolved Card`CardId) * nat ==> bool)public explicit operation PostStatement'((unresolved Account`AccountId) * (unresolved Card`CardId) ==> bool)public explicit operation IsLegalCard'((unresolved Account`AccountId) * (unresolved Card`CardId) ==> bool)public explicit operation NumberOfTriesExceeded'((unresolved Card`CardId) ==> bool)public explicit operation ResetNumberOfTries'((unresolved Card`CardId) ==> ())public explicit operation IncrNumberOfTries'((unresolved Card`CardId) ==> ())public explicit operation AddAccount'((unresolved Account`AccountId) * (unresolved CentralResource`Account) ==> ())public explicit operation AddIllegalCard'((unresolved Card`CardId) ==> ())end CentralResourceclass ReturnCard is subclass of Eventprivate instance variable tillid'(unresolved System`TillId)public explicit operation Init'((unresolved System`TillId) ==> (unresolved ReturnCard`ReturnCard))public explicit operation execute'((unresolved ReturnCard`System) ==> (unresolved Test`TestResult))end ReturnCardclass SendStatement is subclass of Eventprivate instance variable tillid'(unresolved System`TillId)public explicit operation Init'((unresolved System`TillId) ==> (unresolved SendStatement`SendStatement))public explicit operation execute'((unresolved SendStatement`System) ==> (unresolved Test`TestResult))end SendStatementclass InsertCard is subclass of Eventprivate instance variable tillid'(unresolved System`TillId)private instance variable mycard'(unresolved InsertCard`Card)public explicit operation Init'((unresolved System`TillId) * (unresolved InsertCard`Card) ==> (unresolved InsertCard`InsertCard))public explicit operation execute'((unresolved InsertCard`System) ==> (unresolved Test`TestResult))end InsertCardclass IllegalCard is subclass of Eventprivate instance variable mycard'(unresolved Card`CardId)public explicit operation Init'((unresolved Card`CardId) ==> (unresolved IllegalCard`IllegalCard))public explicit operation execute'((unresolved IllegalCard`System) ==> (unresolved Test`TestResult))end IllegalCardclass Letterboxprivate instance variable statements'seq of ((unresolved Letterbox`Letter))public explicit operation PostStatement'((unresolved Letterbox`Letter) ==> ())public explicit operation GetLastStatement'(() ==> (unresolved Letterbox`Letter))end Letterboxclass Tillprivate instance variable curCard'[(unresolved Till`Card)]private instance variable cardOk'boolprivate instance variable retainedCards'set of ((unresolved Till`Card))private instance variable resource'(unresolved Till`CentralResource)private invariant inv_Till'boolpublic explicit operation Till'((unresolved Till`CentralResource) ==> (unresolved Till`Till))public explicit operation InsertCard'((unresolved Till`Card) ==> ())public explicit operation Validate'((unresolved Card`PinCode) ==> (<PinNotOk> | <PinOk> | <Retained>))public explicit operation ReturnCard'(() ==> ())public explicit operation GetBalance'(() ==> [nat])public explicit operation MakeWithdrawal'(nat ==> bool)public explicit operation RequestStatement'(() ==> bool)public explicit operation IsLegalCard'(() ==> bool)public explicit operation CardValidated'(() ==> bool)public explicit operation CardInside'(() ==> bool)private explicit function Encode'((unresolved Card`PinCode) +> (unresolved Card`Code))end Tillclass Teststatic public type TestResult'TestResultprivate instance variable system'(unresolved Test`System)public explicit operation runTests'(seq of ((unresolved Test`Event)) ==> seq of ((unresolved Test`TestResult)))public explicit operation runOneTest'((unresolved Test`Event) ==> (unresolved Test`TestResult))end Testclass Withdrawal is subclass of Eventprivate instance variable tillid'(unresolved System`TillId)private instance variable amount'natpublic explicit operation Init'((unresolved System`TillId) * nat ==> (unresolved Withdrawal`Withdrawal))public explicit operation execute'((unresolved Withdrawal`System) ==> (unresolved Test`TestResult))end Withdrawalclass SimpleTeststatic private value c1'(unresolved SimpleTest`Card)static private value cards'set of ((unresolved SimpleTest`Card))static private value resource'(unresolved SimpleTest`CentralResource)static private value tills'map ((unresolved SimpleTest`TillId)) to ((unresolved SimpleTest`Till))private instance variable clock'(unresolved SimpleTest`Clock)private instance variable letterbox'(unresolved SimpleTest`Letterbox)static public type TillId'TillIdpublic explicit operation Run'(() ==> bool)end SimpleTestclass Cardholderstatic public type Address'Addressstatic public type Name'Nameprivate instance variable name'(unresolved Cardholder`Name)private instance variable address'(unresolved Cardholder`Address)public explicit operation Create'((unresolved Cardholder`Name) * (unresolved Cardholder`Address) ==> (unresolved Cardholder`Cardholder))public explicit operation GetName'(() ==> (unresolved Cardholder`Name))public explicit operation GetAddress'(() ==> (unresolved Cardholder`Address))end Cardholderclass Systemstatic private value c1'(unresolved System`Card)static private value c2'(unresolved System`Card)static private value c3'(unresolved System`Card)static private value c4'(unresolved System`Card)static private value c5'(unresolved System`Card)static private value c6'(unresolved System`Card)static private value c7'(unresolved System`Card)static private value cards'set of ((unresolved System`Card))static private value resource'(unresolved System`CentralResource)static private value tills'map ((unresolved System`TillId)) to ((unresolved System`Till))private instance variable clock'(unresolved System`Clock)private instance variable letterbox'(unresolved System`Letterbox)static public type TillId'TillIdpublic explicit operation GetTill'((unresolved System`TillId) ==> (unresolved System`Till))public explicit operation GetResource'(() ==> (unresolved System`CentralResource))public explicit operation System'(() ==> (unresolved System`System))public trace '(() ==> ())public trace '(() ==> ())end Systemclass Accountprivate instance variable cards'map ((unresolved Card`CardId)) to ((unresolved Account`Cardholder))private instance variable balance'natprivate instance variable transactions'seq of ((unresolved Account`Transaction))private invariant inv_Account'boolstatic private value dailyLimit'natstatic public type AccountId'AccountIdstatic public type Transaction'Transactionprivate explicit operation ValidTransaction'((unresolved Account`Transaction) ==> bool)public explicit operation Create'(map ((unresolved Card`CardId)) to ((unresolved Account`Cardholder)) * nat ==> (unresolved Account`Account))public explicit operation GetBalance'(() ==> nat)public explicit operation Withdrawal'((unresolved Card`CardId) * nat * (unresolved Clock`Date) ==> bool)public explicit operation MakeStatement'((unresolved Card`CardId) * (unresolved Clock`Date) ==> (unresolved Account`Letter))public explicit operation GetCardIds'(() ==> set of ((unresolved Card`CardId)))public explicit operation AddCard'((unresolved Card`CardId) * (unresolved Account`Cardholder) ==> ())public explicit operation RemoveCard'((unresolved Card`CardId) ==> ())private explicit function TransactionsInvariant'(seq of ((unresolved Account`Transaction)) +> bool)private explicit function DateTotal'((unresolved Clock`Date) * seq of ((unresolved Account`Transaction)) +> nat)private explicit function Sum'(seq of (real) +> real)end Accountclass Cardstatic public type CardId'CardIdstatic public type Code'Codestatic public type PinCode'PinCodeprivate instance variable code'(unresolved Card`Code)private instance variable cardId'(unresolved Card`CardId)private instance variable accountId'(unresolved Account`AccountId)public explicit operation Card'((unresolved Card`Code) * (unresolved Card`CardId) * (unresolved Account`AccountId) ==> (unresolved Card`Card))public explicit operation GetCode'(() ==> (unresolved Card`Code))public explicit operation GetAccountId'(() ==> (unresolved Account`AccountId))public explicit operation GetCardId'(() ==> (unresolved Card`CardId))end Cardclass Clockstatic public type Date'Dateprivate instance variable date'(unresolved Clock`Date)public explicit operation SetDate'((unresolved Clock`Date) ==> ())public explicit operation GetDate'(() ==> (unresolved Clock`Date))end Clock

WARNING:TimeStamp.vdmpp:5001:33,12:Instance variable 'debugSet' is not initialized.
WARNING:RateController.vdmpp:5001:9,10:Instance variable 'rateplan' is not initialized.
WARNING:Environment.vdmpp:5001:43,14:Instance variable 'accelerometer' is not initialized.
RESULT:result:-1:-1,-1:class IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass Accelerometer is subclass of GLOBALpublic explicit operation stimulate(ActivityData)'(ActivityData ==> ())end Accelerometerclass TimeStampstatic public value stepLength'natprivate instance variable currentTime'natprivate instance variable wakeUpMap'map (nat) to ([nat])private instance variable barrierCount'nat1private instance variable debugSet'set of (nat)public explicit operation TimeStamp(nat1)'(nat1 ==> TimeStamp)public explicit operation WaitRelative(nat)'(nat ==> ())public explicit operation WaitAbsolute(nat)'(nat ==> ())private explicit operation BarrierReached()'(() ==> ())private explicit operation AddToWakeUpMap(nat, [nat])'(nat * [nat] ==> ())public explicit operation NotifyThread(nat)'(nat ==> ())public explicit operation GetTime()'(() ==> nat)private explicit operation Awake()'(() ==> ())public explicit operation ThreadDone()'(() ==> ())private permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end TimeStampclass RateController is subclass of GLOBALprivate instance variable rateplan'map (Time) to (Time)private instance variable sensed'[ActivityData]private instance variable interval'Timeprivate instance variable finished'boolprivate instance variable LRL'PPMprivate instance variable MSR'PPMprivate instance variable threshold'nat1private instance variable reactionT'Timeprivate instance variable recoveryT'Timeprivate instance variable responseF'nat1private invariant inv_RateController'boolpublic explicit operation RateController()'(() ==> RateController)public explicit operation getInterval()'(() ==> Time)private explicit operation controlRate()'(() ==> ())public explicit operation stimulate(ActivityData)'(ActivityData ==> ())private explicit operation increaseRate()'(() ==> ())private explicit operation decreaseRate()'(() ==> ())public explicit operation finish()'(() ==> ())public explicit operation isFinished()'(() ==> ())protected thread thread'?private mutex predicate '?private mutex predicate '?private permission predicate 'boolprivate permission predicate 'boolstatic private value MED'ActivityDataend RateControllerclass Lead is subclass of GLOBALprivate instance variable chamber'Chamberprivate instance variable scheduledPulse'[(Time * Pulse)]public explicit operation Lead(Chamber)'(Chamber ==> Lead)public explicit operation getChamber()'(() ==> Chamber)public explicit operation stimulate(Sense)'(Sense ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation addLeadPace(Pulse, Time)'(Pulse * Time ==> ())private explicit operation followPlan()'(() ==> ())private explicit operation dischargePulse(Pulse)'(Pulse ==> ())protected thread thread'?private permission predicate 'boolprivate mutex predicate '?private mutex predicate '?end Leadclass HeartController is subclass of GLOBALprivate instance variable leads'map (Chamber) to (Lead)private instance variable sensed'map (Chamber) to (Sense)private instance variable mode'Modeprivate instance variable finished'boolprivate instance variable FixedAV'Timeprivate instance variable lastpulse'Timeprivate instance variable ARP'Timeprivate instance variable interval'Timepublic explicit operation HeartController()'(() ==> HeartController)public explicit operation addLeadPacer(Lead)'(Lead ==> ())public explicit operation pace()'(() ==> ())private explicit operation PaceAOO()'(() ==> ())private explicit operation PaceAAT()'(() ==> ())private explicit operation PaceDOO()'(() ==> ())public explicit operation finish()'(() ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation sensorNotify(Sense, Chamber)'(Sense * Chamber ==> ())public explicit operation setInterval(Time)'(Time ==> ())public explicit operation setMode(Mode)'(Mode ==> ())protected thread thread'?private permission predicate 'boolprivate mutex predicate '?end HeartControllerclass GLOBALstatic public type Sense'Sensestatic public type Chamber'Chamberstatic public type ActivityData'ActivityDatastatic public type Pulse'Pulsestatic public type Mode'Modestatic public type PPM'PPMstatic public type Time'Timeend GLOBALclass World is subclass of GLOBALstatic public instance variable env'[Environment]static public instance variable timerRef'TimeStamppublic explicit operation World(seq of (char), Mode)'(seq of (char) * Mode ==> World)public explicit operation Run()'(() ==> ())end Worldclass Pacemakerstatic public instance variable atriaLead'Leadstatic public instance variable ventricleLead'Leadstatic public instance variable accelerometer'Accelerometerstatic public instance variable rateController'RateControllerstatic public instance variable heartController'HeartControllerend Pacemakerclass Environment is subclass of GLOBALstatic public type InputTP'InputTPstatic public type Inpline'Inplinestatic public type Outline'Outlineprivate instance variable io'IOprivate instance variable inplines'seq of (Inpline)private instance variable outlines'seq of (Outline)private instance variable busy'boolprivate instance variable simtime'Timeprivate instance variable leads'map (Chamber) to (Lead)private instance variable accelerometer'Accelerometerpublic explicit operation Environment(seq of (char))'(seq of (char) ==> Environment)public explicit operation addLeadSensor(Lead)'(Lead ==> ())public explicit operation addAccelerometer(Accelerometer)'(Accelerometer ==> ())private explicit operation createSignal()'(() ==> ())public explicit operation handleEvent(Pulse, Chamber, Time)'(Pulse * Chamber * Time ==> ())public explicit operation showResult()'(() ==> ())public explicit operation isFinished()'(() ==> ())protected thread thread'?private mutex predicate '?private permission predicate 'boolend Environment

RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)responseDB' map sequence compatible obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 7'3forall m1, m2 in set {{<MissileA> |-> [mk_(<FlareOneA>, 900), mk_(<FlareTwoA>, 500), mk_(<DoNothingA>, 100), mk_(<FlareOneA>, 500)]}, {<MissileB> |-> [mk_(<FlareTwoB>, 500), mk_(<FlareTwoB>, 700)]}, {<MissileC> |-> [mk_(<FlareOneC>, 400), mk_(<DoNothingC>, 100), mk_(<FlareTwoC>, 400), mk_(<FlareOneC>, 500)]}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 2' (Unproved)missilePriority' map sequence compatible obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 19'3forall m1, m2 in set {{<None> |-> 0}, {<MissileA> |-> 1}, {<MissileB> |-> 2}, {<MissileC> |-> 3}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 3' (Unproved)addThreat(EventId, MissileType, Time)' map apply obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 50'6pmt in set dom missilePriorityProof Obligation 4' (Unproved)addThreat(EventId, MissileType, Time)' map apply obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 54'34pmt in set dom responseDBProof Obligation 5' (Unproved)addThreat(EventId, MissileType, Time), fltp, fltime' non-empty sequence obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 58'36newplan <> []Proof Obligation 6' (Unproved)addThreat(EventId, MissileType, Time)' non-empty sequence obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 62'24newplan <> []Proof Obligation 7' (Unproved)addThreat(EventId, MissileType, Time)' map apply obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 64'21pmt in set dom missilePriorityProof Obligation 8' (Unproved)evalQueue()' while loop termination obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 74'10while (not done) do ...Proof Obligation 9' (Unproved)evalQueue(), first' non-empty sequence obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 75'40curplan <> []Proof Obligation 10' (Unproved)evalQueue(), next' non-empty sequence obligation in 'FlareDispenser' (../../documentation/examples/VDM++/CMConc/flaredispenser.vdmpp) at line 76'35curplan <> []Proof Obligation 11' (Unproved)inv_MissileDetector' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 13'1-- After instance variable initializers((dom ranges) = (dom controllers))Proof Obligation 12' (Unproved)addController(FlareController)' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 28'6-- After ranges '= (ranges munion {nid |-> (pctrl.getAperture)()})((dom ranges) = (dom controllers))Proof Obligation 13' (Unproved)addController(FlareController)' map compatible obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 28'16forall ldom1 in set dom ranges, rdom2 in set dom {nid |-> (pctrl.getAperture)()} &ldom1 = rdom2 => ranges(ldom1) = {nid |-> (pctrl.getAperture)()}(rdom2)Proof Obligation 14' (Unproved)addController(FlareController)' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 29'6-- After controllers '= (controllers munion {nid |-> pctrl})((dom ranges) = (dom controllers))Proof Obligation 15' (Unproved)addController(FlareController)' map compatible obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 29'21forall ldom1 in set dom controllers, rdom2 in set dom {nid |-> pctrl} &ldom1 = rdom2 => controllers(ldom1) = {nid |-> pctrl}(rdom2)Proof Obligation 16' (Unproved)addThreat(EventId, MissileType, Angle, Time)' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 38'4-- After threats '= (threats ^ [mk_(evid, pmt, pa, pt)])((dom ranges) = (dom controllers))Proof Obligation 17' (Unproved)addThreat(EventId, MissileType, Angle, Time)' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 39'4-- After busy '= true((dom ranges) = (dom controllers))Proof Obligation 18' (Unproved)getThreat(), res' non-empty sequence obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 44'57threats <> []Proof Obligation 19' (Unproved)getThreat()' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 45'4-- After threats '= (tl threats)((dom ranges) = (dom controllers))Proof Obligation 20' (Unproved)getThreat()' non-empty sequence obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 45'18threats <> []Proof Obligation 21' (Unproved)processSensor(), papplhs, pappsize' map apply obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 57'37id in set dom rangesProof Obligation 22' (Unproved)processSensor()' state invariant obligation in 'MissileDetector' (../../documentation/examples/VDM++/CMConc/missiledetector.vdmpp) at line 60'4-- After busy '= ((len threats) > 0)((dom ranges) = (dom controllers))Proof Obligation 23' (Unproved)BarrierReached()' operation post condition obligation in 'TimeStamp' (../../documentation/examples/VDM++/CMConc/TimeStamp.vdmpp) at line 53'1(forall x in set (rng wakeUpMap) & ((x = nil) or (x >= currentTime)))Proof Obligation 24' (Unproved)BarrierReached()' while loop termination obligation in 'TimeStamp' (../../documentation/examples/VDM++/CMConc/TimeStamp.vdmpp) at line 56'5while ((card (dom wakeUpMap)) = barrierCount) do ...Proof Obligation 25' (Trivial by <forall x in set s & x in set s>)BarrierReached(), threadSet' map apply obligation in 'TimeStamp' (../../documentation/examples/VDM++/CMConc/TimeStamp.vdmpp) at line 60'44(forall th in set (dom wakeUpMap) &  th in set dom wakeUpMap)Proof Obligation 26' (Unproved)BarrierReached(), threadSet' map apply obligation in 'TimeStamp' (../../documentation/examples/VDM++/CMConc/TimeStamp.vdmpp) at line 60'69(forall th in set (dom wakeUpMap) &  ((wakeUpMap(th) <> nil) =>    th in set dom wakeUpMap))Proof Obligation 27' (Unproved)getAperture()' subtype obligation in 'Sensor' (../../documentation/examples/VDM++/CMConc/sensor.vdmpp) at line 18'8is_(RESULT, (Angle * Angle))Proof Obligation 28' (Unproved)FlareController(Angle)' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 22'8-- After FlareController(Angle) constructor body((dom ranges) = (dom dispensers))Proof Obligation 29' (Unproved)addDispenser(FlareDispenser)' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 30'8-- After ranges '= (ranges munion {id |-> mk_(angle, DISPENSER_APERTURE)})((dom ranges) = (dom dispensers))Proof Obligation 30' (Unproved)addDispenser(FlareDispenser)' map compatible obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 30'18forall ldom1 in set dom ranges, rdom2 in set dom {id |-> mk_(angle, DISPENSER_APERTURE)} &ldom1 = rdom2 => ranges(ldom1) = {id |-> mk_(angle, DISPENSER_APERTURE)}(rdom2)Proof Obligation 31' (Unproved)addDispenser(FlareDispenser)' subtype obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 30'25is_((ranges munion {id |-> mk_(angle, DISPENSER_APERTURE)}), map (nat) to ((Angle * Angle)))Proof Obligation 32' (Unproved)addDispenser(FlareDispenser)' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 32'8-- After dispensers '= (dispensers munion {id |-> pfldisp})((dom ranges) = (dom dispensers))Proof Obligation 33' (Unproved)addDispenser(FlareDispenser)' map compatible obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 32'22forall ldom1 in set dom dispensers, rdom2 in set dom {id |-> pfldisp} &ldom1 = rdom2 => dispensers(ldom1) = {id |-> pfldisp}(rdom2)Proof Obligation 34' (Unproved)getAperture()' subtype obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 38'8is_(RESULT, (Angle * Angle))Proof Obligation 35' (Unproved)addThreat(EventId, MissileType, Angle, Time)' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 46'4-- After threats '= (threats ^ [mk_(evid, pmt, pa, pt)])((dom ranges) = (dom dispensers))Proof Obligation 36' (Unproved)addThreat(EventId, MissileType, Angle, Time)' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 47'4-- After busy '= true((dom ranges) = (dom dispensers))Proof Obligation 37' (Unproved)getThreat(), res' non-empty sequence obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 52'57threats <> []Proof Obligation 38' (Unproved)getThreat()' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 53'4-- After threats '= (tl threats)((dom ranges) = (dom dispensers))Proof Obligation 39' (Unproved)getThreat()' non-empty sequence obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 53'18threats <> []Proof Obligation 40' (Unproved)processThreat(), papplhs, pappsize' map apply obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 65'38id in set dom rangesProof Obligation 41' (Unproved)processThreat()' state invariant obligation in 'FlareController' (../../documentation/examples/VDM++/CMConc/flarecontroller.vdmpp) at line 68'5-- After busy '= ((len threats) > 0)((dom ranges) = (dom dispensers))Proof Obligation 42' (Unproved)writeval(@p)' subtype obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 38'15(forall val'@p &  is_(writeval(val), bool))Proof Obligation 43' (Unproved)fwriteval(seq1 of (char), @p, filedirective)' subtype obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 52'15(forall filename'seq1 of (char), val'@p, fdir'filedirective &  is_(fwriteval(filename, val, fdir), bool))Proof Obligation 44' (Unproved)freadval(seq1 of (char))' post condition obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 64'15(forall filename'seq1 of (char) &  post_freadval(filename, freadval(filename)))Proof Obligation 45' (Unproved)freadval(seq1 of (char))' subtype obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 64'15(forall filename'seq1 of (char) &  is_(freadval(filename), (bool * [@p])))Proof Obligation 46' (Unproved)Environment(seq of (char)), timeval, input' function apply obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 36'36pre_(((io.freadval))[InputTP], fname)Proof Obligation 47' (Unproved)Environment(seq of (char))' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 34'8-- After Environment(seq of (char)) constructor body((dom ranges) = (dom sensors))Proof Obligation 48' (Unproved)addSensor(Sensor)' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 44'5-- After ranges '= (ranges munion {id |-> (psens.getAperture)()})((dom ranges) = (dom sensors))Proof Obligation 49' (Unproved)addSensor(Sensor)' map compatible obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 44'15forall ldom1 in set dom ranges, rdom2 in set dom {id |-> (psens.getAperture)()} &ldom1 = rdom2 => ranges(ldom1) = {id |-> (psens.getAperture)()}(rdom2)Proof Obligation 50' (Unproved)addSensor(Sensor)' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 45'5-- After sensors '= (sensors munion {id |-> psens})((dom ranges) = (dom sensors))Proof Obligation 51' (Unproved)addSensor(Sensor)' map compatible obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 45'16forall ldom1 in set dom sensors, rdom2 in set dom {id |-> psens} &ldom1 = rdom2 => sensors(ldom1) = {id |-> psens}(rdom2)Proof Obligation 52' (Unproved)createSignal()' while loop termination obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 54'10while (not done) do ...Proof Obligation 53' (Unproved)createSignal(), eventid, pmt, pa, pt' non-empty sequence obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 55'48inlines <> []Proof Obligation 54' (Unproved)createSignal(), papplhs, pappsize' map apply obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 58'50id in set dom rangesProof Obligation 55' (Unproved)createSignal()' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 61'20-- After inlines '= (tl inlines)((dom ranges) = (dom sensors))Proof Obligation 56' (Unproved)createSignal()' non-empty sequence obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 61'34inlines <> []Proof Obligation 57' (Unproved)createSignal()' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 62'20-- After done '= ((len inlines) = 0)((dom ranges) = (dom sensors))Proof Obligation 58' (Unproved)createSignal()' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 64'20-- After done '= true((dom ranges) = (dom sensors))Proof Obligation 59' (Unproved)createSignal()' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 66'10-- After busy '= false((dom ranges) = (dom sensors))Proof Obligation 60' (Unproved)handleEvent(EventId, FlareType, Angle, Time, Time)' state invariant obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 71'4-- After outlines '= (outlines ^ [mk_(evid, pfltp, angle, pt1, pt2)])((dom ranges) = (dom sensors))Proof Obligation 61' (Unproved)showResult()' function apply obligation in 'Environment' (../../documentation/examples/VDM++/CMConc/environment.vdmpp) at line 75'11pre_(((io.writeval))[seq of (outline)], outlines)

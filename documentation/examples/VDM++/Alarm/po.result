RESULT:result:-1:-1,-1:Proof Obligation 1' (Trivial by <forall x in set s & x in set s>)PlantInv(set of (Alarm), map (Period) to (set of (Expert)))' map apply obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 17'30(forall p in set (dom sch) &  p in set dom sch)Proof Obligation 2' (Trivial by <forall x in set s & x in set s>)PlantInv(set of (Alarm), map (Period) to (set of (Expert)))' map apply obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 20'29((forall p in set (dom sch) & (sch(p) <> {})) =>  (forall a in set as &    (forall p in set (dom sch) &      p in set dom sch)))Proof Obligation 3' (Unproved)ExpertToPage(Alarm, Period)' map apply obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 39'22(let expert'Expert = RESULT in  p in set dom schedule)Proof Obligation 4' (Unproved)ExpertToPage(Alarm, Period)' operation post condition obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 29'8let expert'Expert = RESULT in ((expert in set schedule(p)) and ((a.GetReqQuali)() in set (expert.GetQuali)()))Proof Obligation 5' (Unproved)ExpertToPage(Alarm, Period)' let be st existence obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 31'7exists expert in set schedule(p) & ((a.GetReqQuali)() in set (expert.GetQuali)())Proof Obligation 6' (Unproved)ExpertToPage(Alarm, Period)' map apply obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 31'21p in set dom scheduleProof Obligation 7' (Unproved)NumberOfExperts(Period)' map apply obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 46'15p in set dom scheduleProof Obligation 8' (Trivial by <forall x in set s & x in set s>)ExpertIsOnDuty(Expert)' map apply obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 52'25(forall p in set (dom schedule) &  p in set dom schedule)Proof Obligation 9' (Unproved)Plant(set of (Alarm), map (Period) to (set of (Expert)))' state invariant obligation in 'Plant' (../../documentation/examples/VDM++/Alarm/plant.vdmpp) at line 54'8-- After Plant(set of (Alarm), map (Period) to (set of (Expert))) constructor bodyPlantInv(alarms, schedule)Proof Obligation 10' (Unproved)plant' map sequence compatible obligation in 'Test1' (../../documentation/examples/VDM++/Alarm/test1.vdmpp) at line 12'33forall m1, m2 in set {{p1 |-> {ex1, ex4}}, {p2 |-> {ex2, ex3}}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)

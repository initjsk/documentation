RESULT:result:-1:-1,-1:class GroupPhasestatic private value secondRoundWinners'?static private value secondRoundRunnersUp'?static public type Team'Teamstatic public type GroupName'GroupNamestatic private type Score'Scoreprivate instance variable gps'map ((unresolved GroupPhase`GroupName)) to (set of ((unresolved GroupPhase`Score)))private invariant inv_GroupPhase'boolprivate explicit function sc_init'(set of ((unresolved GroupPhase`Team)) -> set of ((unresolved GroupPhase`Score)))private explicit function clear_winner'(set of ((unresolved GroupPhase`Score)) -> bool)private explicit function winner_by_more_wins'(set of ((unresolved GroupPhase`Score)) -> bool)public explicit operation Win'((unresolved GroupPhase`Team) * (unresolved GroupPhase`Team) ==> ())private implicit operation Win2'((unresolved GroupPhase`Team) * (unresolved GroupPhase`Team) ==> ())private implicit operation GroupWinner'((unresolved GroupPhase`GroupName) ==> (unresolved GroupPhase`Team))private implicit operation GroupRunnerUp'((unresolved GroupPhase`GroupName) ==> (unresolved GroupPhase`Team))private explicit operation GroupWinner_expl'((unresolved GroupPhase`GroupName) ==> (unresolved GroupPhase`Team))private explicit operation GroupRunnerUp_expl'((unresolved GroupPhase`GroupName) ==> (unresolved GroupPhase`Team))private explicit operation SecondRound_expl'(() ==> seq of ((((unresolved GroupPhase`Team) * (unresolved GroupPhase`Team)))))private explicit operation Win_sd'((unresolved GroupPhase`Team) * (unresolved GroupPhase`Team) ==> ())private explicit operation GroupWinner_if'((unresolved GroupPhase`GroupName) ==> (unresolved GroupPhase`Team))private explicit operation RandomElement'(set of ((unresolved GroupPhase`Team)) ==> (unresolved GroupPhase`Team))public explicit operation GroupWinner_cases'((unresolved GroupPhase`GroupName) ==> (unresolved GroupPhase`Team))private explicit operation GroupWinners'(() ==> set of ((unresolved GroupPhase`Team)))end GroupPhaseclass UseGPprivate instance variable gp'(unresolved UseGP`GroupPhase)public trace '(() ==> ())end UseGP

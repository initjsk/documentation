RESULT:result:-1:-1,-1:class GroupPhasestatic private value secondRoundWinners'seq1 of ((<A> | <B> | <C> | <D> | <E> | <F> | <G> | <H>))static private value secondRoundRunnersUp'seq1 of ((<A> | <B> | <C> | <D> | <E> | <F> | <G> | <H>))static public type Team'Teamstatic public type GroupName'GroupNamestatic private type Score'Scoreprivate instance variable gps'map (GroupName) to (set of (Score))private invariant inv_GroupPhase'boolprivate explicit function sc_init(set of (Team))'(set of (Team) -> set of (Score))private explicit function clear_winner(set of (Score))'(set of (Score) -> bool)private explicit function winner_by_more_wins(set of (Score))'(set of (Score) -> bool)public explicit operation Win(Team, Team)'(Team * Team ==> ())private implicit operation Win2(Team, Team)'(Team * Team ==> ())private implicit operation GroupWinner(GroupName)'(GroupName ==> Team)private implicit operation GroupRunnerUp(GroupName)'(GroupName ==> Team)private explicit operation GroupWinner_expl(GroupName)'(GroupName ==> Team)private explicit operation GroupRunnerUp_expl(GroupName)'(GroupName ==> Team)private explicit operation SecondRound_expl()'(() ==> seq of ((Team * Team)))private explicit operation Win_sd(Team, Team)'(Team * Team ==> ())private explicit operation GroupWinner_if(GroupName)'(GroupName ==> Team)private explicit operation RandomElement(set of (Team))'(set of (Team) ==> Team)public explicit operation GroupWinner_cases(GroupName)'(GroupName ==> Team)private explicit operation GroupWinners()'(() ==> set of (Team))end GroupPhaseclass UseGPprivate instance variable gp'GroupPhasepublic trace '(() ==> ())end UseGP

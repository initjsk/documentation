RESULT:result:-1:-1,-1:Proof Obligation 1' (Trivial by <forall x in set s & x in set s>)RotCmdsPresent()' map apply obligation in 'RotationCommand' (../../documentation/examples/VDM++/SAFER/RotationCommand.vdmpp) at line 9'43(forall a in set (dom axesdir) &  a in set dom axesdir)Proof Obligation 2' (Unproved)Lookup(Direction, Direction, Direction)' map apply obligation in 'ThrusterSelectionTable' (../../documentation/examples/VDM++/SAFER/ThrusterSelectionTable.vdmpp) at line 21'12mk_(dir1, dir2, dir3) in set dom selectionsProof Obligation 3' (Unproved)CombineRotCmds(), aah_axes' map apply obligation in 'IntegratedCommand' (../../documentation/examples/VDM++/SAFER/IntegratedCommand.vdmpp) at line 32'44(forall a in set Command`allaxes &  a in set dom (rotcmd.GetAxesdir)())Proof Obligation 4' (Unproved)CombineRotCmds()' map set compatible obligation in 'IntegratedCommand' (../../documentation/examples/VDM++/SAFER/IntegratedCommand.vdmpp) at line 34'11forall m1, m2 in set {{a |-> (aah.GetRotcmd)()(a)} | a in set aah_axes} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 5' (Unproved)CombineRotCmds()' map apply obligation in 'IntegratedCommand' (../../documentation/examples/VDM++/SAFER/IntegratedCommand.vdmpp) at line 34'18(forall a in set aah_axes &  a in set dom (aah.GetRotcmd)())Proof Obligation 6' (Unproved)CombineRotCmds()' map set compatible obligation in 'IntegratedCommand' (../../documentation/examples/VDM++/SAFER/IntegratedCommand.vdmpp) at line 35'11forall m1, m2 in set {{a |-> (rotcmd.GetAxesdir)()(a)} | a in set (Command`allaxes \ aah_axes)} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 7' (Unproved)CombineRotCmds()' map apply obligation in 'IntegratedCommand' (../../documentation/examples/VDM++/SAFER/IntegratedCommand.vdmpp) at line 35'18(forall a in set (Command`allaxes \ aah_axes) &  a in set dom (rotcmd.GetAxesdir)())Proof Obligation 8' (Unproved)CombineRotCmds()' map compatible obligation in 'IntegratedCommand' (../../documentation/examples/VDM++/SAFER/IntegratedCommand.vdmpp) at line 34'11forall ldom1 in set dom {a |-> (aah.GetRotcmd)()(a) | a in set aah_axes}, rdom2 in set dom {a |-> (rotcmd.GetAxesdir)()(a) | a in set (Command`allaxes \ aah_axes)} &ldom1 = rdom2 => {a |-> (aah.GetRotcmd)()(a) | a in set aah_axes}(ldom1) = {a |-> (rotcmd.GetAxesdir)()(a) | a in set (Command`allaxes \ aah_axes)}(rdom2)Proof Obligation 9' (Unproved)ThrusterMatrix' sequence apply obligation in 'Interface' (../../documentation/examples/VDM++/SAFER/Interface.vdmpp) at line 17'56(forall tm'seq of (seq of (bool)) &  (((len tm) = 4) =>    (forall i in set (inds tm) &      i in set inds tm)))Proof Obligation 10' (Unproved)TransformInput(Input)' map sequence compatible obligation in 'Interface' (../../documentation/examples/VDM++/SAFER/Interface.vdmpp) at line 47'7(forall inp'Input &  (let [mode, aah, horiz, trans, vert, twist, roll, pitch, yaw]'Input = inp in    forall m1, m2 in set {{<axis3> |-> ConvertAxisCmd(roll)}, {<axis1> |-> ConvertAxisCmd(pitch)}, {<axis2> |-> ConvertAxisCmd(yaw)}} &      forall d3 in set dom m1, d4 in set dom m2 &        d3 = d4 => m1(d3) = m2(d4)))Proof Obligation 11' (Unproved)TransformInput(Input)' subtype obligation in 'Interface' (../../documentation/examples/VDM++/SAFER/Interface.vdmpp) at line 35'1(forall inp'Input &  is_(let [mode, aah, horiz, trans, vert, twist, roll, pitch, yaw]'Input = inp in mk_(ConvertAxisCmd(horiz), ConvertAxisCmd(twist), ConvertAxisCmd(trans), ConvertAxisCmd(vert), (if (mode = 1)  then <Tran>  else <Rot>), (if (aah = 0)  then <Up>  else <Down>), {<axis3> |-> ConvertAxisCmd(roll), <axis1> |-> ConvertAxisCmd(pitch), <axis2> |-> ConvertAxisCmd(yaw)}), (Direction * Direction * Direction * Direction * Mode * Button * AxisMap)))Proof Obligation 12' (Unproved)GenerateThrusterMatrix(set of (ThrusterPosition))' subtype obligation in 'Interface' (../../documentation/examples/VDM++/SAFER/Interface.vdmpp) at line 60'1(forall ts'set of (ThrusterPosition) &  inv_ThrusterMatrix(let tson'set of ((nat * nat)) = {GenerateThrusterLabel(t) | [t in set ts]} in [[(mk_(j, i) in set tson) | i in set {1, ... ,6}] | j in set {1, ... ,4}]) and (is_(let tson'set of ((nat * nat)) = {GenerateThrusterLabel(t) | [t in set ts]} in [[(mk_(j, i) in set tson) | i in set {1, ... ,6}] | j in set {1, ... ,4}], seq of (seq of (bool)))))Proof Obligation 13' (Unproved)GenerateThrusterLabel(ThrusterPosition)' cases exhaustive obligation in 'Interface' (../../documentation/examples/VDM++/SAFER/Interface.vdmpp) at line 69'3(forall tnm'ThrusterPosition &  tnm = <B1> or tnm = <B2> or tnm = <B3> or tnm = <B4> or tnm = <F1> or tnm = <F2> or tnm = <F3> or tnm = <F4> or tnm = <L1R> or tnm = <L1F> or tnm = <R2R> or tnm = <R2F> or tnm = <L3R> or tnm = <L3F> or tnm = <R4R> or tnm = <R4F> or tnm = <D1R> or tnm = <D1F> or tnm = <D2R> or tnm = <D2F> or tnm = <U3R> or tnm = <U3F> or tnm = <U4R> or tnm = <U4F>)Proof Obligation 14' (Unproved)thrusters' map sequence compatible obligation in 'Interface' (../../documentation/examples/VDM++/SAFER/Interface.vdmpp) at line 99'17forall m1, m2 in set {{<Roll> |-> <Zero>}, {<Pitch> |-> <Zero>}, {<Yaw> |-> <Zero>}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 15' (Unproved)ControlCycle(Direction, Direction, Direction, Direction, Mode, Button, AxisMap)' operation post condition obligation in 'WorkSpace' (../../documentation/examples/VDM++/SAFER/WorkSpace.vdmpp) at line 29'3(((card RESULT) <= 4) and ThrusterConsistency(RESULT))Proof Obligation 16' (Unproved)RotCmdSet' map sequence compatible obligation in 'Test' (../../documentation/examples/VDM++/SAFER/Test.vdmpp) at line 11'6(forall a, b, c in set {<Zero>, <Pos>, <Neg>} &  forall m1, m2 in set {{<axis1> |-> a}, {<axis2> |-> b}, {<axis3> |-> c}} &    forall d3 in set dom m1, d4 in set dom m2 &      d3 = d4 => m1(d3) = m2(d4))Proof Obligation 17' (Unproved)RotCmdSet' subtype obligation in 'Test' (../../documentation/examples/VDM++/SAFER/Test.vdmpp) at line 11'5is_({{<axis1> |-> a, <axis2> |-> b, <axis3> |-> c} | [a, b, c in set {<Zero>, <Pos>, <Neg>}]}, set of (AxisMap))Proof Obligation 18' (Unproved)BigTest()' map set compatible obligation in 'Test' (../../documentation/examples/VDM++/SAFER/Test.vdmpp) at line 24'7forall m1, m2 in set {{mk_(x, pitch, yaw_y, roll_z, modeswitch, <Up>) |-> ControlCycle(x, pitch, yaw_y, roll_z, modeswitch, <Up>, Command`nullaxesdir)} | x, pitch, yaw_y, roll_z in set DirectionSet, modeswitch in set ModeSet} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 19' (Unproved)HugeTest()' map set compatible obligation in 'Test' (../../documentation/examples/VDM++/SAFER/Test.vdmpp) at line 35'6forall m1, m2 in set {{mk_(x, pitch, yaw_y, roll_z, modeswitch, aahbutton, aahcmd) |-> ControlCycle(x, pitch, yaw_y, roll_z, modeswitch, aahbutton, aahcmd)} | x, pitch, yaw_y, roll_z in set DirectionSet, modeswitch in set ModeSet, aahbutton in set AAHButtonSet, aahcmd in set RotCmdSet} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 20' (Unproved)thrusters' map set compatible obligation in 'ValveDriveAssembly' (../../documentation/examples/VDM++/SAFER/ValveDriveAssembly.vdmpp) at line 8'5forall m1, m2 in set {{thr |-> new Thruster()} | thr in set ThrusterControl`ThrusterSet} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 21' (Unproved)ThrustersOn()' map apply obligation in 'ValveDriveAssembly' (../../documentation/examples/VDM++/SAFER/ValveDriveAssembly.vdmpp) at line 23'13(forall thr in set ThrusterControl`ThrusterSet &  thr in set dom thrusters)Proof Obligation 22' (Unproved)nullaxesdir' map set compatible obligation in 'Command' (../../documentation/examples/VDM++/SAFER/Command.vdmpp) at line 24'34forall m1, m2 in set {{a |-> <Zero>} | a in set allaxes} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 23' (Unproved)nullaxesdir' subtype obligation in 'Command' (../../documentation/examples/VDM++/SAFER/Command.vdmpp) at line 24'34inv_AxisMap({a |-> <Zero> | a in set allaxes}) and (is_({a |-> <Zero> | a in set allaxes}, map (Axis) to (Direction)))Proof Obligation 24' (Unproved)GetDirection(Axis)' map apply obligation in 'Command' (../../documentation/examples/VDM++/SAFER/Command.vdmpp) at line 43'12a in set dom axesdirProof Obligation 25' (Unproved)SetDirection(Axis, Direction)' subtype obligation in 'Command' (../../documentation/examples/VDM++/SAFER/Command.vdmpp) at line 48'24inv_AxisMap((axesdir ++ {a |-> d})) and (is_((axesdir ++ {a |-> d}), map (Axis) to (Direction)))Proof Obligation 26' (Unproved)ConvertGrip(), tran' map sequence compatible obligation in 'SixDOfCommand' (../../documentation/examples/VDM++/SAFER/SixDOfCommand.vdmpp) at line 28'16forall m1, m2 in set {{Command`X |-> x}, {Command`Y |-> (if (modeswitch = <Tran>)then yaw_yelse <Zero>)}, {Command`Z |-> (if (modeswitch = <Tran>)then roll_zelse <Zero>)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 27' (Unproved)ConvertGrip(), rot' map sequence compatible obligation in 'SixDOfCommand' (../../documentation/examples/VDM++/SAFER/SixDOfCommand.vdmpp) at line 33'15forall m1, m2 in set {{Command`ROLL |-> (if (modeswitch = <Rot>)then roll_zelse <Zero>)}, {Command`PITCH |-> pitch}, {Command`YAW |-> (if (modeswitch = <Rot>)then yaw_yelse <Zero>)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 28' (Unproved)Update()' map apply obligation in 'AAH' (../../documentation/examples/VDM++/SAFER/AAH.vdmpp) at line 34'30(forall a in set Command`allaxes &  (not starting =>    ((engage <> <AAH_off>) =>      ((a in set active_rot_axes) =>        a in set dom rot))))Proof Obligation 29' (Unproved)Update()' map apply obligation in 'AAH' (../../documentation/examples/VDM++/SAFER/AAH.vdmpp) at line 37'42(forall a in set Command`allaxes &  (starting =>    a in set dom rot))Proof Obligation 30' (Unproved)ButtonTransition(Button, nat)' cases exhaustive obligation in 'AAH' (../../documentation/examples/VDM++/SAFER/AAH.vdmpp) at line 87'8mk_(toggle, button_pos) = mk_(<AAH_off>, <Up>) or mk_(toggle, button_pos) = mk_(<AAH_off>, <Down>) or mk_(toggle, button_pos) = mk_(<AAH_started>, <Up>) or mk_(toggle, button_pos) = mk_(<AAH_started>, <Down>) or mk_(toggle, button_pos) = mk_(<AAH_on>, <Up>) or mk_(toggle, button_pos) = mk_(<AAH_on>, <Down>) or mk_(toggle, button_pos) = mk_(<pressed_once>, <Up>) or mk_(toggle, button_pos) = mk_(<pressed_once>, <Down>) or mk_(toggle, button_pos) = mk_(<AAH_closing>, <Up>) or mk_(toggle, button_pos) = mk_(<AAH_closing>, <Down>) or mk_(toggle, button_pos) = mk_(<pressed_twice>, <Up>) or mk_(toggle, button_pos) = mk_(<pressed_twice>, <Down>)Proof Obligation 31' (Unproved)bf_thrusters1' map sequence compatible obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 10'6forall m1, m2 in set {{mk_(<Neg>, <Neg>, <Neg>) |-> mk_ThrSel({<B4>}, {<B2>, <B3>})}, {mk_(<Neg>, <Neg>, <Zero>) |-> mk_ThrSel({<B3>, <B4>}, {})}, {mk_(<Neg>, <Neg>, <Pos>) |-> mk_ThrSel({<B3>}, {<B1>, <B4>})}, {mk_(<Neg>, <Zero>, <Neg>) |-> mk_ThrSel({<B2>, <B4>}, {})}, {mk_(<Neg>, <Zero>, <Zero>) |-> mk_ThrSel({<B1>, <B4>}, {<B2>, <B3>})}, {mk_(<Neg>, <Zero>, <Pos>) |-> mk_ThrSel({<B1>, <B3>}, {})}, {mk_(<Neg>, <Pos>, <Neg>) |-> mk_ThrSel({<B2>}, {<B1>, <B4>})}, {mk_(<Neg>, <Pos>, <Zero>) |-> mk_ThrSel({<B1>, <B2>}, {})}, {mk_(<Neg>, <Pos>, <Pos>) |-> mk_ThrSel({<B1>}, {<B2>, <B3>})}, {mk_(<Zero>, <Neg>, <Neg>) |-> mk_ThrSel({<B4>, <F1>}, {})}, {mk_(<Zero>, <Neg>, <Zero>) |-> mk_ThrSel({<B4>, <F2>}, {})}, {mk_(<Zero>, <Neg>, <Pos>) |-> mk_ThrSel({<B3>, <F2>}, {})}, {mk_(<Zero>, <Zero>, <Neg>) |-> mk_ThrSel({<B2>, <F1>}, {})}, {mk_(<Zero>, <Zero>, <Zero>) |-> mk_ThrSel({}, {})}, {mk_(<Zero>, <Zero>, <Pos>) |-> mk_ThrSel({<B3>, <F4>}, {})}, {mk_(<Zero>, <Pos>, <Neg>) |-> mk_ThrSel({<B2>, <F3>}, {})}, {mk_(<Zero>, <Pos>, <Zero>) |-> mk_ThrSel({<B1>, <F3>}, {})}, {mk_(<Zero>, <Pos>, <Pos>) |-> mk_ThrSel({<B1>, <F4>}, {})}, {mk_(<Pos>, <Neg>, <Neg>) |-> mk_ThrSel({<F1>}, {<F2>, <F3>})}, {mk_(<Pos>, <Neg>, <Zero>) |-> mk_ThrSel({<F1>, <F2>}, {})}, {mk_(<Pos>, <Neg>, <Pos>) |-> mk_ThrSel({<F2>}, {<F1>, <F4>})}, {mk_(<Pos>, <Zero>, <Neg>) |-> mk_ThrSel({<F1>, <F3>}, {})}, {mk_(<Pos>, <Zero>, <Zero>) |-> mk_ThrSel({<F2>, <F3>}, {<F1>, <F4>})}, {mk_(<Pos>, <Zero>, <Pos>) |-> mk_ThrSel({<F2>, <F4>}, {})}, {mk_(<Pos>, <Pos>, <Neg>) |-> mk_ThrSel({<F3>}, {<F1>, <F4>})}, {mk_(<Pos>, <Pos>, <Zero>) |-> mk_ThrSel({<F3>, <F4>}, {})}, {mk_(<Pos>, <Pos>, <Pos>) |-> mk_ThrSel({<F4>}, {<F2>, <F3>})}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 32' (Unproved)lrud_thrusters1' map sequence compatible obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 49'6forall m1, m2 in set {{mk_(<Neg>, <Neg>, <Neg>) |-> mk_ThrSel({}, {})}, {mk_(<Neg>, <Neg>, <Zero>) |-> mk_ThrSel({}, {})}, {mk_(<Neg>, <Neg>, <Pos>) |-> mk_ThrSel({}, {})}, {mk_(<Neg>, <Zero>, <Neg>) |-> mk_ThrSel({<L1R>}, {<L1F>, <L3F>})}, {mk_(<Neg>, <Zero>, <Zero>) |-> mk_ThrSel({<L1R>, <L3R>}, {<L1F>, <L3F>})}, {mk_(<Neg>, <Zero>, <Pos>) |-> mk_ThrSel({<L3R>}, {<L1F>, <L3F>})}, {mk_(<Neg>, <Pos>, <Neg>) |-> mk_ThrSel({}, {})}, {mk_(<Neg>, <Pos>, <Zero>) |-> mk_ThrSel({}, {})}, {mk_(<Neg>, <Pos>, <Pos>) |-> mk_ThrSel({}, {})}, {mk_(<Zero>, <Neg>, <Neg>) |-> mk_ThrSel({<U3R>}, {<U3F>, <U4F>})}, {mk_(<Zero>, <Neg>, <Zero>) |-> mk_ThrSel({<U3R>, <U4R>}, {<U3F>, <U4F>})}, {mk_(<Zero>, <Neg>, <Pos>) |-> mk_ThrSel({<U4R>}, {<U3F>, <U4F>})}, {mk_(<Zero>, <Zero>, <Neg>) |-> mk_ThrSel({<L1R>, <R4R>}, {})}, {mk_(<Zero>, <Zero>, <Zero>) |-> mk_ThrSel({}, {})}, {mk_(<Zero>, <Zero>, <Pos>) |-> mk_ThrSel({<R2R>, <L3R>}, {})}, {mk_(<Zero>, <Pos>, <Neg>) |-> mk_ThrSel({<D2R>}, {<D1F>, <D2F>})}, {mk_(<Zero>, <Pos>, <Zero>) |-> mk_ThrSel({<D1R>, <D2R>}, {<D1F>, <D2F>})}, {mk_(<Zero>, <Pos>, <Pos>) |-> mk_ThrSel({<D1R>}, {<D1F>, <D2F>})}, {mk_(<Pos>, <Neg>, <Neg>) |-> mk_ThrSel({}, {})}, {mk_(<Pos>, <Neg>, <Zero>) |-> mk_ThrSel({}, {})}, {mk_(<Pos>, <Neg>, <Pos>) |-> mk_ThrSel({}, {})}, {mk_(<Pos>, <Zero>, <Neg>) |-> mk_ThrSel({<R4R>}, {<R2F>, <R4F>})}, {mk_(<Pos>, <Zero>, <Zero>) |-> mk_ThrSel({<R2R>, <R4R>}, {<R2F>, <R4F>})}, {mk_(<Pos>, <Zero>, <Pos>) |-> mk_ThrSel({<R2R>}, {<R2F>, <R4F>})}, {mk_(<Pos>, <Pos>, <Neg>) |-> mk_ThrSel({}, {})}, {mk_(<Pos>, <Pos>, <Zero>) |-> mk_ThrSel({}, {})}, {mk_(<Pos>, <Pos>, <Pos>) |-> mk_ThrSel({}, {})}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 33' (Unproved)SelectThrusters(), lookup1' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 136'36Command`X in set dom tranProof Obligation 34' (Unproved)SelectThrusters(), lookup1' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 136'53Command`PITCH in set dom rotProof Obligation 35' (Unproved)SelectThrusters(), lookup1' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 137'36Command`YAW in set dom rotProof Obligation 36' (Unproved)SelectThrusters(), lookup2' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 138'35Command`Y in set dom tranProof Obligation 37' (Unproved)SelectThrusters(), lookup2' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 138'52Command`Z in set dom tranProof Obligation 38' (Unproved)SelectThrusters(), lookup2' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 139'35Command`ROLL in set dom rotProof Obligation 39' (Unproved)SelectThrusters(), bf_thr' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 140'21Command`ROLL in set dom rotProof Obligation 40' (Unproved)SelectThrusters(), lrud_thr' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 143'23Command`PITCH in set dom rotProof Obligation 41' (Unproved)SelectThrusters(), lrud_thr' map apply obligation in 'ThrusterControl' (../../documentation/examples/VDM++/SAFER/ThrusterControl.vdmpp) at line 144'23((rot(Command`PITCH) = <Zero>) =>  Command`YAW in set dom rot)Proof Obligation 42' (Unproved)Prioritize()' map apply obligation in 'TranslationCommand' (../../documentation/examples/VDM++/SAFER/TranslationCommand.vdmpp) at line 9'19X in set dom axesdirProof Obligation 43' (Unproved)Prioritize()' map sequence compatible obligation in 'TranslationCommand' (../../documentation/examples/VDM++/SAFER/TranslationCommand.vdmpp) at line 10'32((axesdir(X) <> <Zero>) =>  forall m1, m2 in set {{Y |-> <Zero>}, {Z |-> <Zero>}} &    forall d3 in set dom m1, d4 in set dom m2 &      d3 = d4 => m1(d3) = m2(d4))Proof Obligation 44' (Unproved)Prioritize()' subtype obligation in 'TranslationCommand' (../../documentation/examples/VDM++/SAFER/TranslationCommand.vdmpp) at line 9'16inv_AxisMap((if (axesdir(X) <> <Zero>)then (axesdir ++ {Y |-> <Zero>, Z |-> <Zero>})elseif (axesdir(Y) <> <Zero>)then (axesdir ++ {Z |-> <Zero>})else axesdir)) and (is_((if (axesdir(X) <> <Zero>)then (axesdir ++ {Y |-> <Zero>, Z |-> <Zero>})elseif (axesdir(Y) <> <Zero>)then (axesdir ++ {Z |-> <Zero>})else axesdir), map (Axis) to (Direction)))

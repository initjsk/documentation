WARNING:plant.vdmpp:3264:28,29:Empty set used in bind.
ERROR:plant.vdmpp:3182:55,13:Name 'PlantInv(set of (Alarm), map (Period) to (set of (Expert)))' is not in scope.
ERROR:plant.vdmpp:3182:7,13:Name 'PlantInv(set of (Alarm), ?)' is not in scope.
ERROR:plant.vdmpp:3182:36,30:Name 'schedule(Period)' is not in scope.
ERROR:plant.vdmpp:3182:42,26:Name 'Plant`schedule' is not in scope.
ERROR:test1.vdmpp:3134:10,21:Class has no constructor with these parameter types. Called' Expert(set of ((<Chem> | <Elec>)))
ERROR:plant.vdmpp:3182:28,29:Name 'schedule(Period)' is not in scope.
ERROR:alarm.vdmpp:3027:14,13:Operation returns unexpected type. Actual' nat1 Expected' Alarm
ERROR:plant.vdmpp:3182:7,29:Name 'Plant`schedule' is not in scope.
ERROR:plant.vdmpp:3182:33,0:Name 'Plant`schedule' is not in scope.
ERROR:plant.vdmpp:3182:47,33:Name 'schedule(?)' is not in scope.
ERROR:test1.vdmpp:3134:6,21:Class has no constructor with these parameter types. Called' Alarm(<Chem>, seq1 of (char))
ERROR:plant.vdmpp:3182:41,23:Name 'schedule(Period)' is not in scope.
ERROR:test1.vdmpp:3134:8,21:Class has no constructor with these parameter types. Called' Expert(set of (<Elec>))
ERROR:plant.vdmpp:3182:46,36:Name 'Plant`schedule' is not in scope.
ERROR:plant.vdmpp:3247:53,11:Unknown variable 'schedule' in assignment.
RESULT:result:-1:-1,-1:class Expertprivate instance variable quali'set of (Qualification)static public type Qualification'Qualificationpublic explicit operation Expert(set of (Qualification))'(set of (Qualification) ==> Expert)public explicit operation GetQuali()'(() ==> set of (Qualification))end Expertclass Alarmstatic public type String'Stringprivate instance variable descr'Stringprivate instance variable reqQuali'Qualificationpublic explicit operation Alarm(Qualification, String)'(Qualification * String ==> Alarm)public explicit operation GetReqQuali()'(() ==> Qualification)end Alarmclass Test1private instance variable a1'Alarmprivate instance variable a2'Alarmprivate instance variable ex1'Expertprivate instance variable ex2'Expertprivate instance variable ex3'Expertprivate instance variable ex4'Expertprivate instance variable plant'Plantstatic private value p1'Periodstatic private value p2'Periodstatic private value p3'Periodstatic private value p4'Periodpublic explicit operation Run()'(() ==> (set of (Period) * Expert))end Test1class Plantprivate instance variable alarms'set of (Alarm)private invariant inv_Plant'boolstatic public type Period'Periodpublic explicit operation ExpertToPage(Alarm, Period)'(Alarm * Period ==> Expert)public explicit operation NumberOfExperts(Period)'(Period ==> nat)public explicit operation ExpertIsOnDuty(Expert)'(Expert ==> set of (Period))public explicit operation Plant(set of (Alarm), map (Period) to (set of (Expert)))'(set of (Alarm) * map (Period) to (set of (Expert)) ==> Plant)end Plant

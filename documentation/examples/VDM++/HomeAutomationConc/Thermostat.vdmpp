
class Thermostat is subclass of Actuator

instance variables

finished	: bool := false;


operations

public Thermostat: nat * NetworkTypes`nodeType * Surroundings 
==> Thermostat
	Thermostat (id, type, envir) ==
		(ID := id;
		Type := type;
		Corr := <NONE>;
		Env := envir;
		);

--public Step: () ==> ()
--	Step() ==
--		(if (Corr = <INC>)
--		then HA`Env.IncTemp()
--		elseif (Corr = <DEC>)
--		then HA`Env.DecTemp();
--		);

public SetCorrection: NetworkTypes`correction ==> ()
	SetCorrection(cor) ==
		Corr := cor
pre (cor = <INC>) or (cor = <DEC>) or (cor = <NONE>);

public Finish: () ==> ()
	Finish() ==
		finished := true;

public IsFinished: () ==> ()
	IsFinished() ==
		skip;

sync
	per IsFinished => finished;


thread
(
	while true do 
(
dcl tempCorr: NetworkTypes`correction := GetCorr();

if tempCorr = <INC>
		then HA`Env.IncTemp()
		elseif tempCorr = <DEC>
		then HA`Env.DecTemp();
	
	--World`timerRef.NotifyAndIncTime();
World`timerRef.WaitRelative(World`timerRef.stepLength);
World`timerRef.NotifyAll();
World`timerRef.Awake();
	)
)

end Thermostat
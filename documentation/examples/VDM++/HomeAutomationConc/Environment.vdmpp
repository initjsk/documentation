class Environment


instance variables

private ha		: HA;
private io		: IO := new IO();
private inlines	: seq of inline := [];
private simtime	: nat;

private finished	: bool := false;


types

-- Input file: Temp, Humid, Time
public inline	= nat * nat * nat;


operations

public Environment: seq of char ==> Environment
	Environment(fname) ==
		(def mk_ (-,mk_(t,input)) = io.freadval[nat * seq of inline](fname) in
			(inlines := input;
			simtime := t;
			);
ha := new HA();
		);







private CreateSignal: () ==> ()
	CreateSignal() ==
		(if len inlines > 0
		then (dcl curtime : nat := World`timerRef.GetTime(),
				tBool	: bool;
	def mk_ (temp, humid, time) = hd inlines in
				(if time = curtime
				then (HA`Env.SetTemp(temp);
					HA`Env.SetHumid(humid);
					IO`print(time);
					IO`print(" New env values set!\n");
					inlines := tl inlines;
					return
					);
				);
			)
		else (finished := true;
			return
			);
		);	

public IsFinished: () ==> ()
	IsFinished() ==
		skip;

sync
	per IsFinished => finished;


thread
(
	start(new ClockTick(threadid));
	while World`timerRef.GetTime() < simtime do
		(if not finished
		then CreateSignal();
		
		World`timerRef.WaitRelative(0);
    	World`timerRef.NotifyAndIncTime();   
    	World`timerRef.Awake(); 
		);
	finished := true;
)

end Environment
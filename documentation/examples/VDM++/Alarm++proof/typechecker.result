RESULT:result:-1:-1,-1:class alarmstatic private type Plant'Plantstatic private type Schedule'Schedulestatic public type Period'Periodstatic private type Expert'Expertstatic private type ExpertId'ExpertIdstatic private type Qualification'Qualificationstatic private type Alarm'Alarmprivate explicit function NumberOfExperts(Period, Plant)'(Period * Plant -> nat)private explicit function ExpertIsOnDuty(Expert, Plant)'(Expert * Plant -> set of (Period))private implicit function ExpertToPage(Alarm, Period, Plant)'(Alarm * Period * Plant +> Expert)static private explicit function QualificationOK(set of (Expert), Qualification)'(set of (Expert) * Qualification -> bool)public explicit operation RunTest()'(() ==> set of (Period))end alarm

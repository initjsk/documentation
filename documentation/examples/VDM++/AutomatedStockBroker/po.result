RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)AddStock(Stock)' operation post condition obligation in 'StockMarket' (../../documentation/examples/VDM++/AutomatedStockBroker/StockMarket.vdmpp) at line 12'10((stock.GetName)() in set (dom stocks))Proof Obligation 2' (Unproved)AddStock(Stock)' map compatible obligation in 'StockMarket' (../../documentation/examples/VDM++/AutomatedStockBroker/StockMarket.vdmpp) at line 14'14forall ldom1 in set dom {(stock.GetName)() |-> stock}, rdom2 in set dom stocks &ldom1 = rdom2 => {(stock.GetName)() |-> stock}(ldom1) = stocks(rdom2)Proof Obligation 3' (Unproved)RemoveStock(Stock)' operation post condition obligation in 'StockMarket' (../../documentation/examples/VDM++/AutomatedStockBroker/StockMarket.vdmpp) at line 18'10((stock.GetName)() not in set (dom stocks))Proof Obligation 4' (Unproved)GetStock(StockIdentifier)' map apply obligation in 'StockMarket' (../../documentation/examples/VDM++/AutomatedStockBroker/StockMarket.vdmpp) at line 26'11name in set dom stocksProof Obligation 5' (Unproved)Run(), r1' map sequence compatible obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 31'6forall m1, m2 in set {{<PotentialBuy> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <LowerLimit>], <Buy>)}, {<Bought> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <UpperLimit>], <Sell>)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 6' (Unproved)Run(), r1' subtype obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 33'9inv_Region(mk_Region(12, 8))Proof Obligation 7' (Unproved)Run(), r1' subtype obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 30'28inv_StockRecord(mk_StockRecord(mk_token("test"), {<PotentialBuy> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <LowerLimit>], <Buy>), <Bought> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <UpperLimit>], <Sell>)}, mk_Region(12, 8), 10, <Bought>))Proof Obligation 8' (Unproved)Run(), r2' map sequence compatible obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 35'6forall m1, m2 in set {{<PotentialBuy> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <LowerLimit>], <Buy>)}, {<Bought> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <UpperLimit>], <Sell>)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 9' (Unproved)Run(), r2' subtype obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 37'9inv_Region(mk_Region(12, 8))Proof Obligation 10' (Unproved)Run(), r2' subtype obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 34'25inv_StockRecord(mk_StockRecord(mk_token("test12"), {<PotentialBuy> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <LowerLimit>], <Buy>), <Bought> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <UpperLimit>], <Sell>)}, mk_Region(12, 8), 10, <Bought>))Proof Obligation 11' (Unproved)Run(), r3' map sequence compatible obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 40'6forall m1, m2 in set {{<PotentialBuy> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <LowerLimit>], <Buy>)}, {<Bought> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <UpperLimit>], <Sell>)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 12' (Unproved)Run(), r3' subtype obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 42'9inv_Region(mk_Region(12, 8))Proof Obligation 13' (Unproved)Run(), r3' subtype obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 39'24inv_StockRecord(mk_StockRecord(mk_token("test2"), {<PotentialBuy> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <LowerLimit>], <Buy>), <Bought> |-> mk_ActionTrigger([<LeavesNoActionRegion>, <UpperLimit>], <Sell>)}, mk_Region(12, 8), 0, <PotentialBuy>))Proof Obligation 14' (Unproved)Run()' while loop termination obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 48'4while (not isFinished()) do ...Proof Obligation 15' (Unproved)FindSmallestSeqLen(map (String) to (seq of (Event)))' let be st existence obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 65'6(forall m'map (String) to (seq of (Event)) &  exists x, y in set {(len m(x)) | [x in set (dom m)]} & ((x <> y) => (x <= y)))Proof Obligation 16' (Trivial by <forall x in set s & x in set s>)FindSmallestSeqLen(map (String) to (seq of (Event)))' map apply obligation in 'World' (../../documentation/examples/VDM++/AutomatedStockBroker/World.vdmpp) at line 65'22(forall m'map (String) to (seq of (Event)) &  (forall x in set (dom m) &    x in set dom m))Proof Obligation 17' (Unproved)AutomatedStockBroker(nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 30'8-- After AutomatedStockBroker(nat) constructor body(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 18' (Unproved)AddStock(StockRecord, nat1)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 47'21(((sRecord.Name) in set (dom stockWatchers)) =>  priority in set inds stocks)Proof Obligation 19' (Unproved)AddStock(StockRecord, nat1)' operation post condition obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 37'8(((sRecord.Name) in set (dom stockWatchers)) and (sRecord = stocks(priority)))Proof Obligation 20' (Unproved)AddStock(StockRecord, nat1)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 39'3-- After stocks '= (((stocks(1, ... ,(priority - 1))) ^ [sRecord]) ^ (stocks((priority + 1), ... ,(len stocks))))(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 21' (Unproved)AddStock(StockRecord, nat1)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 42'8-- After stockWatchers((sRecord.Name)) '= new StockWatcher(sRecord)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 22' (Unproved)AddStock(StockRecord, nat1)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 43'8-- After stockWatchers((sRecord.Name)) '= new StockWatcher(sRecord, testValues((sRecord.Name)))(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 23' (Unproved)AddStock(StockRecord, nat1)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 43'64(sRecord.Name) in set dom testValuesProof Obligation 24' (Trivial by <forall x in set s & x in set s>)GetStocksWithActiveActionTrigger(StockState)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 58'53(let res'seq of (StockRecord) = RESULT in  (forall i in set (inds res) &    i in set inds res))Proof Obligation 25' (Unproved)GetStocksWithActiveActionTrigger(StockState)' operation post condition obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 53'8let res'seq of (StockRecord) = RESULT in (forall i in set (inds res) & ((res(i).State) = ss))Proof Obligation 26' (Trivial by <forall x in set s & x in set s>)GetStocksWithActiveActionTrigger(StockState)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 55'11(forall s in set (inds stocks) & (((stockWatchers((stocks(s).Name)).GetTriggeredAction)() <> nil) and ((stocks(s).State) = ss)) =>  s in set inds stocks)Proof Obligation 27' (Unproved)GetStocksWithActiveActionTrigger(StockState)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 56'24(forall s in set (inds stocks) &  (stocks(s).Name) in set dom stockWatchers)Proof Obligation 28' (Trivial by <forall x in set s & x in set s>)GetStocksWithActiveActionTrigger(StockState)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 56'38(forall s in set (inds stocks) &  s in set inds stocks)Proof Obligation 29' (Unproved)GetStocksWithActiveActionTrigger(StockState)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 57'28(forall s in set (inds stocks) &  (((stockWatchers((stocks(s).Name)).GetTriggeredAction)() <> nil) =>    s in set inds stocks))Proof Obligation 30' (Trivial by <forall x in set s & x in set s>)FindValidBuy(seq of (StockRecord), nat), affordableStocks' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 63'6(forall x in set (inds potBuys) & CanAfford(potBuys(x), balance) =>  x in set inds potBuys)Proof Obligation 31' (Unproved)FindValidBuy(seq of (StockRecord), nat), affordableStocks' subtype obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 63'64(forall x in set (inds potBuys) &  balance >= 0)Proof Obligation 32' (Trivial by <forall x in set s & x in set s>)FindValidBuy(seq of (StockRecord), nat), affordableStocks' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 63'53(forall x in set (inds potBuys) &  x in set inds potBuys)Proof Obligation 33' (Unproved)FindValidBuy(seq of (StockRecord), nat)' let be st existence obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 67'16(let affordableStocks'seq of (StockRecord) = [potBuys(x) | x in set (inds potBuys) & CanAfford(potBuys(x), balance)] in  (((len affordableStocks) > 0) =>    exists x in set (inds affordableStocks) & (forall y in set (inds affordableStocks) & ((stockWatchers((affordableStocks(x).Name)).GetStockValue)(time) >= (stockWatchers((affordableStocks(y).Name)).GetStockValue)(time)))))Proof Obligation 34' (Unproved)FindValidBuy(seq of (StockRecord), nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 68'50(let affordableStocks'seq of (StockRecord) = [potBuys(x) | x in set (inds potBuys) & CanAfford(potBuys(x), balance)] in  (((len affordableStocks) > 0) =>    (forall x in set (inds affordableStocks) &      (forall y in set (inds affordableStocks) &        (affordableStocks(x).Name) in set dom stockWatchers))))Proof Obligation 35' (Unproved)FindValidBuy(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 68'64(let affordableStocks'seq of (StockRecord) = [potBuys(x) | x in set (inds potBuys) & CanAfford(potBuys(x), balance)] in  (((len affordableStocks) > 0) =>    (forall x in set (inds affordableStocks) &      (forall y in set (inds affordableStocks) &        x in set inds affordableStocks))))Proof Obligation 36' (Unproved)FindValidBuy(seq of (StockRecord), nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 69'9(let affordableStocks'seq of (StockRecord) = [potBuys(x) | x in set (inds potBuys) & CanAfford(potBuys(x), balance)] in  (((len affordableStocks) > 0) =>    (forall x in set (inds affordableStocks) &      (forall y in set (inds affordableStocks) &        (affordableStocks(y).Name) in set dom stockWatchers))))Proof Obligation 37' (Unproved)FindValidBuy(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 69'23(let affordableStocks'seq of (StockRecord) = [potBuys(x) | x in set (inds potBuys) & CanAfford(potBuys(x), balance)] in  (((len affordableStocks) > 0) =>    (forall x in set (inds affordableStocks) &      (forall y in set (inds affordableStocks) &        y in set inds affordableStocks))))Proof Obligation 38' (Unproved)FindValidBuy(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 70'11(let affordableStocks'seq of (StockRecord) = [potBuys(x) | x in set (inds potBuys) & CanAfford(potBuys(x), balance)] in  (((len affordableStocks) > 0) =>    (forall x in set (inds affordableStocks) & (forall y in set (inds affordableStocks) & ((stockWatchers((affordableStocks(x).Name)).GetStockValue)(time) >= (stockWatchers((affordableStocks(y).Name)).GetStockValue)(time))) =>      x in set inds affordableStocks)))Proof Obligation 39' (Unproved)FindValidSell(seq of (StockRecord), nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 82'14(RESULT.Name) in set dom stockWatchersProof Obligation 40' (Unproved)FindValidSell(seq of (StockRecord), nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 83'4(forall x in set (elems potSells) &  (x.Name) in set dom stockWatchers)Proof Obligation 41' (Unproved)FindValidSell(seq of (StockRecord), nat)' operation post condition obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 74'1IsGTAll(((stockWatchers((RESULT.Name)).GetStockValue)(time) - (RESULT.Cost)), {((stockWatchers((x.Name)).GetStockValue)(time) - (x.Cost)) | [x in set (elems potSells)]})Proof Obligation 42' (Unproved)FindValidSell(seq of (StockRecord), nat)' let be st existence obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 76'14exists x in set (inds potSells) & (forall y in set (inds potSells) & (((stockWatchers((potSells(x).Name)).GetStockValue)(time) - (potSells(x).Cost)) >= ((stockWatchers((potSells(y).Name)).GetStockValue)(time) - (potSells(y).Cost))))Proof Obligation 43' (Unproved)FindValidSell(seq of (StockRecord), nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 78'8(forall x in set (inds potSells) &  (forall y in set (inds potSells) &    (potSells(x).Name) in set dom stockWatchers))Proof Obligation 44' (Unproved)FindValidSell(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 78'22(forall x in set (inds potSells) &  (forall y in set (inds potSells) &    x in set inds potSells))Proof Obligation 45' (Unproved)FindValidSell(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 78'62(forall x in set (inds potSells) &  (forall y in set (inds potSells) &    x in set inds potSells))Proof Obligation 46' (Unproved)FindValidSell(seq of (StockRecord), nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 79'8(forall x in set (inds potSells) &  (forall y in set (inds potSells) &    (potSells(y).Name) in set dom stockWatchers))Proof Obligation 47' (Trivial by <forall x in set s & x in set s>)FindValidSell(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 79'22(forall x in set (inds potSells) &  (forall y in set (inds potSells) &    y in set inds potSells))Proof Obligation 48' (Trivial by <forall x in set s & x in set s>)FindValidSell(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 79'62(forall x in set (inds potSells) &  (forall y in set (inds potSells) &    y in set inds potSells))Proof Obligation 49' (Trivial by <forall x in set s & x in set s>)FindValidSell(seq of (StockRecord), nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 80'8(forall x in set (inds potSells) & (forall y in set (inds potSells) & (((stockWatchers((potSells(x).Name)).GetStockValue)(time) - (potSells(x).Cost)) >= ((stockWatchers((potSells(y).Name)).GetStockValue)(time) - (potSells(y).Cost)))) =>  x in set inds potSells)Proof Obligation 50' (Unproved)PerformBuy(StockRecord, nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 101'4(((potAction.State) = <PotentialBuy>) =>  (potAction.Name) in set dom stockWatchers)Proof Obligation 51' (Unproved)PerformBuy(StockRecord, nat)' operation post condition obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 85'3(balance >= 0)Proof Obligation 52' (Unproved)PerformBuy(StockRecord, nat), sw' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 87'13(potAction.Name) in set dom stockWatchersProof Obligation 53' (Unproved)PerformBuy(StockRecord, nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 90'5-- After actionLog '= ([mk_ActionEvent(<Buy>, time, (potAction.Name), value)] ^ actionLog)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 54' (Unproved)PerformBuy(StockRecord, nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 91'5-- After balance '= (balance - value)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 55' (Unproved)PerformBuy(StockRecord, nat)' let be st existence obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 93'9exists i in set (inds stocks) & ((stocks(i).Name) = (potAction.Name))Proof Obligation 56' (Unproved)PerformBuy(StockRecord, nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 93'36i in set inds stocksProof Obligation 57' (Unproved)PerformBuy(StockRecord, nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 96'6-- After stocks(i) '= mu(potAction, State |-> <Bought>, Cost |-> value)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 58' (Unproved)PerformBuy(StockRecord, nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 96'6i > 0 and i <= len (stocks) + 1Proof Obligation 59' (Unproved)PerformBuy(StockRecord, nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 97'27i in set inds stocksProof Obligation 60' (Unproved)PerformSell(StockRecord, nat)' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 120'4(((potAction.State) = <Bought>) =>  (potAction.Name) in set dom stockWatchers)Proof Obligation 61' (Unproved)PerformSell(StockRecord, nat)' operation post condition obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 104'3(balance >= 0)Proof Obligation 62' (Unproved)PerformSell(StockRecord, nat), sw' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 106'13(potAction.Name) in set dom stockWatchersProof Obligation 63' (Unproved)PerformSell(StockRecord, nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 109'5-- After actionLog '= ([mk_ActionEvent(<Sell>, time, (potAction.Name), value)] ^ actionLog)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 64' (Unproved)PerformSell(StockRecord, nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 110'5-- After balance '= (balance + value)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 65' (Unproved)PerformSell(StockRecord, nat)' let be st existence obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 112'9exists i in set (inds stocks) & ((stocks(i).Name) = (potAction.Name))Proof Obligation 66' (Unproved)PerformSell(StockRecord, nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 112'36i in set inds stocksProof Obligation 67' (Unproved)PerformSell(StockRecord, nat)' state invariant obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 115'6-- After stocks(i) '= mu(potAction, State |-> <PotentialBuy>, Cost |-> 0)(balance >= 0) and (forall x, y in set (inds stocks) & ((x <> y) => ((stocks(x).Name) <> (stocks(y).Name)))) and let stockIdentifiers'set of (StockIdentifier) = {(si.Name) | [si in set (elems stocks)]} in (forall stockIdentifier in set stockIdentifiers & let allEventsStock'seq of (ActionEvent) = [actionLog(i) | i in set (inds actionLog) & ((actionLog(i).StockName) = stockIdentifier)] in (forall e in set (inds allEventsStock) & ((e <> (len allEventsStock)) => ((allEventsStock(e).Type) <> (allEventsStock((e + 1)).Type))))) and MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 68' (Unproved)PerformSell(StockRecord, nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 115'6i > 0 and i <= len (stocks) + 1Proof Obligation 69' (Unproved)PerformSell(StockRecord, nat)' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 116'27i in set inds stocksProof Obligation 70' (Unproved)ObserveAllStocks(nat), stock' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 126'17i in set inds stocksProof Obligation 71' (Unproved)ObserveAllStocks(nat), csw' map apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 126'34(stock.Name) in set dom stockWatchersProof Obligation 72' (Unproved)Step(nat)' operation post condition obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 129'10MaxOneOfEachActionTypePerTime(actionLog)Proof Obligation 73' (Unproved)MaxOneOfEachActionTypePerTime(seq of (ActionEvent))' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 176'18(forall actionLog'seq of (ActionEvent) &  (forall x, y in set (inds actionLog) &    ((x <> y) =>      x in set inds actionLog)))Proof Obligation 74' (Unproved)MaxOneOfEachActionTypePerTime(seq of (ActionEvent))' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 176'38(forall actionLog'seq of (ActionEvent) &  (forall x, y in set (inds actionLog) &    ((x <> y) =>      y in set inds actionLog)))Proof Obligation 75' (Unproved)MaxOneOfEachActionTypePerTime(seq of (ActionEvent))' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 177'7(forall actionLog'seq of (ActionEvent) &  (forall x, y in set (inds actionLog) &    x in set inds actionLog))Proof Obligation 76' (Unproved)MaxOneOfEachActionTypePerTime(seq of (ActionEvent))' sequence apply obligation in 'AutomatedStockBroker' (../../documentation/examples/VDM++/AutomatedStockBroker/AutomatedStockBroker.vdmpp) at line 177'28(forall actionLog'seq of (ActionEvent) &  (forall x, y in set (inds actionLog) &    y in set inds actionLog))Proof Obligation 77' (Unproved)UpdateStock()' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 36'451 in set inds valueHistoryProof Obligation 78' (Unproved)UpdateStock()' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 36'632 in set inds valueHistoryProof Obligation 79' (Unproved)UpdateStock()' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 37'45(((currentRateOfChange = <positive>) => (valueHistory(1) > valueHistory(2))) =>  1 in set inds valueHistory)Proof Obligation 80' (Unproved)UpdateStock()' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 37'63(((currentRateOfChange = <positive>) => (valueHistory(1) > valueHistory(2))) =>  2 in set inds valueHistory)Proof Obligation 81' (Unproved)UpdateStock()' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 38'45(((currentRateOfChange = <positive>) => (valueHistory(1) > valueHistory(2))) =>  (((currentRateOfChange = <negative>) => (valueHistory(1) < valueHistory(2))) =>    1 in set inds valueHistory))Proof Obligation 82' (Unproved)UpdateStock()' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 38'63(((currentRateOfChange = <positive>) => (valueHistory(1) > valueHistory(2))) =>  (((currentRateOfChange = <negative>) => (valueHistory(1) < valueHistory(2))) =>    2 in set inds valueHistory))Proof Obligation 83' (Unproved)UpdateStock()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 39'11(((currentRateOfChange = <positive>) => (valueHistory(1) > valueHistory(2))) =>  (((currentRateOfChange = <negative>) => (valueHistory(1) < valueHistory(2))) =>    (((currentRateOfChange = <constant>) => (valueHistory(1) = valueHistory(2))) =>      valueHistory <> [])))Proof Obligation 84' (Unproved)UpdateStock()' operation post condition obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 20'10(((currentRateOfChange = <positive>) => (valueHistory(1) > valueHistory(2))) and (((currentRateOfChange = <negative>) => (valueHistory(1) < valueHistory(2))) and (((currentRateOfChange = <constant>) => (valueHistory(1) = valueHistory(2))) and ((hd valueHistory) >= 0))))Proof Obligation 85' (Unproved)UpdateStock()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 25'35(nil = currentRateOfChange =>   valueHistory <> [])Proof Obligation 86' (Unproved)UpdateStock()' subtype obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 26'32(not nil = currentRateOfChange =>  ((is_(currentRateOfChange, <constant>)) or  (is_(currentRateOfChange, <negative>)) or  (is_(currentRateOfChange, <positive>))))Proof Obligation 87' (Unproved)UpdateStock()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 26'56(not nil = currentRateOfChange =>  valueHistory <> [])Proof Obligation 88' (Unproved)UpdateStock()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 30'39valueHistory <> []Proof Obligation 89' (Unproved)UpdateStock()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 31'39valueHistory <> []Proof Obligation 90' (Unproved)UpdateStock()' subtype obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 31'57is_(([((hd valueHistory) - 1)] ^ valueHistory), seq of (StockValue))Proof Obligation 91' (Unproved)UpdateStock()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 32'39valueHistory <> []Proof Obligation 92' (Unproved)GetCurrentValue()' non-empty sequence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 47'14valueHistory <> []Proof Obligation 93' (Unproved)InitialRateOfChange(StockValue)' cases exhaustive obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 62'6(forall sv'StockValue &  (let r'nat = (MATH`rand(21) mod 3) in    ((sv > 0) =>      r = 0 or r = 1 or r = 2)))Proof Obligation 94' (Unproved)InitialRateOfChange(StockValue)' cases exhaustive obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 68'6(forall sv'StockValue &  (let r'nat = (MATH`rand(21) mod 3) in    (not (sv > 0) =>      r = 0 or r = 1 or r = 2)))Proof Obligation 95' (Unproved)NextRateOfChange(RateOfChange, StockValue), other' finite set obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 77'29(forall roc'RateOfChange, sv'StockValue &  exists finmap1'map nat to (RateOfChange) &    forall x'RateOfChange &      ((x <> roc) and ((x = <negative>) => (sv > 0))) => exists findex2 in set dom finmap1 & finmap1(findex2) = x)Proof Obligation 96' (Unproved)NextRateOfChange(RateOfChange, StockValue)' sequence apply obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 82'6(forall roc'RateOfChange, sv'StockValue &  (let r'int = MATH`rand(10), other'seq of (RateOfChange) = MakelistFromSet({x | [x'RateOfChange] & ((x <> roc) and ((x = <negative>) => (sv > 0)))}) in    (not ((r >= 0) and ((r <= 7) and ((roc = <negative>) => (sv > 0)))) =>      ((MATH`rand(20) mod (len other)) + 1) in set inds other)))Proof Obligation 97' (Unproved)MakelistFromSet(set of (RateOfChange))' let be st existence obligation in 'Stock' (../../documentation/examples/VDM++/AutomatedStockBroker/Stock.vdmpp) at line 87'9(forall roc'set of (RateOfChange) &  (((card roc) > 0) =>    exists r in set roc))Proof Obligation 98' (Unproved)writeval(@p)' subtype obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 38'15(forall val'@p &  is_(writeval(val), bool))Proof Obligation 99' (Unproved)fwriteval(seq1 of (char), @p, filedirective)' subtype obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 52'15(forall filename'seq1 of (char), val'@p, fdir'filedirective &  is_(fwriteval(filename, val, fdir), bool))Proof Obligation 100' (Unproved)freadval(seq1 of (char))' post condition obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 64'15(forall filename'seq1 of (char) &  post_freadval(filename, freadval(filename)))Proof Obligation 101' (Unproved)freadval(seq1 of (char))' subtype obligation in 'IO' (../../ide/ui/includes/lib/pp/IO.vdmpp) at line 64'15(forall filename'seq1 of (char) &  is_(freadval(filename), (bool * [@p])))Proof Obligation 102' (Unproved)StockWatcher(StockRecord, seq of (Event)), val' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 27'17(len predefinedEvents) in set inds predefinedEventsProof Obligation 103' (Unproved)StockWatcher(StockRecord, seq of (Event))' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 20'10-- After StockWatcher(StockRecord, seq of (Event)) constructor body(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 104' (Unproved)StockWatcher(StockRecord)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 31'10-- After StockWatcher(StockRecord) constructor body(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 105' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 74'8(len eventHistory) in set inds eventHistoryProof Obligation 106' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 77'8(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    e in set inds eventHistory))Proof Obligation 107' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 77'57(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    (e + 1) in set inds eventHistory))Proof Obligation 108' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 78'20(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    (not ((eventHistory((e + 1)).Type) = <LowerLimit>) =>      (e + 1) in set inds eventHistory)))Proof Obligation 109' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 80'8(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) =>      e in set inds eventHistory)))Proof Obligation 110' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 80'57(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) =>      (e + 1) in set inds eventHistory)))Proof Obligation 111' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 81'22(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) =>      (not ((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) =>        (e + 1) in set inds eventHistory))))Proof Obligation 112' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 82'22(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) =>  (forall e in set (inds eventHistory) &    ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) =>      (not ((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) =>        (not ((eventHistory((e + 1)).Type) = <Valley>) =>          (e + 1) in set inds eventHistory)))))Proof Obligation 113' (Unproved)UpdateEvents(nat)' operation post condition obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 45'3(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 114' (Unproved)UpdateEvents(nat)' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 52'25stockHistory <> []Proof Obligation 115' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 53'26(IsInRegion((hd stockHistory), reg) =>  2 in set inds stockHistory)Proof Obligation 116' (Unproved)UpdateEvents(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 54'13-- After eventHistory '= ([mk_Event(<EntersNoActionRegion>, time, cv)] ^ eventHistory)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 117' (Unproved)UpdateEvents(nat)' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 55'33stockHistory <> []Proof Obligation 118' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 56'26((not IsInRegion((hd stockHistory), reg)) =>  2 in set inds stockHistory)Proof Obligation 119' (Unproved)UpdateEvents(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 57'13-- After eventHistory '= ([mk_Event(<LeavesNoActionRegion>, time, cv)] ^ eventHistory)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 120' (Unproved)UpdateEvents(nat)' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 59'14stockHistory <> []Proof Obligation 121' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 59'35(((hd stockHistory) = u) =>  2 in set inds stockHistory)Proof Obligation 122' (Unproved)UpdateEvents(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 60'13-- After eventHistory '= ([mk_Event(<UpperLimit>, time, cv)] ^ eventHistory)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 123' (Unproved)UpdateEvents(nat)' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 61'18stockHistory <> []Proof Obligation 124' (Unproved)UpdateEvents(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 62'19(((hd stockHistory) = l) =>  2 in set inds stockHistory)Proof Obligation 125' (Unproved)UpdateEvents(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 63'13-- After eventHistory '= ([mk_Event(<LowerLimit>, time, cv)] ^ eventHistory)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 126' (Unproved)UpdateEvents(nat)' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 64'33stockHistory <> []Proof Obligation 127' (Unproved)UpdateEvents(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 65'13-- After eventHistory '= ([mk_Event(<Peak>, time, cv)] ^ eventHistory)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 128' (Unproved)UpdateEvents(nat)' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 66'34stockHistory <> []Proof Obligation 129' (Unproved)UpdateEvents(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 68'13-- After eventHistory '= ([mk_Event(<Valley>, time, cv)] ^ eventHistory)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 130' (Unproved)UpdateAction(nat), actionTrigger' map apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 86'24(stockRecord.State) in set dom (stockRecord.Triggers)Proof Obligation 131' (Unproved)UpdateAction(nat)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 88'6-- After currentlyTriggeredAction '= (if (IsActionTriggeredAtTime(tim, actionTrigger, eventHistory) and (not IsInRegion(GetStockValue(tim), (stockRecord.NoActionReg))))then (actionTrigger.Action)else nil)(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 132' (Unproved)ObserveStock(nat)' operation post condition obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 94'10NoActiveTriggerInNoActionRegion(GetStockValue(time), (stockRecord.NoActionReg), currentlyTriggeredAction)Proof Obligation 133' (Unproved)updateStockRecord(StockRecord)' state invariant obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 106'4-- After stockRecord '= sr(((eventHistory((len eventHistory)).Type) = <EntersNoActionRegion>) and (forall e in set (inds eventHistory) & ((e <> (len eventHistory)) => ((((eventHistory(e).Type) = <LeavesNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LowerLimit>) or ((eventHistory((e + 1)).Type) = <UpperLimit>))) and (((eventHistory(e).Type) = <EntersNoActionRegion>) => (((eventHistory((e + 1)).Type) = <LeavesNoActionRegion>) or (((eventHistory((e + 1)).Type) = <Valley>) or ((eventHistory((e + 1)).Type) = <Peak>))))))))Proof Obligation 134' (Unproved)GetStockValue(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 111'161 in set inds eventHistoryProof Obligation 135' (Unproved)GetStockValue(nat)' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 112'16((len eventHistory) - time) in set inds eventHistoryProof Obligation 136' (Unproved)IsPeak(seq of (StockValue)), current' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 133'21(forall svs'seq of (StockValue) &  svs <> [])Proof Obligation 137' (Trivial by <forall x in set s & x in set s>)IsPeak(seq of (StockValue)), indicesOneAbove' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 135'65(forall svs'seq of (StockValue) &  (let current'StockValue = (hd svs) in    (forall i in set (inds svs) &      i in set inds svs)))Proof Obligation 138' (Unproved)IsPeak(seq of (StockValue))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 138'49(forall svs'seq of (StockValue) &  (let current'StockValue = (hd svs) in    (let indicesOneAbove'set of (nat1) = {i | [i in set (inds svs)] & (((current + 1) = svs(i)) and (i <> (len svs)))} in      (forall i in set indicesOneAbove &        (forall v in set {2, ... ,i} &          v in set inds svs)))))Proof Obligation 139' (Unproved)IsPeak(seq of (StockValue))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 140'9(forall svs'seq of (StockValue) &  (let current'StockValue = (hd svs) in    (let indicesOneAbove'set of (nat1) = {i | [i in set (inds svs)] & (((current + 1) = svs(i)) and (i <> (len svs)))} in      (forall i in set indicesOneAbove &        (forall v in set {2, ... ,i} &          (((current + 1) = svs(v)) =>            (i + 1) in set inds svs))))))Proof Obligation 140' (Unproved)IsValley(seq of (StockValue)), current' non-empty sequence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 144'21(forall svs'seq of (StockValue) &  svs <> [])Proof Obligation 141' (Trivial by <forall x in set s & x in set s>)IsValley(seq of (StockValue)), indicesOneBelow' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 146'65(forall svs'seq of (StockValue) &  (let current'StockValue = (hd svs) in    (forall i in set (inds svs) &      i in set inds svs)))Proof Obligation 142' (Unproved)IsValley(seq of (StockValue))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 149'49(forall svs'seq of (StockValue) &  (let current'StockValue = (hd svs) in    (let indicesOneBelow'set of (nat1) = {i | [i in set (inds svs)] & (((current - 1) = svs(i)) and (i <> (len svs)))} in      (forall i in set indicesOneBelow &        (forall v in set {2, ... ,i} &          v in set inds svs)))))Proof Obligation 143' (Unproved)IsValley(seq of (StockValue))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 151'9(forall svs'seq of (StockValue) &  (let current'StockValue = (hd svs) in    (let indicesOneBelow'set of (nat1) = {i | [i in set (inds svs)] & (((current - 1) = svs(i)) and (i <> (len svs)))} in      (forall i in set indicesOneBelow &        (forall v in set {2, ... ,i} &          (((current - 1) = svs(v)) =>            (i + 1) in set inds svs))))))Proof Obligation 144' (Trivial by <forall x in set s & x in set s>)FindLowestIndexFromTime(nat, seq of (Event)), pastEvents' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 155'50(forall time'nat, events'seq of (Event) &  (forall x in set (inds events) &    x in set inds events))Proof Obligation 145' (Unproved)FindLowestIndexFromTime(nat, seq of (Event))' let be st existence obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 157'10(forall time'nat, events'seq of (Event) &  (let pastEvents'set of (nat1) = {x | [x in set (inds events)] & ((events(x).TimeStamp) <= time)} in    exists i, j in set pastEvents & ((i <> j) => ((events(i).TimeStamp) <= (events(j).TimeStamp)))))Proof Obligation 146' (Unproved)FindLowestIndexFromTime(nat, seq of (Event))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 157'51(forall time'nat, events'seq of (Event) &  (let pastEvents'set of (nat1) = {x | [x in set (inds events)] & ((events(x).TimeStamp) <= time)} in    (forall i, j in set pastEvents &      i in set inds events)))Proof Obligation 147' (Unproved)FindLowestIndexFromTime(nat, seq of (Event))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 157'74(forall time'nat, events'seq of (Event) &  (let pastEvents'set of (nat1) = {x | [x in set (inds events)] & ((events(x).TimeStamp) <= time)} in    (forall i, j in set pastEvents &      j in set inds events)))Proof Obligation 148' (Trivial by <forall x in set s & x in set s>)IsActionTriggeredAtTime(nat, ActionTrigger, seq of (Event))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 168'34(forall time'nat, action'ActionTrigger, eventHistory'seq of (Event) &  (let tgr'seq of (EventType) = (action.Trigger) in    (let index'nat1 = FindLowestIndexFromTime(time, eventHistory), s'seq of (Event) = (eventHistory(index, ... ,((index + (len tgr)) - 1))) in      (forall i in set (inds s) &        i in set inds s))))Proof Obligation 149' (Unproved)IsActionTriggeredAtTime(nat, ActionTrigger, seq of (Event))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 168'46(forall time'nat, action'ActionTrigger, eventHistory'seq of (Event) &  (let tgr'seq of (EventType) = (action.Trigger) in    (let index'nat1 = FindLowestIndexFromTime(time, eventHistory), s'seq of (Event) = (eventHistory(index, ... ,((index + (len tgr)) - 1))) in      (forall i in set (inds s) &        i in set inds tgr))))Proof Obligation 150' (Unproved)IsActionTriggeredAtTime(nat, ActionTrigger, seq of (Event))' sequence apply obligation in 'StockWatcher' (../../documentation/examples/VDM++/AutomatedStockBroker/StockWatcher.vdmpp) at line 169'12(forall time'nat, action'ActionTrigger, eventHistory'seq of (Event) &  (let tgr'seq of (EventType) = (action.Trigger) in    (let index'nat1 = FindLowestIndexFromTime(time, eventHistory), s'seq of (Event) = (eventHistory(index, ... ,((index + (len tgr)) - 1))) in      ((forall i in set (inds s) & ((s(i).Type) = tgr(i))) =>        1 in set inds s))))Proof Obligation 151' (Unproved)StockRecord' map apply obligation in 'GLOBAL' (../../documentation/examples/VDM++/AutomatedStockBroker/GLOBAL.vdmpp) at line 32'39(forall mk_StockRecord(p1, p2, p3, p4, p5)'StockRecord &  <PotentialBuy> in set dom p2)Proof Obligation 152' (Unproved)StockRecord' map apply obligation in 'GLOBAL' (../../documentation/examples/VDM++/AutomatedStockBroker/GLOBAL.vdmpp) at line 33'5(forall mk_StockRecord(p1, p2, p3, p4, p5)'StockRecord &  (((p2(<PotentialBuy>).Action) = <Buy>) =>    <Bought> in set dom p2))Proof Obligation 153' (Unproved)testValues' map sequence compatible obligation in 'GLOBAL' (../../documentation/examples/VDM++/AutomatedStockBroker/GLOBAL.vdmpp) at line 42'1forall m1, m2 in set {{mk_token("test") |-> [mk_Event(<LeavesNoActionRegion>, 6, 5), mk_Event(<LowerLimit>, 5, 8), mk_Event(<UpperLimit>, 4, 12), mk_Event(<EntersNoActionRegion>, 3, 11), mk_Event(<LeavesNoActionRegion>, 2, 13), mk_Event(<UpperLimit>, 1, 12), mk_Event(<EntersNoActionRegion>, 0, 10)]}, {mk_token("test12") |-> [mk_Event(<LeavesNoActionRegion>, 6, 5), mk_Event(<LowerLimit>, 5, 8), mk_Event(<UpperLimit>, 4, 12), mk_Event(<EntersNoActionRegion>, 3, 11), mk_Event(<LeavesNoActionRegion>, 2, 16), mk_Event(<UpperLimit>, 1, 12), mk_Event(<EntersNoActionRegion>, 0, 10)]}, {mk_token("test2") |-> [mk_Event(<LeavesNoActionRegion>, 6, 5), mk_Event(<UpperLimit>, 5, 8), mk_Event(<LowerLimit>, 4, 8), mk_Event(<EntersNoActionRegion>, 3, 11), mk_Event(<LeavesNoActionRegion>, 2, 6), mk_Event(<LowerLimit>, 1, 8), mk_Event(<EntersNoActionRegion>, 0, 10)]}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 154' (Unproved)sin(real)' post condition obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 16'5(forall v'real &  post_sin(v, sin(v)))Proof Obligation 155' (Unproved)sin(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 16'5(forall v'real &  is_real(sin(v)))Proof Obligation 156' (Unproved)cos(real)' post condition obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 22'5(forall v'real &  post_cos(v, cos(v)))Proof Obligation 157' (Unproved)cos(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 22'5(forall v'real &  is_real(cos(v)))Proof Obligation 158' (Unproved)tan(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 28'5(forall a'real & (cos(a) <> 0) =>  is_real(tan(a)))Proof Obligation 159' (Unproved)cot(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 34'5(forall a'real & (sin(a) <> 0) =>  is_real(cot(a)))Proof Obligation 160' (Unproved)asin(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 40'5(forall a'real & ((abs a) <= 1) =>  is_real(asin(a)))Proof Obligation 161' (Unproved)acos(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 46'5(forall a'real & ((abs a) <= 1) =>  is_real(acos(a)))Proof Obligation 162' (Unproved)atan(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 52'5(forall v'real &  is_real(atan(v)))Proof Obligation 163' (Unproved)acot(real)' non-zero obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 59'11(forall a'real & (a <> 0) =>  a <> 0)Proof Obligation 164' (Unproved)sqrt(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 63'5(forall a'real & (a >= 0) =>  is_real(sqrt(a)))Proof Obligation 165' (Unproved)pi_f()' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 69'5is_real(pi_f())Proof Obligation 166' (Unproved)exp(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 95'5(forall a'real &  is_real(exp(a)))Proof Obligation 167' (Unproved)ln(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 100'5(forall a'real & (a > 0) =>  is_real(ln(a)))Proof Obligation 168' (Unproved)log(real)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 106'5(forall a'real & (a > 0) =>  is_real(log(a)))Proof Obligation 169' (Unproved)fac(nat)' subtype obligation in 'MATH' (../../ide/ui/includes/lib/pp/MATH.vdmpp) at line 112'5(forall a'nat & (a < 21) =>  is_nat1(fac(a)))

RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)ReduceBalance(AbPurse, nat)' subtype obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 35'26(forall p'AbPurse, val'nat & ((p.balance) >= val) =>  ((p.balance) - val) >= 0)Proof Obligation 2' (Unproved)newAbWorld(map (PurseId) to (AbPurse), set of (PurseId))' subtype obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 44'5(forall purses'map (PurseId) to (AbPurse), auth'set of (PurseId) & ((dom purses) subset auth) =>  inv_AbWorld(mk_AbWorld(auth, purses)))Proof Obligation 3' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 64'17(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  ((frm <> too) =>    ((frm in set (dom (wrld.abPurses))) =>      ((too in set (dom (wrld.abPurses))) =>        frm in set dom (wrld.abPurses)))))Proof Obligation 4' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' post condition obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 47'8(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  pre_TransferOk(wrld, frm, too, val) => post_TransferOk(wrld, frm, too, val, let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo}))))Proof Obligation 5' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 65'18(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     frm in set dom (RESULT.abPurses)))Proof Obligation 6' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 66'14(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     too in set dom (RESULT.abPurses)))Proof Obligation 7' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 67'16(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     frm in set dom (wrld.abPurses)))Proof Obligation 8' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 68'17(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     too in set dom (wrld.abPurses)))Proof Obligation 9' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 70'17(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      frm in set dom (RESULT.abPurses))))Proof Obligation 10' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 71'18(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      too in set dom (RESULT.abPurses))))Proof Obligation 11' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 72'18(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      frm in set dom (wrld.abPurses))))Proof Obligation 12' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 73'19(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      too in set dom (wrld.abPurses))))Proof Obligation 13' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 78'17(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) = (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm, too}) &          name in set dom (wrld.abPurses))))))Proof Obligation 14' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 79'18(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) = (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm, too}) &          name in set dom (RESULT.abPurses))))))Proof Obligation 15' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 81'14(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) = (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm, too}) &          ((GetBalance((wrld.abPurses)(name)) = GetBalance((RESULT.abPurses)(name))) =>            name in set dom (wrld.abPurses)))))))Proof Obligation 16' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 82'15(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat &  (((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})) in     (((GetTotal((RESULT.abPurses)(frm)) + GetTotal((RESULT.abPurses)(too))) = (GetTotal((wrld.abPurses)(frm)) + GetTotal((wrld.abPurses)(too)))) =>      (((GetBalance((RESULT.abPurses)(frm)) + GetBalance((RESULT.abPurses)(too))) = (GetBalance((wrld.abPurses)(frm)) + GetBalance((wrld.abPurses)(too)))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm, too}) &          ((GetBalance((wrld.abPurses)(name)) = GetBalance((RESULT.abPurses)(name))) =>            name in set dom (RESULT.abPurses)))))))Proof Obligation 17' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat), newFrm' function apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 51'4(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat & ((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) =>  pre_ReduceBalance((wrld.abPurses)(frm), val))Proof Obligation 18' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat), newFrm' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 51'18(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat & ((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) =>  frm in set dom (wrld.abPurses))Proof Obligation 19' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat), newTo' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 53'20(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat & ((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) =>  too in set dom (wrld.abPurses))Proof Obligation 20' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' map sequence compatible obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 57'8(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat & ((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) =>  (let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in    forall m1, m2 in set {{frm |-> newFrm}, {too |-> newTo}} &      forall d3 in set dom m1, d4 in set dom m2 &        d3 = d4 => m1(d3) = m2(d4)))Proof Obligation 21' (Unproved)TransferOk(AbWorld, PurseId, PurseId, nat)' subtype obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 55'4(forall wrld'AbWorld, frm'PurseId, too'PurseId, val'nat & ((frm <> too) and ((frm in set (dom (wrld.abPurses))) and ((too in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)))) =>  (let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val), newTo'AbPurse = IncreaseBalance((wrld.abPurses)(too), val) in    inv_AbWorld(mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> newFrm, too |-> newTo})))))Proof Obligation 22' (Trivial by <x in set s => x in set s>)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 96'15(forall wrld'AbWorld, frm'PurseId, val'PurseId &  ((frm in set (dom (wrld.abPurses))) =>    frm in set dom (wrld.abPurses)))Proof Obligation 23' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' post condition obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 84'8(forall wrld'AbWorld, frm'PurseId, val'PurseId &  pre_TransferLost(wrld, frm, any1, val) => post_TransferLost(wrld, frm, any1, val, let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)}))))Proof Obligation 24' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 97'17(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     frm in set dom (RESULT.abPurses)))Proof Obligation 25' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 98'14(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     frm in set dom (wrld.abPurses)))Proof Obligation 26' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 99'17(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     ((GetTotal((RESULT.abPurses)(frm)) = GetTotal((wrld.abPurses)(frm))) =>      frm in set dom (wrld.abPurses))))Proof Obligation 27' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 100'16(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     ((GetTotal((RESULT.abPurses)(frm)) = GetTotal((wrld.abPurses)(frm))) =>      frm in set dom (RESULT.abPurses))))Proof Obligation 28' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 104'19(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     ((GetTotal((RESULT.abPurses)(frm)) = GetTotal((wrld.abPurses)(frm))) =>      ((GetBalance((wrld.abPurses)(frm)) >= GetBalance((RESULT.abPurses)(frm))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm}) &          name in set dom (wrld.abPurses))))))Proof Obligation 29' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 105'16(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     ((GetTotal((RESULT.abPurses)(frm)) = GetTotal((wrld.abPurses)(frm))) =>      ((GetBalance((wrld.abPurses)(frm)) >= GetBalance((RESULT.abPurses)(frm))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm}) &          name in set dom (RESULT.abPurses))))))Proof Obligation 30' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 107'14(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     ((GetTotal((RESULT.abPurses)(frm)) = GetTotal((wrld.abPurses)(frm))) =>      ((GetBalance((wrld.abPurses)(frm)) >= GetBalance((RESULT.abPurses)(frm))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm}) &          ((GetBalance((wrld.abPurses)(name)) = GetBalance((RESULT.abPurses)(name))) =>            name in set dom (wrld.abPurses)))))))Proof Obligation 31' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 108'15(forall wrld'AbWorld, frm'PurseId, val'PurseId &  (((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) => let RESULT'AbWorld = let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})) in     ((GetTotal((RESULT.abPurses)(frm)) = GetTotal((wrld.abPurses)(frm))) =>      ((GetBalance((wrld.abPurses)(frm)) >= GetBalance((RESULT.abPurses)(frm))) =>        (forall name in set ((dom (RESULT.abPurses)) \ {frm}) &          ((GetBalance((wrld.abPurses)(name)) = GetBalance((RESULT.abPurses)(name))) =>            name in set dom (RESULT.abPurses)))))))Proof Obligation 32' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat), newFrm' function apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 89'5(forall wrld'AbWorld, frm'PurseId, val'PurseId & ((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) =>  pre_ReduceBalance((wrld.abPurses)(frm), val))Proof Obligation 33' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat), newFrm' map apply obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 89'19(forall wrld'AbWorld, frm'PurseId, val'PurseId & ((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) =>  frm in set dom (wrld.abPurses))Proof Obligation 34' (Unproved)TransferLost(AbWorld, PurseId, PurseId, nat)' subtype obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 91'4(forall wrld'AbWorld, frm'PurseId, val'PurseId & ((frm in set (dom (wrld.abPurses))) and (GetBalance((wrld.abPurses)(frm)) >= val)) =>  (let newFrm'AbPurse = ReduceBalance((wrld.abPurses)(frm), val) in    inv_AbWorld(mk_AbWorld((wrld.authentic), ((wrld.abPurses) ++ {frm |-> IncreaseLost(newFrm, val)})))))Proof Obligation 35' (Unproved)RunTest(), w' map sequence compatible obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 115'33forall m1, m2 in set {{mk_token(1) |-> mk_AbPurse(100, 0)}, {mk_token(2) |-> mk_AbPurse(10, 0)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 36' (Unproved)RunTest(), w' subtype obligation in 'AbPurseFunctional' (../../documentation/examples/VDM++/Mondex/abpursefunctional.vdmpp) at line 114'22inv_AbWorld(mk_AbWorld({mk_token(1), mk_token(2)}, {mk_token(1) |-> mk_AbPurse(100, 0), mk_token(2) |-> mk_AbPurse(10, 0)}))

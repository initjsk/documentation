RESULT:result:-1:-1,-1:class AbPurseFunctionalstatic public type AbPurse'AbPursestatic public type PurseId'PurseIdstatic public type AbWorld'AbWorldpublic explicit function GetBalance'((unresolved AbPurseFunctional`AbPurse) -> nat)public explicit function GetLost'((unresolved AbPurseFunctional`AbPurse) -> nat)public explicit function IncreaseBalance'((unresolved AbPurseFunctional`AbPurse) * nat -> (unresolved AbPurseFunctional`AbPurse))public explicit function IncreaseLost'((unresolved AbPurseFunctional`AbPurse) * nat -> (unresolved AbPurseFunctional`AbPurse))public explicit function ReduceBalance'((unresolved AbPurseFunctional`AbPurse) * nat -> (unresolved AbPurseFunctional`AbPurse))public explicit function GetTotal'((unresolved AbPurseFunctional`AbPurse) -> nat)private explicit function newAbWorld'(map ((unresolved AbPurseFunctional`PurseId)) to ((unresolved AbPurseFunctional`AbPurse)) * set of ((unresolved AbPurseFunctional`PurseId)) -> (unresolved AbPurseFunctional`AbWorld))public explicit function TransferOk'((unresolved AbPurseFunctional`AbWorld) * (unresolved AbPurseFunctional`PurseId) * (unresolved AbPurseFunctional`PurseId) * nat -> (unresolved AbPurseFunctional`AbWorld))public explicit function TransferLost'((unresolved AbPurseFunctional`AbWorld) * (unresolved AbPurseFunctional`PurseId) * (unresolved AbPurseFunctional`PurseId) * nat -> (unresolved AbPurseFunctional`AbWorld))public explicit operation RunTest'(() ==> (unresolved AbPurseFunctional`AbWorld))end AbPurseFunctional

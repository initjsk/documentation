RESULT:result:-1:-1,-1:class Requestprivate instance variable subject'(unresolved PDP`Subject)private instance variable resource'(unresolved PDP`Resource)private instance variable actions'set of ((unresolved PDP`Action))static private type Inst'Instpublic explicit operation Request'((unresolved PDP`Subject) * (unresolved PDP`Resource) * set of ((unresolved PDP`Action)) ==> (unresolved Request`Request))public explicit operation GetSubject'(() ==> (unresolved PDP`Subject))public explicit operation GetResource'(() ==> (unresolved PDP`Resource))public explicit operation GetActions'(() ==> set of ((unresolved PDP`Action)))end Requestclass Teststatic private value requester'(unresolved FExp`UnId)static private value resource'(unresolved FExp`UnId)static private value Anne'(unresolved FExp`Id)static private value Bob'(unresolved FExp`Id)static private value Charlie'(unresolved FExp`Id)static private value Dave'(unresolved FExp`Id)static private value Eric'(unresolved FExp`Id)static private value Fred'(unresolved FExp`Id)static private value write'(unresolved FExp`Id)static private value read'(unresolved FExp`Id)static private value create'(unresolved FExp`Id)static private value signoff'(unresolved FExp`Id)static private value lab_results_signed'(unresolved FExp`Id)static private value results_analysis_signed'(unresolved FExp`Id)static private value Project1'set of ((unresolved PDP`Subject))static private value Project2'set of ((unresolved PDP`Subject))static private value lab_technician'set of ((unresolved PDP`Subject))static private value lab_manager'set of ((unresolved PDP`Subject))static private value Company2'set of ((unresolved PDP`Subject))static private value Assessor'set of ((unresolved PDP`Subject))static private value lab_results'(unresolved FExp`Id)static private value results_analysis'(unresolved FExp`Id)static private value sc_assess'(unresolved FExp`Id)static private value doc1'(unresolved FExp`Id)static private value doc2'(unresolved FExp`Id)static private value signed'(unresolved FExp`Id)static private value con_nt'(unresolved Test`FExp)static private value con_nf'(unresolved Test`FExp)static private value con_no'(unresolved Test`FExp)static private value project1_rule_nf'(unresolved PDP`Rule)static private value project1_rule_nt'(unresolved PDP`Rule)static private value project1_rule_no'(unresolved PDP`Rule)static private value project1_rule2'(unresolved PDP`Rule)static private value lab_results_project_policy_no'(unresolved PDP`Policy)static private value lab_results_project_policy_nt'(unresolved PDP`Policy)static private value lab_results_project_policy_nf'(unresolved PDP`Policy)static private value lab_results_rule1'(unresolved PDP`Rule)static private value lab_results_rule2'(unresolved PDP`Rule)static private value lab_results_creator_policy'(unresolved PDP`Policy)static private value scale_assess_write'(unresolved PDP`Rule)static private value scale_assess_read'(unresolved PDP`Rule)static private value scale_assess_policy'(unresolved PDP`Policy)static private value gold_policy_no'(unresolved Test`PDP)static private value gold_policy_nt'(unresolved Test`PDP)static private value gold_policy_nf'(unresolved Test`PDP)static private value gold_policy_project_results'(unresolved Test`PDP)static private value gold_policy_results_scale'(unresolved Test`PDP)public explicit operation Run'(() ==> (unresolved PDP`Effect))end Testclass Evaluatorprivate instance variable pdp'(unresolved Evaluator`PDP)private instance variable env'(unresolved Evaluator`Env)private instance variable req'(unresolved Evaluator`Request)private instance variable inst'(unresolved Evaluator`Inst)static private type Inst'Inststatic private value requester'(unresolved FExp`UnId)static private value resource'(unresolved FExp`UnId)public explicit operation Evaluator'((unresolved Evaluator`Request) * (unresolved Evaluator`PDP) * (unresolved Evaluator`Env) ==> (unresolved Evaluator`Evaluator))public explicit operation evaluate'(() ==> (unresolved PDP`Effect))private explicit operation evaluatePDPDenyOverrides'(() ==> (unresolved PDP`Effect))private explicit operation evaluatePDPPermitOverrides'(() ==> (unresolved PDP`Effect))private explicit operation evaluateRule'((unresolved PDP`Rule) ==> (unresolved PDP`Effect))private explicit operation evaluatePol'((unresolved PDP`Policy) ==> (unresolved PDP`Effect))private explicit operation evaluateRulesDenyOverrides'(set of ((unresolved PDP`Rule)) ==> (unresolved PDP`Effect))private explicit operation evaluateRulesPermitOverrides'(set of ((unresolved PDP`Rule)) ==> (unresolved PDP`Effect))private explicit operation targetmatch'((unresolved PDP`Target) ==> bool)end Evaluatorclass PDPprivate instance variable policies'set of ((unresolved PDP`Policy))private instance variable policyCombAlg'(unresolved PDP`CombAlg)public explicit operation PDP'(set of ((unresolved PDP`Policy)) * (unresolved PDP`CombAlg) ==> (unresolved PDP`PDP))static public type Permit'Permitstatic public type Deny'Denystatic public type Null'Nullstatic public type CombAlg'CombAlgstatic public type Policy'Policystatic public type Rule'Rulestatic public type Effect'Effectstatic public type Target'Targetstatic public type Action'Actionstatic public type Subject'Subjectstatic public type Resource'Resourcepublic explicit operation GetpolicyCombAlg'(() ==> (unresolved PDP`CombAlg))public explicit operation Getpolicies'(() ==> set of ((unresolved PDP`Policy)))public explicit operation GetEffect'((unresolved PDP`Rule) ==> (unresolved PDP`Effect))end PDPclass FExpprivate instance variable fexp'(unresolved FExp`Expr)public explicit operation FExp'((unresolved FExp`Expr) ==> (unresolved FExp`FExp))public explicit operation GetExp'(() ==> (unresolved FExp`Expr))static public type AtomicVal'AtomicValstatic public type BoolArray'BoolArraystatic public type IntArray'IntArraystatic public type UnArray'UnArraystatic public type StructuredVal'StructuredValstatic public type Val'Valstatic public type Expr'Exprstatic public type Id'Idstatic public type UnId'UnIdstatic public type BoolExpr'BoolExprstatic public type RelExpr'RelExprstatic public type Unary'Unarystatic public type Infix'Infixstatic public type Equal'Equalstatic public type boolLiteral'boolLiteralstatic public type ArithExpr'ArithExprstatic public type intLiteral'intLiteralstatic public type ArrayLookup'ArrayLookuppublic explicit operation BindExpr'((unresolved FExp`Expr) * (unresolved FExp`Request) ==> (unresolved FExp`Expr))public explicit operation EvaluateBind'((unresolved FExp`Request) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation Evaluate'((unresolved FExp`Expr) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation MId'((unresolved FExp`Id) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation MRelExpr'((unresolved FExp`RelExpr) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation EvaluateLT'((unresolved FExp`Expr) * (unresolved FExp`Expr) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation EvaluateGT'((unresolved FExp`Expr) * (unresolved FExp`Expr) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation MUnary'((unresolved FExp`Unary) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation MInfix'((unresolved FExp`Infix) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation EvaluateAND'((unresolved FExp`Expr) * (unresolved FExp`Expr) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation MEqual'((unresolved FExp`Equal) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation EvaluateOR'((unresolved FExp`Expr) * (unresolved FExp`Expr) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit operation MArrayLookup'((unresolved FExp`ArrayLookup) * (unresolved FExp`Env) ==> (unresolved FExp`Val))private explicit function MLiteral'(((unresolved FExp`boolLiteral) | (unresolved FExp`intLiteral)) -> (unresolved FExp`Val))static public type SType'STypestatic public type AType'ATypepublic explicit operation wfExpr'((unresolved FExp`Env) ==> bool)private explicit operation exprTp'((unresolved FExp`Expr) * (unresolved FExp`Env) ==> (unresolved FExp`SType))private explicit operation wfInfix'((unresolved FExp`Infix) * (unresolved FExp`Env) ==> (unresolved FExp`SType))private explicit operation wfUnary'((unresolved FExp`Unary) * (unresolved FExp`Env) ==> (unresolved FExp`SType))private explicit operation wfRelExpr'((unresolved FExp`RelExpr) * (unresolved FExp`Env) ==> (unresolved FExp`SType))private explicit operation wfLiteral'(((unresolved FExp`boolLiteral) | (unresolved FExp`intLiteral)) ==> (unresolved FExp`SType))private explicit operation wfEqual'((unresolved FExp`Equal) * (unresolved FExp`Env) ==> (unresolved FExp`SType))private explicit operation wfId'((unresolved FExp`Id) * (unresolved FExp`Env) ==> (unresolved FExp`SType))private explicit operation wfUnId'((unresolved FExp`UnId) ==> (unresolved FExp`SType))private explicit operation wfArrayLookup'((unresolved FExp`ArrayLookup) * (unresolved FExp`Env) ==> (unresolved FExp`SType))end FExpclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass Envprivate instance variable senv'map ((unresolved FExp`Id)) to ((unresolved FExp`SType))private instance variable denv'map ((unresolved FExp`Id)) to ((unresolved FExp`Val))public explicit operation Env'(map ((unresolved FExp`Id)) to ((unresolved FExp`SType)) * map ((unresolved FExp`Id)) to ((unresolved FExp`Val)) ==> (unresolved Env`Env))public explicit operation GetSenv'(() ==> map ((unresolved FExp`Id)) to ((unresolved FExp`SType)))public explicit operation GetDenv'(() ==> map ((unresolved FExp`Id)) to ((unresolved FExp`Val)))public explicit operation GetVal'((unresolved FExp`Id) ==> (unresolved FExp`Val))public explicit operation GetAVal'((unresolved FExp`Id) * (unresolved FExp`Id) ==> (unresolved FExp`Val))public explicit operation GetSType'((unresolved FExp`Id) ==> (unresolved FExp`SType))public explicit operation GetSAType'((unresolved FExp`Id) ==> (unresolved FExp`AType))public explicit operation GetAType'((unresolved FExp`Id) * (unresolved FExp`Id) ==> (unresolved FExp`SType))end Env

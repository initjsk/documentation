WARNING:pop3test.vdmpp:5008:137,16:send2 at 93'4 hidden by send2.
WARNING:pop3test.vdmpp:5008:131,14:mc2 at 90'4 hidden by mc2.
WARNING:pop3clienthandler.vdmpp:5012:155,8:Recursive function has no measure.
WARNING:pop3test.vdmpp:5008:109,9:ch at 88'4 hidden by ch.
WARNING:pop3test.vdmpp:5008:136,16:send1 at 92'4 hidden by send1.
WARNING:pop3clienthandler.vdmpp:5001:38,7:Instance variable 'user' is not initialized.
WARNING:pop3test.vdmpp:5008:100,19:server at 87'4 hidden by server.
WARNING:pop3test.vdmpp:5008:128,13:server at 87'4 hidden by server.
WARNING:pop3test.vdmpp:5008:130,14:mc1 at 89'4 hidden by mc1.
WARNING:pop3test.vdmpp:5008:110,13:server at 87'4 hidden by server.
WARNING:pop3test.vdmpp:5008:139,18:listen2 at 95'4 hidden by listen2.
WARNING:pop3clienthandler.vdmpp:5001:43,5:Instance variable 'id' is not initialized.
WARNING:pop3test.vdmpp:5008:127,9:ch at 88'4 hidden by ch.
WARNING:pop3test.vdmpp:5008:138,18:listen1 at 94'4 hidden by listen1.
RESULT:result:-1:-1,-1:class POP3Serverstatic public type MessageInfo'MessageInfoprivate instance variable connChannel'MessageChannelBufferprivate instance variable maildrop'MailDropprivate instance variable passwords'map (UserName) to (Password)private instance variable locks'map (ClientHandlerId) to (UserName)private instance variable serverStarted'boolprivate invariant inv_POP3Server'boolstatic public type MailDrop'MailDropstatic public type MailBox'MailBoxstatic public type ClientHandlerId'ClientHandlerIdpublic explicit operation POP3Server(MailDrop, MessageChannelBuffer, map (UserName) to (Password))'(MailDrop * MessageChannelBuffer * map (UserName) to (Password) ==> POP3Server)public explicit operation AuthenticateUser(UserName, Password)'(UserName * Password ==> bool)public explicit operation IsLocked(UserName)'(UserName ==> bool)private explicit operation SetUserMessages(UserName, seq of (POP3Message))'(UserName * seq of (POP3Message) ==> ())private explicit operation GetUserMail(UserName)'(UserName ==> MailBox)private mutex predicate '?private mutex predicate '?private explicit operation GetUserMessages(UserName)'(UserName ==> seq of (POP3Message))public explicit operation RemoveDeletedMessages(UserName)'(UserName ==> bool)public explicit operation AcquireLock(ClientHandlerId, UserName)'(ClientHandlerId * UserName ==> ())public explicit operation ReleaseLock(ClientHandlerId)'(ClientHandlerId ==> ())private mutex predicate '?private mutex predicate '?private mutex predicate '?private explicit operation CreateClientHandler(MessageChannel)'(MessageChannel ==> ())public explicit operation IsMessageNumber(UserName, nat)'(UserName * nat ==> bool)public explicit operation IsValidMessageNumber(UserName, nat)'(UserName * nat ==> bool)public explicit operation MessageIsDeleted(UserName, nat)'(UserName * nat ==> bool)public explicit operation DeleteMessage(UserName, nat)'(UserName * nat ==> ())public explicit operation GetMsgHeader(UserName, nat)'(UserName * nat ==> seq of (char))public explicit operation GetMsgBody(UserName, nat)'(UserName * nat ==> seq of (char))public explicit operation ResetDeletedMessages(UserName)'(UserName ==> ())public explicit operation GetMessageText(UserName, nat)'(UserName * nat ==> seq of (char))public explicit operation GetMessageSize(UserName, nat)'(UserName * nat ==> nat)public explicit operation GetMessageInfo(UserName, [nat])'(UserName * [nat] ==> set of (MessageInfo))public explicit operation GetUidl(UserName, nat)'(UserName * nat ==> seq of (char))public explicit operation GetAllUidls(UserName)'(UserName ==> seq of (seq of (char)))public explicit operation GetNumberOfMessages(UserName)'(UserName ==> nat)public explicit operation GetMailBoxSize(UserName)'(UserName ==> nat)public explicit operation GetChannel()'(() ==> MessageChannelBuffer)public explicit function sumseq(seq of (nat))'(seq of (nat) -> nat)private explicit function Len(seq of (nat))'(seq of (nat) -> nat)protected thread thread'?public explicit operation WaitForServerStart()'(() ==> ())private permission predicate 'boolend POP3Serverclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass POP3Typesstatic public type ClientCommand'ClientCommandstatic public type StandardClientCommand'StandardClientCommandstatic public type OptionalClientCommand'OptionalClientCommandstatic public type QUIT'QUITstatic public type STAT'STATstatic public type LIST'LISTstatic public type RETR'RETRstatic public type DELE'DELEstatic public type NOOP'NOOPstatic public type RSET'RSETstatic public type TOP'TOPstatic public type UIDL'UIDLstatic public type USER'USERstatic public type PASS'PASSstatic public type APOP'APOPstatic public type UserName'UserNamestatic public type Password'Passwordstatic public type ServerResponse'ServerResponsestatic public type OkResponse'OkResponsestatic public type ErrResponse'ErrResponseend POP3Typesclass MessageChannelBufferprivate instance variable data'[MessageChannel]public explicit operation Put(MessageChannel)'(MessageChannel ==> ())public explicit operation Get()'(() ==> MessageChannel)private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?end MessageChannelBufferclass MessageChannelprivate instance variable data'[(ClientCommand | ServerResponse)]private instance variable io'IOprivate instance variable debug'boolprivate explicit operation Send((ClientCommand | ServerResponse))'((ClientCommand | ServerResponse) ==> ())private explicit operation Listen()'(() ==> (ClientCommand | ServerResponse))public explicit operation ServerSend(ServerResponse)'(ServerResponse ==> ())public explicit operation ClientListen()'(() ==> ServerResponse)public explicit operation ClientSend(ClientCommand)'(ClientCommand ==> ())public explicit operation ServerListen()'(() ==> ClientCommand)private permission predicate 'boolprivate permission predicate 'boolprivate permission predicate 'boolprivate permission predicate 'boolend MessageChannelclass POP3Teststatic private value users'seq of (UserName)static private value passwords'seq of (Password)static private value headers'seq of (seq of (char))static private value bodies'seq of (seq of (char))public explicit function MakePasswordMap()'(() -> map (UserName) to (Password))public explicit function MakeMailDrop()'(() -> MailDrop)public explicit function MakeMessages(UserName)'(UserName -> seq of (POP3Message))private explicit function TestRun1()'(() -> seq of (ClientCommand))private instance variable server'POP3Serverprivate instance variable ch'MessageChannelBufferprivate instance variable mc1'MessageChannelprivate instance variable mc2'MessageChannelprivate instance variable mc3'MessageChannelprivate instance variable send1'POP3TestSenderprivate instance variable send2'POP3TestSenderprivate instance variable listen1'POP3TestListenerprivate instance variable listen2'POP3TestListenerpublic explicit operation StartServer(POP3Server)'(POP3Server ==> ())public explicit operation Test1()'(() ==> ())public explicit operation Test2()'(() ==> ())private explicit operation Start((POP3TestListener | POP3TestSender))'((POP3TestListener | POP3TestSender) ==> ())public explicit operation POP3Test()'(() ==> POP3Test)public trace '(() ==> ())end POP3Testclass POP3TestSenderprivate instance variable id'seq of (char)private instance variable cmds'seq of (ClientCommand)private instance variable mc'MessageChannelpublic explicit operation POP3TestSender(seq of (char), seq of (ClientCommand), MessageChannel)'(seq of (char) * seq of (ClientCommand) * MessageChannel ==> POP3TestSender)private explicit operation LogClient(ClientCommand)'(ClientCommand ==> ())private explicit operation SendCmd(MessageChannel, ClientCommand)'(MessageChannel * ClientCommand ==> ())protected thread thread'?end POP3TestSenderclass POP3TestListenerprivate instance variable id'seq of (char)private instance variable mc'MessageChannelprivate instance variable finished'boolpublic explicit operation POP3TestListener(seq of (char), MessageChannel)'(seq of (char) * MessageChannel ==> POP3TestListener)private explicit operation LogServer(ServerResponse)'(ServerResponse ==> ())public explicit operation IsFinished()'(() ==> ())private permission predicate 'boolprotected thread thread'?end POP3TestListenerclass POP3ClientHandlerstatic private type ServerState'ServerStatestatic private value unknownMessageMsg'seq of (char)static private value negativeStatusMsg'seq of (char)static private value alreadyDeletedMsg'seq of (char)static private value deleteFailMsg'seq of (char)static private value maildropLockedMsg'seq of (char)static private value maildropReadyMsg'seq of (char)static private value passwordFailedMsg'seq of (char)static private value quitMsg'seq of (char)static private value submitPasswordMsg'seq of (char)private instance variable ss'ServerStateprivate instance variable parent'POP3Serverprivate instance variable user'UserNameprivate instance variable msgChannel'MessageChannelprivate instance variable id'ClientHandlerIdprivate instance variable lastWasUser'boolpublic explicit operation POP3ClientHandler(POP3Server, MessageChannel)'(POP3Server * MessageChannel ==> POP3ClientHandler)private explicit operation ReceiveCommand(ClientCommand)'(ClientCommand ==> ServerResponse)private explicit operation ReceiveQUIT(QUIT)'(QUIT ==> ServerResponse)private explicit operation ReceiveSTAT(STAT)'(STAT ==> ServerResponse)private explicit operation ReceiveLIST(LIST)'(LIST ==> ServerResponse)private explicit function MakeScanListHeader(set of (MessageInfo))'(set of (MessageInfo) -> seq of (char))private explicit function set2seq(set of (@tp))'(set of (@tp) -> seq of (@tp))private explicit function MakeScanListing(set of (MessageInfo))'(set of (MessageInfo) -> seq of (char))private explicit function MakeMultilineResponse(seq of (seq of (char)))'(seq of (seq of (char)) -> seq of (char))private explicit function MakeLineSeq(seq of (char))'(seq of (char) -> seq of (seq of (char)))private explicit function GetLine(seq of (char))'(seq of (char) -> (seq of (char) * seq of (char)))private explicit function Len((seq of (char) | seq of (seq of (char))))'((seq of (char) | seq of (seq of (char))) -> nat)private explicit function sum(set of (nat))'(set of (nat) -> nat)private explicit function Card(set of (nat))'(set of (nat) -> nat)private explicit operation ReceiveRETR(RETR)'(RETR ==> ServerResponse)private explicit operation ReceiveDELE(DELE)'(DELE ==> ServerResponse)private explicit operation ReceiveNOOP(NOOP)'(NOOP ==> ServerResponse)private explicit operation ReceiveRSET(RSET)'(RSET ==> ServerResponse)private explicit operation ReceiveTOP(TOP)'(TOP ==> ServerResponse)private explicit operation ReceiveUIDL(UIDL)'(UIDL ==> ServerResponse)private explicit operation ReceiveUSER(USER)'(USER ==> ServerResponse)private explicit operation ReceivePASS(PASS)'(PASS ==> ServerResponse)static public explicit function int2string(int)'(int -> seq of (char))static private explicit function Abs(int)'(int -> nat)static private explicit function int2stringR(nat)'(nat -> seq of (char))static private explicit function Id(nat)'(nat -> nat)protected thread thread'?end POP3ClientHandlerclass POP3Messageprivate instance variable header'seq of (char)private instance variable body'seq of (char)private instance variable deleted'boolprivate instance variable uniqueId'seq of (char)public explicit operation POP3Message(seq of (char), seq of (char), seq of (char))'(seq of (char) * seq of (char) * seq of (char) ==> POP3Message)public explicit operation GetBody()'(() ==> seq of (char))public explicit operation GetHeader()'(() ==> seq of (char))public explicit operation GetText()'(() ==> seq of (char))public explicit operation Delete()'(() ==> POP3Message)public explicit operation IsDeleted()'(() ==> bool)public explicit operation Undelete()'(() ==> POP3Message)public explicit operation GetSize()'(() ==> nat)public explicit operation GetUniqueId()'(() ==> seq of (char))end POP3Message

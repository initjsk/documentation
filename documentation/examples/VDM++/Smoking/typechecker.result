RESULT:result:-1:-1,-1:class Worldstatic public instance variable graphics'gui_Graphicsprivate instance variable table'Tablepublic instance variable agent'Agentprivate instance variable smokers'set of (Smoker)private instance variable limit'natprivate instance variable finished'boolpublic explicit operation World(nat)'(nat ==> World)public explicit operation Yield()'(() ==> ())private explicit operation Finished()'(() ==> nat)public explicit operation Run()'(() ==> ())protected thread thread'?private permission predicate 'boolend Worldclass gui_Graphicspublic explicit operation init()'(() ==> ())public explicit operation tobaccoAdded()'(() ==> ())public explicit operation paperAdded()'(() ==> ())public explicit operation matchAdded()'(() ==> ())public explicit operation tableCleared()'(() ==> ())public explicit operation nowSmoking(nat)'(nat ==> ())static public explicit function ElementToNat(Element)'(Element -> nat)end gui_Graphicsclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass Agentstatic private value thing_l'seq1 of ((<Match> | <Paper> | <Tobacco>))private instance variable timer'natprivate instance variable table'Tablepublic explicit operation Agent(Table)'(Table ==> Agent)public explicit operation GetTime()'(() ==> nat)public explicit operation AddTobacco()'(() ==> bool)public explicit operation AddPaper()'(() ==> bool)public explicit operation AddMatch()'(() ==> bool)end Agentclass MATHstatic public explicit function sin(real)'(real +> real)static public explicit function cos(real)'(real +> real)static public explicit function tan(real)'(real -> real)static public explicit function cot(real)'(real -> real)static public explicit function asin(real)'(real -> real)static public explicit function acos(real)'(real -> real)static public explicit function atan(real)'(real +> real)static public explicit function acot(real)'(real +> real)static public explicit function sqrt(real)'(real -> real)static public explicit function pi_f()'(() +> real)static public explicit operation srand(int)'(int ==> ())static public explicit operation rand(int)'(int ==> int)static public explicit operation srand2(int)'(int ==> int)static public explicit function exp(real)'(real +> real)static public explicit function ln(real)'(real -> real)static public explicit function log(real)'(real -> real)static public explicit function fac(nat)'(nat -> nat1)static public value pi'realend MATHclass Tablestatic public type Element'Elementprivate instance variable elements'set of (Element)private invariant inv_Table'boolpublic explicit operation AddElement(Element)'(Element ==> bool)private explicit operation ExtraElement()'(() ==> set of (Element))public explicit operation TakeElements(set of (Element))'(set of (Element) ==> set of (Element))private explicit operation MissingPM()'(() ==> ())private explicit operation MissingTM()'(() ==> ())private explicit operation MissingTP()'(() ==> ())private permission predicate 'boolprivate permission predicate 'boolprivate permission predicate 'boolend Tableclass Smokerprivate instance variable smokerName'seq of (char)private instance variable elements'set of (Element)private instance variable orig_element'Elementprivate instance variable cigarettes'natprivate instance variable table'Tablepublic explicit operation Smoker(seq of (char), Element, Table)'(seq of (char) * Element * Table ==> Smoker)private explicit operation Roll()'(() ==> ())private explicit operation Smoke()'(() ==> ())protected thread thread'?private permission predicate 'boolend Smokerclass VDMUtilstatic public explicit function set2seq(set of (@T))'(set of (@T) +> seq of (@T))static public explicit function get_file_pos()'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])static public explicit function val2seq_of_char(@T)'(@T +> seq of (char))static public explicit function seq_of_char2val(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))static public explicit function classname(@T)'(@T -> [seq1 of (char)])end VDMUtil

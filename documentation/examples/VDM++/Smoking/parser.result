ERROR:World.vdmpp:2296:26,0:Block cannot be empty
RESULT:result:-1:-1,-1:class Smokerprivate instance variable smokerName'seq of (char)private instance variable elements'set of ((unresolved Table`Element))private instance variable orig_element'(unresolved Table`Element)private instance variable cigarettes'natprivate instance variable table'(unresolved Smoker`Table)public explicit operation Smoker'(seq of (char) * (unresolved Table`Element) * (unresolved Smoker`Table) ==> (unresolved Smoker`Smoker))private explicit operation Roll'(() ==> ())private explicit operation Smoke'(() ==> ())protected thread null'?private permission predicate 'boolend Smokerclass VDMUtilstatic public explicit function set2seq'(set of (@T) +> seq of (@T))static public explicit function get_file_pos'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])static public explicit function val2seq_of_char'(@T +> seq of (char))static public explicit function seq_of_char2val'(seq1 of (char) -> (bool * [@p]))end VDMUtilclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass Worldstatic public instance variable graphics'(unresolved World`gui_Graphics)private instance variable table'(unresolved World`Table)public instance variable agent'(unresolved World`Agent)private instance variable smokers'set of ((unresolved World`Smoker))private instance variable limit'natprivate instance variable finished'boolpublic explicit operation World'(nat ==> (unresolved World`World))private explicit operation Finished'(() ==> nat)public explicit operation Run'(() ==> ())protected thread null'?private permission predicate 'boolend Worldclass gui_Graphicspublic explicit operation init'(() ==> ())public explicit operation tobaccoAdded'(() ==> ())public explicit operation paperAdded'(() ==> ())public explicit operation matchAdded'(() ==> ())public explicit operation tableCleared'(() ==> ())public explicit operation nowSmoking'(nat ==> ())static public explicit function ElementToNat'((unresolved Table`Element) -> nat)end gui_Graphicsclass Tablestatic public type Element'Elementprivate instance variable elements'set of ((unresolved Table`Element))private invariant inv_Table'boolpublic explicit operation AddElement'((unresolved Table`Element) ==> bool)private explicit operation ExtraElement'(() ==> set of ((unresolved Table`Element)))public explicit operation TakeElements'(set of ((unresolved Table`Element)) ==> set of ((unresolved Table`Element)))private explicit operation MissingPM'(() ==> ())private explicit operation MissingTM'(() ==> ())private explicit operation MissingTP'(() ==> ())private permission predicate 'boolprivate permission predicate 'boolprivate permission predicate 'boolend Tableclass Agentstatic private value thing_l'?private instance variable timer'natprivate instance variable table'(unresolved Agent`Table)public explicit operation Agent'((unresolved Agent`Table) ==> (unresolved Agent`Agent))public explicit operation GetTime'(() ==> nat)public explicit operation AddTobacco'(() ==> bool)public explicit operation AddPaper'(() ==> bool)public explicit operation AddMatch'(() ==> bool)end Agentclass MATHstatic public explicit function sin'(real +> real)static public explicit function cos'(real +> real)static public explicit function tan'(real -> real)static public explicit function cot'(real -> real)static public explicit function asin'(real -> real)static public explicit function acos'(real -> real)static public explicit function atan'(real +> real)static public explicit function acot'(real +> real)static public explicit function sqrt'(real -> real)static public explicit function pi_f'(() +> real)static public explicit operation srand'(int ==> ())static public explicit operation rand'(int ==> int)static public explicit operation srand2'(int ==> int)static public explicit function exp'(real +> real)static public explicit function ln'(real -> real)static public explicit function log'(real -> real)static public explicit function fac'(nat -> nat1)static public value pi'?end MATH

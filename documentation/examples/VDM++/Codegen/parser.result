RESULT:result:-1:-1,-1:class SimpleApplyExpressionImpl is subclass of SimpleApplyExpressionprivate instance variable iv_func'(unresolved SimpleApplyExpressionImpl`SimpleExpression)private instance variable iv_args'seq of ((unresolved SimpleApplyExpressionImpl`SimpleExpression))public explicit operation SimpleApplyExpressionImpl'((unresolved SimpleApplyExpressionImpl`SimpleExpression) * seq of ((unresolved SimpleApplyExpressionImpl`SimpleExpression)) ==> (unresolved SimpleApplyExpressionImpl`SimpleApplyExpressionImpl))public explicit operation getFunc'(() ==> (unresolved SimpleApplyExpressionImpl`SimpleExpression))public explicit operation getArgs'(() ==> seq of ((unresolved SimpleApplyExpressionImpl`SimpleExpression)))end SimpleApplyExpressionImplclass SimpleParameter is subclass of SimpleNodepublic explicit operation getName'(() ==> (unresolved SimpleParameter`SimpleIdentifier))public explicit operation getType'(() ==> (unresolved SimpleParameter`SimpleType))end SimpleParameterclass codegen_Utilprivate instance variable compiler'(unresolved codegen_Util`Compiler)private instance variable codegen'(unresolved codegen_Util`Codegen)public explicit operation Run'(() ==> ((bool | int | seq of (char))))public explicit operation Run'(seq of (seq of (char)) ==> seq of (char))public explicit function iToS'(int -> seq of (char))public explicit function showType'(int -> int)public explicit function getSimpleNames'(() -> seq of (seq of (char)))public explicit function parseSimpleProgram'(seq of (char) -> (unresolved codegen_Util`SimpleSpecification))public explicit function writeProgram'(seq of (char) * seq of (char) -> bool)public explicit function compileProgram'(seq of (char) -> bool)public explicit function runProgram'(seq of (char) -> ((bool | int)))end codegen_Utilclass SimpleRealLiteralExpression is subclass of SimpleLiteralExpressionpublic explicit operation getValue'(() ==> real)end SimpleRealLiteralExpressionclass GiraffeReturnStatement is subclass of GiraffeStatementpublic explicit operation getValue'(() ==> (unresolved GiraffeReturnStatement`GiraffeExpression))end GiraffeReturnStatementclass SimpleIntegerLiteralExpression is subclass of SimpleLiteralExpressionpublic explicit operation getValue'(() ==> int)end SimpleIntegerLiteralExpressionclass GiraffeIdentifierImpl is subclass of GiraffeIdentifierprivate instance variable iv_name'seq of (char)public explicit operation GiraffeIdentifierImpl'(seq of (char) ==> (unresolved GiraffeIdentifierImpl`GiraffeIdentifierImpl))public explicit operation getName'(() ==> seq of (char))end GiraffeIdentifierImplclass GiraffeIntegerLiteralExpressionImpl is subclass of GiraffeIntegerLiteralExpressionprivate instance variable iv_value'intpublic explicit operation GiraffeIntegerLiteralExpressionImpl'(int ==> (unresolved GiraffeIntegerLiteralExpressionImpl`GiraffeIntegerLiteralExpressionImpl))public explicit operation getValue'(() ==> int)end GiraffeIntegerLiteralExpressionImplclass SimpleParameterImpl is subclass of SimpleParameterprivate instance variable iv_name'(unresolved SimpleParameterImpl`SimpleIdentifier)private instance variable iv_type'(unresolved SimpleParameterImpl`SimpleType)public explicit operation SimpleParameterImpl'((unresolved SimpleParameterImpl`SimpleIdentifier) * (unresolved SimpleParameterImpl`SimpleType) ==> (unresolved SimpleParameterImpl`SimpleParameterImpl))public explicit operation getName'(() ==> (unresolved SimpleParameterImpl`SimpleIdentifier))public explicit operation getType'(() ==> (unresolved SimpleParameterImpl`SimpleType))end SimpleParameterImplclass VDMUtilstatic public explicit function set2seq'(set of (@T) +> seq of (@T))static public explicit function get_file_pos'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])static public explicit function val2seq_of_char'(@T +> seq of (char))static public explicit function seq_of_char2val'(seq1 of (char) -> (bool * [@p]))end VDMUtilclass Apublic implicit function f'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])end Aclass Compilerstatic private value util'(unresolved Compiler`codegen_Util)private instance variable typeDefs'seq of ((unresolved Compiler`SimpleTypeDefinition))private instance variable context'map (seq of (char)) to (seq of (char))private invariant inv_Compiler'boolprivate instance variable varDecls'seq of ((unresolved Compiler`GiraffeVariableDeclStatement))private instance variable uid'nat1private explicit operation getUniqeName'(() ==> seq of (char))private explicit operation getUniqeSimpleName'(() ==> seq of (char))public explicit operation Compile'(seq of (char) * (unresolved Compiler`SimpleSpecification) ==> (unresolved Compiler`GiraffeSpecification))public explicit operation Compile'((unresolved Compiler`SimpleFunctionDefinition) ==> (unresolved Compiler`GiraffeMethodDefinition))public explicit operation Compile'((unresolved Compiler`SimpleParameter) ==> (unresolved Compiler`GiraffeParameter))public explicit operation Compile'((unresolved Compiler`SimpleType) ==> [(unresolved Compiler`GiraffeType)])public explicit operation Compile'((unresolved Compiler`SimpleExpression) ==> [(unresolved Compiler`GiraffeExpression)])public explicit operation CompileCases'((unresolved Compiler`SimpleCasesExpression) ==> (unresolved Compiler`GiraffeExpression))public explicit operation CompileLet'((unresolved Compiler`SimpleLetExpression) ==> (unresolved Compiler`GiraffeExpression))public explicit operation Compile'((unresolved Compiler`SimpleBinaryOperator) * (unresolved Compiler`SimpleExpression) * (unresolved Compiler`SimpleExpression) ==> [(unresolved Compiler`GiraffeBinaryExpression)])public explicit operation GetType'((unresolved Compiler`SimpleExpression) ==> (unresolved Compiler`SimpleType))public explicit operation GetBasicType'((unresolved Compiler`SimpleType) ==> (unresolved Compiler`SimpleBasicType))public explicit function CompileIf'((unresolved Compiler`SimpleIfExpression) -> (unresolved Compiler`GiraffeIfExpression))public explicit function deflatten'(seq of ((unresolved Compiler`SimpleElseIfExpression)) * (unresolved Compiler`SimpleExpression) -> (unresolved Compiler`GiraffeExpression))end Compilerclass GiraffeSpecificationImpl is subclass of GiraffeSpecificationprivate instance variable iv_clazz'(unresolved GiraffeSpecificationImpl`GiraffeClassDefinition)public explicit operation GiraffeSpecificationImpl'((unresolved GiraffeSpecificationImpl`GiraffeClassDefinition) ==> (unresolved GiraffeSpecificationImpl`GiraffeSpecificationImpl))public explicit operation getClazz'(() ==> (unresolved GiraffeSpecificationImpl`GiraffeClassDefinition))end GiraffeSpecificationImplclass GiraffeLiteralExpressionImpl is subclass of GiraffeExpressionImplend GiraffeLiteralExpressionImplclass SimpleCaseAlternativeImpl is subclass of SimpleCaseAlternativeprivate instance variable iv_test'(unresolved SimpleCaseAlternativeImpl`SimpleExpression)private instance variable iv_exp'(unresolved SimpleCaseAlternativeImpl`SimpleExpression)public explicit operation SimpleCaseAlternativeImpl'((unresolved SimpleCaseAlternativeImpl`SimpleExpression) * (unresolved SimpleCaseAlternativeImpl`SimpleExpression) ==> (unresolved SimpleCaseAlternativeImpl`SimpleCaseAlternativeImpl))public explicit operation getTest'(() ==> (unresolved SimpleCaseAlternativeImpl`SimpleExpression))public explicit operation getExp'(() ==> (unresolved SimpleCaseAlternativeImpl`SimpleExpression))end SimpleCaseAlternativeImplclass SimpleCasesExpressionImpl is subclass of SimpleCasesExpressionprivate instance variable iv_test'(unresolved SimpleCasesExpressionImpl`SimpleExpression)private instance variable iv_alts'seq of ((unresolved SimpleCasesExpressionImpl`SimpleCaseAlternative))private instance variable iv_deflt'[(unresolved SimpleCasesExpressionImpl`SimpleExpression)]public explicit operation SimpleCasesExpressionImpl'((unresolved SimpleCasesExpressionImpl`SimpleExpression) * seq of ((unresolved SimpleCasesExpressionImpl`SimpleCaseAlternative)) * [(unresolved SimpleCasesExpressionImpl`SimpleExpression)] ==> (unresolved SimpleCasesExpressionImpl`SimpleCasesExpressionImpl))public explicit operation getTest'(() ==> (unresolved SimpleCasesExpressionImpl`SimpleExpression))public explicit operation getAlts'(() ==> seq of ((unresolved SimpleCasesExpressionImpl`SimpleCaseAlternative)))public explicit operation hasDeflt'(() ==> bool)public explicit operation getDeflt'(() ==> (unresolved SimpleCasesExpressionImpl`SimpleExpression))end SimpleCasesExpressionImplclass GiraffeCasesExpressionImpl is subclass of GiraffeCasesExpressionprivate instance variable iv_test'(unresolved GiraffeCasesExpressionImpl`GiraffeExpression)private instance variable iv_alts'seq of ((unresolved GiraffeCasesExpressionImpl`GiraffeCaseAlternative))private instance variable iv_deflt'[(unresolved GiraffeCasesExpressionImpl`GiraffeExpression)]public explicit operation GiraffeCasesExpressionImpl'((unresolved GiraffeCasesExpressionImpl`GiraffeExpression) * seq of ((unresolved GiraffeCasesExpressionImpl`GiraffeCaseAlternative)) * [(unresolved GiraffeCasesExpressionImpl`GiraffeExpression)] ==> (unresolved GiraffeCasesExpressionImpl`GiraffeCasesExpressionImpl))public explicit operation getTest'(() ==> (unresolved GiraffeCasesExpressionImpl`GiraffeExpression))public explicit operation getAlts'(() ==> seq of ((unresolved GiraffeCasesExpressionImpl`GiraffeCaseAlternative)))public explicit operation hasDeflt'(() ==> bool)public explicit operation getDeflt'(() ==> (unresolved GiraffeCasesExpressionImpl`GiraffeExpression))end GiraffeCasesExpressionImplclass GiraffeBinaryExpression is subclass of GiraffeExpressionpublic explicit operation getLhs'(() ==> (unresolved GiraffeBinaryExpression`GiraffeExpression))public explicit operation getOp'(() ==> (unresolved GiraffeBinaryExpression`GiraffeBinaryOperator))public explicit operation getRhs'(() ==> (unresolved GiraffeBinaryExpression`GiraffeExpression))end GiraffeBinaryExpressionclass GiraffeParameterImpl is subclass of GiraffeParameterprivate instance variable iv_type'(unresolved GiraffeParameterImpl`GiraffeType)private instance variable iv_name'(unresolved GiraffeParameterImpl`GiraffeIdentifier)public explicit operation GiraffeParameterImpl'((unresolved GiraffeParameterImpl`GiraffeType) * (unresolved GiraffeParameterImpl`GiraffeIdentifier) ==> (unresolved GiraffeParameterImpl`GiraffeParameterImpl))public explicit operation getType'(() ==> (unresolved GiraffeParameterImpl`GiraffeType))public explicit operation getName'(() ==> (unresolved GiraffeParameterImpl`GiraffeIdentifier))end GiraffeParameterImplclass SimpleBinaryOperatorImpl is subclass of SimpleBinaryOperatorend SimpleBinaryOperatorImplclass GiraffeBinaryExpressionImpl is subclass of GiraffeBinaryExpressionprivate instance variable iv_lhs'(unresolved GiraffeBinaryExpressionImpl`GiraffeExpression)private instance variable iv_op'(unresolved GiraffeBinaryExpressionImpl`GiraffeBinaryOperator)private instance variable iv_rhs'(unresolved GiraffeBinaryExpressionImpl`GiraffeExpression)public explicit operation GiraffeBinaryExpressionImpl'((unresolved GiraffeBinaryExpressionImpl`GiraffeExpression) * (unresolved GiraffeBinaryExpressionImpl`GiraffeBinaryOperator) * (unresolved GiraffeBinaryExpressionImpl`GiraffeExpression) ==> (unresolved GiraffeBinaryExpressionImpl`GiraffeBinaryExpressionImpl))public explicit operation getLhs'(() ==> (unresolved GiraffeBinaryExpressionImpl`GiraffeExpression))public explicit operation getOp'(() ==> (unresolved GiraffeBinaryExpressionImpl`GiraffeBinaryOperator))public explicit operation getRhs'(() ==> (unresolved GiraffeBinaryExpressionImpl`GiraffeExpression))end GiraffeBinaryExpressionImplclass GiraffeVariableExpression is subclass of GiraffeExpressionpublic explicit operation getName'(() ==> (unresolved GiraffeVariableExpression`GiraffeIdentifier))end GiraffeVariableExpressionclass GiraffeMethodDefinition is subclass of GiraffeNodepublic explicit operation getName'(() ==> (unresolved GiraffeMethodDefinition`GiraffeIdentifier))public explicit operation getParameters'(() ==> seq of ((unresolved GiraffeMethodDefinition`GiraffeParameter)))public explicit operation getType'(() ==> (unresolved GiraffeMethodDefinition`GiraffeType))public explicit operation getBody'(() ==> seq of ((unresolved GiraffeMethodDefinition`GiraffeStatement)))end GiraffeMethodDefinitionclass SimpleApplyExpression is subclass of SimpleExpressionpublic explicit operation getFunc'(() ==> (unresolved SimpleApplyExpression`SimpleExpression))public explicit operation getArgs'(() ==> seq of ((unresolved SimpleApplyExpression`SimpleExpression)))end SimpleApplyExpressionclass GiraffeUnaryOperatorImpl is subclass of GiraffeUnaryOperatorend GiraffeUnaryOperatorImplclass SimpleIfExpression is subclass of SimpleExpressionpublic explicit operation getTest'(() ==> (unresolved SimpleIfExpression`SimpleExpression))public explicit operation getThn'(() ==> (unresolved SimpleIfExpression`SimpleExpression))public explicit operation getElif'(() ==> seq of ((unresolved SimpleIfExpression`SimpleElseIfExpression)))public explicit operation getEse'(() ==> (unresolved SimpleIfExpression`SimpleExpression))end SimpleIfExpressionclass SimpleNodeend SimpleNodeclass GiraffeIfExpressionImpl is subclass of GiraffeIfExpressionprivate instance variable iv_test'(unresolved GiraffeIfExpressionImpl`GiraffeExpression)private instance variable iv_thn'(unresolved GiraffeIfExpressionImpl`GiraffeExpression)private instance variable iv_els'(unresolved GiraffeIfExpressionImpl`GiraffeExpression)public explicit operation GiraffeIfExpressionImpl'((unresolved GiraffeIfExpressionImpl`GiraffeExpression) * (unresolved GiraffeIfExpressionImpl`GiraffeExpression) * (unresolved GiraffeIfExpressionImpl`GiraffeExpression) ==> (unresolved GiraffeIfExpressionImpl`GiraffeIfExpressionImpl))public explicit operation getTest'(() ==> (unresolved GiraffeIfExpressionImpl`GiraffeExpression))public explicit operation getThn'(() ==> (unresolved GiraffeIfExpressionImpl`GiraffeExpression))public explicit operation getEls'(() ==> (unresolved GiraffeIfExpressionImpl`GiraffeExpression))end GiraffeIfExpressionImplclass GiraffeUnaryOperator is subclass of GiraffeNodestatic public value MINUS'?static public value NOT'?static public value PLUS'?public instance variable name'[seq of (char)]public explicit operation GiraffeUnaryOperator'(seq of (char) ==> (unresolved GiraffeUnaryOperator`GiraffeUnaryOperator))end GiraffeUnaryOperatorclass MATHstatic public explicit function sin'(real +> real)static public explicit function cos'(real +> real)static public explicit function tan'(real -> real)static public explicit function cot'(real -> real)static public explicit function asin'(real -> real)static public explicit function acos'(real -> real)static public explicit function atan'(real +> real)static public explicit function acot'(real +> real)static public explicit function sqrt'(real -> real)static public explicit function pi_f'(() +> real)static public explicit operation srand'(int ==> ())static public explicit operation rand'(int ==> int)static public explicit operation srand2'(int ==> int)static public explicit function exp'(real +> real)static public explicit function ln'(real -> real)static public explicit function log'(real -> real)static public explicit function fac'(nat -> nat1)static public value pi'?end MATHclass GiraffeStatement is subclass of GiraffeNodeend GiraffeStatementclass SimpleCaseAlternative is subclass of SimpleNodepublic explicit operation getTest'(() ==> (unresolved SimpleCaseAlternative`SimpleExpression))public explicit operation getExp'(() ==> (unresolved SimpleCaseAlternative`SimpleExpression))end SimpleCaseAlternativeclass SimpleCasesExpression is subclass of SimpleExpressionpublic explicit operation getTest'(() ==> (unresolved SimpleCasesExpression`SimpleExpression))public explicit operation getAlts'(() ==> seq of ((unresolved SimpleCasesExpression`SimpleCaseAlternative)))public explicit operation hasDeflt'(() ==> bool)public explicit operation getDeflt'(() ==> (unresolved SimpleCasesExpression`SimpleExpression))end SimpleCasesExpressionclass returnConstIntstatic public value returnConstInt'?end returnConstIntclass SimpleUnaryExpressionImpl is subclass of SimpleUnaryExpressionprivate instance variable iv_op'(unresolved SimpleUnaryExpressionImpl`SimpleUnaryOperator)private instance variable iv_exp'(unresolved SimpleUnaryExpressionImpl`SimpleExpression)public explicit operation SimpleUnaryExpressionImpl'((unresolved SimpleUnaryExpressionImpl`SimpleUnaryOperator) * (unresolved SimpleUnaryExpressionImpl`SimpleExpression) ==> (unresolved SimpleUnaryExpressionImpl`SimpleUnaryExpressionImpl))public explicit operation getOp'(() ==> (unresolved SimpleUnaryExpressionImpl`SimpleUnaryOperator))public explicit operation getExp'(() ==> (unresolved SimpleUnaryExpressionImpl`SimpleExpression))end SimpleUnaryExpressionImplclass GiraffeVariableExpressionImpl is subclass of GiraffeVariableExpressionprivate instance variable iv_name'(unresolved GiraffeVariableExpressionImpl`GiraffeIdentifier)public explicit operation GiraffeVariableExpressionImpl'((unresolved GiraffeVariableExpressionImpl`GiraffeIdentifier) ==> (unresolved GiraffeVariableExpressionImpl`GiraffeVariableExpressionImpl))public explicit operation getName'(() ==> (unresolved GiraffeVariableExpressionImpl`GiraffeIdentifier))end GiraffeVariableExpressionImplclass SimpleBasicTypeImpl is subclass of SimpleBasicTypeend SimpleBasicTypeImplclass GiraffeIdentifier is subclass of GiraffeTypepublic explicit operation getName'(() ==> seq of (char))end GiraffeIdentifierclass GiraffeNodeend GiraffeNodeclass SimpleBinaryExpressionImpl is subclass of SimpleBinaryExpressionprivate instance variable iv_lhs'(unresolved SimpleBinaryExpressionImpl`SimpleExpression)private instance variable iv_op'(unresolved SimpleBinaryExpressionImpl`SimpleBinaryOperator)private instance variable iv_rhs'(unresolved SimpleBinaryExpressionImpl`SimpleExpression)public explicit operation SimpleBinaryExpressionImpl'((unresolved SimpleBinaryExpressionImpl`SimpleExpression) * (unresolved SimpleBinaryExpressionImpl`SimpleBinaryOperator) * (unresolved SimpleBinaryExpressionImpl`SimpleExpression) ==> (unresolved SimpleBinaryExpressionImpl`SimpleBinaryExpressionImpl))public explicit operation getLhs'(() ==> (unresolved SimpleBinaryExpressionImpl`SimpleExpression))public explicit operation getOp'(() ==> (unresolved SimpleBinaryExpressionImpl`SimpleBinaryOperator))public explicit operation getRhs'(() ==> (unresolved SimpleBinaryExpressionImpl`SimpleExpression))end SimpleBinaryExpressionImplclass GiraffeBinaryOperatorImpl is subclass of GiraffeBinaryOperatorend GiraffeBinaryOperatorImplclass SimpleElseIfExpressionImpl is subclass of SimpleElseIfExpressionprivate instance variable iv_test'(unresolved SimpleElseIfExpressionImpl`SimpleExpression)private instance variable iv_thn'(unresolved SimpleElseIfExpressionImpl`SimpleExpression)public explicit operation SimpleElseIfExpressionImpl'((unresolved SimpleElseIfExpressionImpl`SimpleExpression) * (unresolved SimpleElseIfExpressionImpl`SimpleExpression) ==> (unresolved SimpleElseIfExpressionImpl`SimpleElseIfExpressionImpl))public explicit operation getTest'(() ==> (unresolved SimpleElseIfExpressionImpl`SimpleExpression))public explicit operation getThn'(() ==> (unresolved SimpleElseIfExpressionImpl`SimpleExpression))end SimpleElseIfExpressionImplclass SimpleType is subclass of SimpleNodeend SimpleTypeclass GiraffeReturnStatementImpl is subclass of GiraffeReturnStatementprivate instance variable iv_value'(unresolved GiraffeReturnStatementImpl`GiraffeExpression)public explicit operation GiraffeReturnStatementImpl'((unresolved GiraffeReturnStatementImpl`GiraffeExpression) ==> (unresolved GiraffeReturnStatementImpl`GiraffeReturnStatementImpl))public explicit operation getValue'(() ==> (unresolved GiraffeReturnStatementImpl`GiraffeExpression))end GiraffeReturnStatementImplclass GiraffeVariableDeclStatementImpl is subclass of GiraffeVariableDeclStatementprivate instance variable iv_type'(unresolved GiraffeVariableDeclStatementImpl`GiraffeType)private instance variable iv_name'(unresolved GiraffeVariableDeclStatementImpl`GiraffeIdentifier)private instance variable iv_value'(unresolved GiraffeVariableDeclStatementImpl`GiraffeExpression)public explicit operation GiraffeVariableDeclStatementImpl'((unresolved GiraffeVariableDeclStatementImpl`GiraffeType) * (unresolved GiraffeVariableDeclStatementImpl`GiraffeIdentifier) * (unresolved GiraffeVariableDeclStatementImpl`GiraffeExpression) ==> (unresolved GiraffeVariableDeclStatementImpl`GiraffeVariableDeclStatementImpl))public explicit operation getType'(() ==> (unresolved GiraffeVariableDeclStatementImpl`GiraffeType))public explicit operation getName'(() ==> (unresolved GiraffeVariableDeclStatementImpl`GiraffeIdentifier))public explicit operation getValue'(() ==> (unresolved GiraffeVariableDeclStatementImpl`GiraffeExpression))end GiraffeVariableDeclStatementImplclass SimpleTypeDefinition is subclass of SimpleDefinitionpublic explicit operation getName'(() ==> (unresolved SimpleTypeDefinition`SimpleIdentifier))public explicit operation getType'(() ==> (unresolved SimpleTypeDefinition`SimpleType))end SimpleTypeDefinitionclass GiraffeExpressionImpl is subclass of GiraffeNodeImplend GiraffeExpressionImplclass SimpleLiteralExpressionImpl is subclass of SimpleExpressionImplend SimpleLiteralExpressionImplclass GiraffeClassDefinition is subclass of GiraffeNodepublic explicit operation getName'(() ==> (unresolved GiraffeClassDefinition`GiraffeIdentifier))public explicit operation getMethods'(() ==> set of ((unresolved GiraffeClassDefinition`GiraffeMethodDefinition)))end GiraffeClassDefinitionclass SimpleExpressionImpl is subclass of SimpleNodeImplend SimpleExpressionImplclass GiraffeElseIfExpression is subclass of GiraffeNodepublic explicit operation getTest'(() ==> (unresolved GiraffeElseIfExpression`GiraffeExpression))public explicit operation getThn'(() ==> (unresolved GiraffeElseIfExpression`GiraffeExpression))end GiraffeElseIfExpressionclass GiraffeCasesExpression is subclass of GiraffeExpressionpublic explicit operation getTest'(() ==> (unresolved GiraffeCasesExpression`GiraffeExpression))public explicit operation getAlts'(() ==> seq of ((unresolved GiraffeCasesExpression`GiraffeCaseAlternative)))public explicit operation hasDeflt'(() ==> bool)public explicit operation getDeflt'(() ==> (unresolved GiraffeCasesExpression`GiraffeExpression))end GiraffeCasesExpressionclass GiraffeType is subclass of GiraffeNodeend GiraffeTypeclass SimpleSpecification is subclass of SimpleNodepublic explicit operation getDefs'(() ==> seq of ((unresolved SimpleSpecification`SimpleDefinition)))end SimpleSpecificationclass GiraffeMethodDefinitionImpl is subclass of GiraffeMethodDefinitionprivate instance variable iv_name'(unresolved GiraffeMethodDefinitionImpl`GiraffeIdentifier)private instance variable iv_parameters'seq of ((unresolved GiraffeMethodDefinitionImpl`GiraffeParameter))private instance variable iv_type'(unresolved GiraffeMethodDefinitionImpl`GiraffeType)private instance variable iv_body'seq of ((unresolved GiraffeMethodDefinitionImpl`GiraffeStatement))public explicit operation GiraffeMethodDefinitionImpl'((unresolved GiraffeMethodDefinitionImpl`GiraffeIdentifier) * seq of ((unresolved GiraffeMethodDefinitionImpl`GiraffeParameter)) * (unresolved GiraffeMethodDefinitionImpl`GiraffeType) * seq of ((unresolved GiraffeMethodDefinitionImpl`GiraffeStatement)) ==> (unresolved GiraffeMethodDefinitionImpl`GiraffeMethodDefinitionImpl))public explicit operation getName'(() ==> (unresolved GiraffeMethodDefinitionImpl`GiraffeIdentifier))public explicit operation getParameters'(() ==> seq of ((unresolved GiraffeMethodDefinitionImpl`GiraffeParameter)))public explicit operation getType'(() ==> (unresolved GiraffeMethodDefinitionImpl`GiraffeType))public explicit operation getBody'(() ==> seq of ((unresolved GiraffeMethodDefinitionImpl`GiraffeStatement)))end GiraffeMethodDefinitionImplclass SimpleBasicType is subclass of SimpleTypestatic public value BOOL'?static public value INT'?static public value NAT'?static public value REAL'?public instance variable name'[seq of (char)]public explicit operation SimpleBasicType'(seq of (char) ==> (unresolved SimpleBasicType`SimpleBasicType))end SimpleBasicTypeclass GiraffeSpecification is subclass of GiraffeNodepublic explicit operation getClazz'(() ==> (unresolved GiraffeSpecification`GiraffeClassDefinition))end GiraffeSpecificationclass GiraffeBooleanLiteralExpressionImpl is subclass of GiraffeBooleanLiteralExpressionprivate instance variable iv_value'boolpublic explicit operation GiraffeBooleanLiteralExpressionImpl'(bool ==> (unresolved GiraffeBooleanLiteralExpressionImpl`GiraffeBooleanLiteralExpressionImpl))public explicit operation getValue'(() ==> bool)end GiraffeBooleanLiteralExpressionImplclass GiraffeBasicType is subclass of GiraffeTypestatic public value BOOL'?static public value DOUBLE'?static public value INT'?public instance variable name'[seq of (char)]public explicit operation GiraffeBasicType'(seq of (char) ==> (unresolved GiraffeBasicType`GiraffeBasicType))end GiraffeBasicTypeclass SimpleTypeDefinitionImpl is subclass of SimpleTypeDefinitionprivate instance variable iv_name'(unresolved SimpleTypeDefinitionImpl`SimpleIdentifier)private instance variable iv_type'(unresolved SimpleTypeDefinitionImpl`SimpleType)public explicit operation SimpleTypeDefinitionImpl'((unresolved SimpleTypeDefinitionImpl`SimpleIdentifier) * (unresolved SimpleTypeDefinitionImpl`SimpleType) ==> (unresolved SimpleTypeDefinitionImpl`SimpleTypeDefinitionImpl))public explicit operation getName'(() ==> (unresolved SimpleTypeDefinitionImpl`SimpleIdentifier))public explicit operation getType'(() ==> (unresolved SimpleTypeDefinitionImpl`SimpleType))end SimpleTypeDefinitionImplclass SimpleUnaryOperator is subclass of SimpleNodestatic public value MINUS'?static public value NOT'?static public value PLUS'?public instance variable name'[seq of (char)]public explicit operation SimpleUnaryOperator'(seq of (char) ==> (unresolved SimpleUnaryOperator`SimpleUnaryOperator))end SimpleUnaryOperatorclass GiraffeElseIfExpressionImpl is subclass of GiraffeElseIfExpressionprivate instance variable iv_test'(unresolved GiraffeElseIfExpressionImpl`GiraffeExpression)private instance variable iv_thn'(unresolved GiraffeElseIfExpressionImpl`GiraffeExpression)public explicit operation GiraffeElseIfExpressionImpl'((unresolved GiraffeElseIfExpressionImpl`GiraffeExpression) * (unresolved GiraffeElseIfExpressionImpl`GiraffeExpression) ==> (unresolved GiraffeElseIfExpressionImpl`GiraffeElseIfExpressionImpl))public explicit operation getTest'(() ==> (unresolved GiraffeElseIfExpressionImpl`GiraffeExpression))public explicit operation getThn'(() ==> (unresolved GiraffeElseIfExpressionImpl`GiraffeExpression))end GiraffeElseIfExpressionImplclass SimpleDefinitionImpl is subclass of SimpleNodeImplend SimpleDefinitionImplclass SimpleUnaryExpression is subclass of SimpleExpressionpublic explicit operation getOp'(() ==> (unresolved SimpleUnaryExpression`SimpleUnaryOperator))public explicit operation getExp'(() ==> (unresolved SimpleUnaryExpression`SimpleExpression))end SimpleUnaryExpressionclass SimpleIntegerLiteralExpressionImpl is subclass of SimpleIntegerLiteralExpressionprivate instance variable iv_value'intpublic explicit operation SimpleIntegerLiteralExpressionImpl'(int ==> (unresolved SimpleIntegerLiteralExpressionImpl`SimpleIntegerLiteralExpressionImpl))public explicit operation getValue'(() ==> int)end SimpleIntegerLiteralExpressionImplclass SimpleBooleanLiteralExpression is subclass of SimpleLiteralExpressionpublic explicit operation getValue'(() ==> bool)end SimpleBooleanLiteralExpressionclass GiraffeStatementImpl is subclass of GiraffeNodeImplend GiraffeStatementImplclass SimpleIdentifierImpl is subclass of SimpleIdentifierprivate instance variable iv_name'seq of (char)public explicit operation SimpleIdentifierImpl'(seq of (char) ==> (unresolved SimpleIdentifierImpl`SimpleIdentifierImpl))public explicit operation getName'(() ==> seq of (char))end SimpleIdentifierImplclass SimpleSpecificationImpl is subclass of SimpleSpecificationprivate instance variable iv_defs'seq of ((unresolved SimpleSpecificationImpl`SimpleDefinition))public explicit operation SimpleSpecificationImpl'(seq of ((unresolved SimpleSpecificationImpl`SimpleDefinition)) ==> (unresolved SimpleSpecificationImpl`SimpleSpecificationImpl))public explicit operation getDefs'(() ==> seq of ((unresolved SimpleSpecificationImpl`SimpleDefinition)))end SimpleSpecificationImplclass SimpleLocalDefinition is subclass of SimpleNodepublic explicit operation getName'(() ==> (unresolved SimpleLocalDefinition`SimpleIdentifier))public explicit operation getValue'(() ==> (unresolved SimpleLocalDefinition`SimpleExpression))end SimpleLocalDefinitionclass SimpleFunctionDefinitionImpl is subclass of SimpleFunctionDefinitionprivate instance variable iv_name'(unresolved SimpleFunctionDefinitionImpl`SimpleIdentifier)private instance variable iv_params'seq of ((unresolved SimpleFunctionDefinitionImpl`SimpleParameter))private instance variable iv_body'(unresolved SimpleFunctionDefinitionImpl`SimpleExpression)public explicit operation SimpleFunctionDefinitionImpl'((unresolved SimpleFunctionDefinitionImpl`SimpleIdentifier) * seq of ((unresolved SimpleFunctionDefinitionImpl`SimpleParameter)) * (unresolved SimpleFunctionDefinitionImpl`SimpleExpression) ==> (unresolved SimpleFunctionDefinitionImpl`SimpleFunctionDefinitionImpl))public explicit operation getName'(() ==> (unresolved SimpleFunctionDefinitionImpl`SimpleIdentifier))public explicit operation getParams'(() ==> seq of ((unresolved SimpleFunctionDefinitionImpl`SimpleParameter)))public explicit operation getBody'(() ==> (unresolved SimpleFunctionDefinitionImpl`SimpleExpression))end SimpleFunctionDefinitionImplclass SimpleFunctionDefinition is subclass of SimpleDefinitionpublic explicit operation getName'(() ==> (unresolved SimpleFunctionDefinition`SimpleIdentifier))public explicit operation getParams'(() ==> seq of ((unresolved SimpleFunctionDefinition`SimpleParameter)))public explicit operation getBody'(() ==> (unresolved SimpleFunctionDefinition`SimpleExpression))end SimpleFunctionDefinitionclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass GiraffeIntegerLiteralExpression is subclass of GiraffeLiteralExpressionpublic explicit operation getValue'(() ==> int)end GiraffeIntegerLiteralExpressionclass SimpleIdentifier is subclass of SimpleTypepublic explicit operation getName'(() ==> seq of (char))end SimpleIdentifierclass SimpleLiteralExpression is subclass of SimpleExpressionend SimpleLiteralExpressionclass GiraffeBasicTypeImpl is subclass of GiraffeBasicTypeend GiraffeBasicTypeImplclass Codegenpublic explicit operation Generate'((unresolved Codegen`GiraffeSpecification) ==> seq of (char))public explicit operation Generate'((unresolved Codegen`GiraffeClassDefinition) ==> seq of (char))public explicit operation Generate'((unresolved Codegen`GiraffeMethodDefinition) ==> seq of (char))public explicit operation Generate'((unresolved Codegen`GiraffeParameter) ==> seq of (char))public explicit operation Generate'((unresolved Codegen`GiraffeType) ==> seq of (char))public explicit operation Generate'((unresolved Codegen`GiraffeStatement) ==> seq of (char))public explicit operation GenerateExpression'((unresolved Codegen`GiraffeExpression) ==> seq of (char))public explicit operation GenerateBinaryExpression'((unresolved Codegen`GiraffeBinaryExpression) ==> seq of (char))public explicit function tail'(seq of (seq of (char)) -> seq of (seq of (char)))end Codegenclass SimpleLocalDefinitionImpl is subclass of SimpleLocalDefinitionprivate instance variable iv_name'(unresolved SimpleLocalDefinitionImpl`SimpleIdentifier)private instance variable iv_value'(unresolved SimpleLocalDefinitionImpl`SimpleExpression)public explicit operation SimpleLocalDefinitionImpl'((unresolved SimpleLocalDefinitionImpl`SimpleIdentifier) * (unresolved SimpleLocalDefinitionImpl`SimpleExpression) ==> (unresolved SimpleLocalDefinitionImpl`SimpleLocalDefinitionImpl))public explicit operation getName'(() ==> (unresolved SimpleLocalDefinitionImpl`SimpleIdentifier))public explicit operation getValue'(() ==> (unresolved SimpleLocalDefinitionImpl`SimpleExpression))end SimpleLocalDefinitionImplclass SimpleElseIfExpression is subclass of SimpleNodepublic explicit operation getTest'(() ==> (unresolved SimpleElseIfExpression`SimpleExpression))public explicit operation getThn'(() ==> (unresolved SimpleElseIfExpression`SimpleExpression))end SimpleElseIfExpressionclass SimpleBooleanLiteralExpressionImpl is subclass of SimpleBooleanLiteralExpressionprivate instance variable iv_value'boolpublic explicit operation SimpleBooleanLiteralExpressionImpl'(bool ==> (unresolved SimpleBooleanLiteralExpressionImpl`SimpleBooleanLiteralExpressionImpl))public explicit operation getValue'(() ==> bool)end SimpleBooleanLiteralExpressionImplclass SimpleLetExpressionImpl is subclass of SimpleLetExpressionprivate instance variable iv_defs'seq of ((unresolved SimpleLetExpressionImpl`SimpleLocalDefinition))private instance variable iv_body'(unresolved SimpleLetExpressionImpl`SimpleExpression)public explicit operation SimpleLetExpressionImpl'(seq of ((unresolved SimpleLetExpressionImpl`SimpleLocalDefinition)) * (unresolved SimpleLetExpressionImpl`SimpleExpression) ==> (unresolved SimpleLetExpressionImpl`SimpleLetExpressionImpl))public explicit operation getDefs'(() ==> seq of ((unresolved SimpleLetExpressionImpl`SimpleLocalDefinition)))public explicit operation getBody'(() ==> (unresolved SimpleLetExpressionImpl`SimpleExpression))end SimpleLetExpressionImplclass GiraffeVariableDeclStatement is subclass of GiraffeStatementpublic explicit operation getType'(() ==> (unresolved GiraffeVariableDeclStatement`GiraffeType))public explicit operation getName'(() ==> (unresolved GiraffeVariableDeclStatement`GiraffeIdentifier))public explicit operation getValue'(() ==> (unresolved GiraffeVariableDeclStatement`GiraffeExpression))end GiraffeVariableDeclStatementclass SimpleTypeImpl is subclass of SimpleNodeImplend SimpleTypeImplclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass SimpleUnaryOperatorImpl is subclass of SimpleUnaryOperatorend SimpleUnaryOperatorImplclass SimpleRealLiteralExpressionImpl is subclass of SimpleRealLiteralExpressionprivate instance variable iv_value'realpublic explicit operation SimpleRealLiteralExpressionImpl'(real ==> (unresolved SimpleRealLiteralExpressionImpl`SimpleRealLiteralExpressionImpl))public explicit operation getValue'(() ==> real)end SimpleRealLiteralExpressionImplclass GiraffeTypeImpl is subclass of GiraffeNodeImplend GiraffeTypeImplclass GiraffeDoubleLiteralExpressionImpl is subclass of GiraffeDoubleLiteralExpressionprivate instance variable iv_value'realpublic explicit operation GiraffeDoubleLiteralExpressionImpl'(real ==> (unresolved GiraffeDoubleLiteralExpressionImpl`GiraffeDoubleLiteralExpressionImpl))public explicit operation getValue'(() ==> real)end GiraffeDoubleLiteralExpressionImplclass SimpleExpression is subclass of SimpleNodeend SimpleExpressionclass GiraffeLiteralExpression is subclass of GiraffeExpressionend GiraffeLiteralExpressionclass GiraffeIfExpression is subclass of GiraffeExpressionpublic explicit operation getTest'(() ==> (unresolved GiraffeIfExpression`GiraffeExpression))public explicit operation getThn'(() ==> (unresolved GiraffeIfExpression`GiraffeExpression))public explicit operation getEls'(() ==> (unresolved GiraffeIfExpression`GiraffeExpression))end GiraffeIfExpressionclass GiraffeCaseAlternativeImpl is subclass of GiraffeCaseAlternativeprivate instance variable iv_test'(unresolved GiraffeCaseAlternativeImpl`GiraffeExpression)private instance variable iv_exp'(unresolved GiraffeCaseAlternativeImpl`GiraffeExpression)public explicit operation GiraffeCaseAlternativeImpl'((unresolved GiraffeCaseAlternativeImpl`GiraffeExpression) * (unresolved GiraffeCaseAlternativeImpl`GiraffeExpression) ==> (unresolved GiraffeCaseAlternativeImpl`GiraffeCaseAlternativeImpl))public explicit operation getTest'(() ==> (unresolved GiraffeCaseAlternativeImpl`GiraffeExpression))public explicit operation getExp'(() ==> (unresolved GiraffeCaseAlternativeImpl`GiraffeExpression))end GiraffeCaseAlternativeImplclass GiraffeCaseAlternative is subclass of GiraffeNodepublic explicit operation getTest'(() ==> (unresolved GiraffeCaseAlternative`GiraffeExpression))public explicit operation getExp'(() ==> (unresolved GiraffeCaseAlternative`GiraffeExpression))end GiraffeCaseAlternativeclass SimpleVariableExpressionImpl is subclass of SimpleVariableExpressionprivate instance variable iv_name'(unresolved SimpleVariableExpressionImpl`SimpleIdentifier)public explicit operation SimpleVariableExpressionImpl'((unresolved SimpleVariableExpressionImpl`SimpleIdentifier) ==> (unresolved SimpleVariableExpressionImpl`SimpleVariableExpressionImpl))public explicit operation getName'(() ==> (unresolved SimpleVariableExpressionImpl`SimpleIdentifier))end SimpleVariableExpressionImplclass SimpleIfExpressionImpl is subclass of SimpleIfExpressionprivate instance variable iv_test'(unresolved SimpleIfExpressionImpl`SimpleExpression)private instance variable iv_thn'(unresolved SimpleIfExpressionImpl`SimpleExpression)private instance variable iv_elif'seq of ((unresolved SimpleIfExpressionImpl`SimpleElseIfExpression))private instance variable iv_ese'(unresolved SimpleIfExpressionImpl`SimpleExpression)public explicit operation SimpleIfExpressionImpl'((unresolved SimpleIfExpressionImpl`SimpleExpression) * (unresolved SimpleIfExpressionImpl`SimpleExpression) * seq of ((unresolved SimpleIfExpressionImpl`SimpleElseIfExpression)) * (unresolved SimpleIfExpressionImpl`SimpleExpression) ==> (unresolved SimpleIfExpressionImpl`SimpleIfExpressionImpl))public explicit operation getTest'(() ==> (unresolved SimpleIfExpressionImpl`SimpleExpression))public explicit operation getThn'(() ==> (unresolved SimpleIfExpressionImpl`SimpleExpression))public explicit operation getElif'(() ==> seq of ((unresolved SimpleIfExpressionImpl`SimpleElseIfExpression)))public explicit operation getEse'(() ==> (unresolved SimpleIfExpressionImpl`SimpleExpression))end SimpleIfExpressionImplclass GiraffeBinaryOperator is subclass of GiraffeNodestatic public value AND'?static public value DIV'?static public value EQUALS'?static public value GE'?static public value GT'?static public value LE'?static public value LT'?static public value MINUS'?static public value MOD'?static public value NE'?static public value OR'?static public value PLUS'?static public value TIMES'?public instance variable name'[seq of (char)]public explicit operation GiraffeBinaryOperator'(seq of (char) ==> (unresolved GiraffeBinaryOperator`GiraffeBinaryOperator))end GiraffeBinaryOperatorclass SimpleBinaryExpression is subclass of SimpleExpressionpublic explicit operation getLhs'(() ==> (unresolved SimpleBinaryExpression`SimpleExpression))public explicit operation getOp'(() ==> (unresolved SimpleBinaryExpression`SimpleBinaryOperator))public explicit operation getRhs'(() ==> (unresolved SimpleBinaryExpression`SimpleExpression))end SimpleBinaryExpressionclass SimpleLetExpression is subclass of SimpleExpressionpublic explicit operation getDefs'(() ==> seq of ((unresolved SimpleLetExpression`SimpleLocalDefinition)))public explicit operation getBody'(() ==> (unresolved SimpleLetExpression`SimpleExpression))end SimpleLetExpressionclass GiraffeBooleanLiteralExpression is subclass of GiraffeLiteralExpressionpublic explicit operation getValue'(() ==> bool)end GiraffeBooleanLiteralExpressionclass SimpleDefinition is subclass of SimpleNodeend SimpleDefinitionclass GiraffeParameter is subclass of GiraffeNodepublic explicit operation getType'(() ==> (unresolved GiraffeParameter`GiraffeType))public explicit operation getName'(() ==> (unresolved GiraffeParameter`GiraffeIdentifier))end GiraffeParameterclass GiraffeExpression is subclass of GiraffeNodeend GiraffeExpressionclass GiraffeDoubleLiteralExpression is subclass of GiraffeLiteralExpressionpublic explicit operation getValue'(() ==> real)end GiraffeDoubleLiteralExpressionclass GiraffeNodeImplend GiraffeNodeImplclass GiraffeUnaryExpressionImpl is subclass of GiraffeUnaryExpressionprivate instance variable iv_op'(unresolved GiraffeUnaryExpressionImpl`GiraffeUnaryOperator)private instance variable iv_exp'(unresolved GiraffeUnaryExpressionImpl`GiraffeExpression)public explicit operation GiraffeUnaryExpressionImpl'((unresolved GiraffeUnaryExpressionImpl`GiraffeUnaryOperator) * (unresolved GiraffeUnaryExpressionImpl`GiraffeExpression) ==> (unresolved GiraffeUnaryExpressionImpl`GiraffeUnaryExpressionImpl))public explicit operation getOp'(() ==> (unresolved GiraffeUnaryExpressionImpl`GiraffeUnaryOperator))public explicit operation getExp'(() ==> (unresolved GiraffeUnaryExpressionImpl`GiraffeExpression))end GiraffeUnaryExpressionImplclass GiraffeUnaryExpression is subclass of GiraffeExpressionpublic explicit operation getOp'(() ==> (unresolved GiraffeUnaryExpression`GiraffeUnaryOperator))public explicit operation getExp'(() ==> (unresolved GiraffeUnaryExpression`GiraffeExpression))end GiraffeUnaryExpressionclass SimpleBinaryOperator is subclass of SimpleNodestatic public value AND'?static public value DIV'?static public value DIVIDE'?static public value EQUALS'?static public value EQUIVALENT'?static public value GE'?static public value GT'?static public value IMPLIES'?static public value LE'?static public value LT'?static public value MINUS'?static public value MOD'?static public value NE'?static public value OR'?static public value PLUS'?static public value REM'?static public value TIMES'?public instance variable name'[seq of (char)]public explicit operation SimpleBinaryOperator'(seq of (char) ==> (unresolved SimpleBinaryOperator`SimpleBinaryOperator))end SimpleBinaryOperatorclass GiraffeClassDefinitionImpl is subclass of GiraffeClassDefinitionprivate instance variable iv_name'(unresolved GiraffeClassDefinitionImpl`GiraffeIdentifier)private instance variable iv_methods'set of ((unresolved GiraffeClassDefinitionImpl`GiraffeMethodDefinition))public explicit operation GiraffeClassDefinitionImpl'((unresolved GiraffeClassDefinitionImpl`GiraffeIdentifier) * set of ((unresolved GiraffeClassDefinitionImpl`GiraffeMethodDefinition)) ==> (unresolved GiraffeClassDefinitionImpl`GiraffeClassDefinitionImpl))public explicit operation getName'(() ==> (unresolved GiraffeClassDefinitionImpl`GiraffeIdentifier))public explicit operation getMethods'(() ==> set of ((unresolved GiraffeClassDefinitionImpl`GiraffeMethodDefinition)))end GiraffeClassDefinitionImplclass SimpleVariableExpression is subclass of SimpleExpressionpublic explicit operation getName'(() ==> (unresolved SimpleVariableExpression`SimpleIdentifier))end SimpleVariableExpressionclass SimpleNodeImplend SimpleNodeImpl

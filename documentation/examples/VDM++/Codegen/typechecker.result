WARNING:Compiler.vdmpp:5000:161,12:Definition 'exp' not used.
WARNING:Compiler.vdmpp:5000:165,18:Definition 'type' not used.
WARNING:Compiler.vdmpp:5012:179,17:Recursive function has no measure.
WARNING:nativetest.vdmpp:5000:27,14:Definition 'c' not used.
WARNING:nativetest.vdmpp:5000:28,14:Definition 'd' not used.
ERROR:Codegen.vdmpp:3313:77,36:Operation returns void value. Actual' (() | seq1 of (char)) Expected' seq of (char)
ERROR:Codegen.vdmpp:3313:60,30:Operation returns void value. Actual' (() | seq of (char)) Expected' seq of (char)
ERROR:Codegen.vdmpp:3313:50,20:Operation returns void value. Actual' (() | seq of (char)) Expected' seq of (char)
ERROR:Codegen.vdmpp:3313:36,20:Operation returns void value. Actual' (() | seq of (char)) Expected' seq of (char)
RESULT:result:-1:-1,-1:class VDMUtilstatic public explicit function set2seq(set of (@T))'(set of (@T) +> seq of (@T))static public explicit function get_file_pos()'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])static public explicit function val2seq_of_char(@T)'(@T +> seq of (char))static public explicit function seq_of_char2val(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))end VDMUtilclass Apublic implicit function f()'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])end Aclass GiraffeCasesExpressionImpl is subclass of GiraffeCasesExpressionprivate instance variable iv_test'GiraffeExpressionprivate instance variable iv_alts'seq of (GiraffeCaseAlternative)private instance variable iv_deflt'[GiraffeExpression]public explicit operation GiraffeCasesExpressionImpl(GiraffeExpression, seq of (GiraffeCaseAlternative), [GiraffeExpression])'(GiraffeExpression * seq of (GiraffeCaseAlternative) * [GiraffeExpression] ==> GiraffeCasesExpressionImpl)public explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getAlts()'(() ==> seq of (GiraffeCaseAlternative))public explicit operation hasDeflt()'(() ==> bool)public explicit operation getDeflt()'(() ==> GiraffeExpression)end GiraffeCasesExpressionImplclass GiraffeIdentifierImpl is subclass of GiraffeIdentifierprivate instance variable iv_name'seq of (char)public explicit operation GiraffeIdentifierImpl(seq of (char))'(seq of (char) ==> GiraffeIdentifierImpl)public explicit operation getName()'(() ==> seq of (char))end GiraffeIdentifierImplclass GiraffeElseIfExpressionImpl is subclass of GiraffeElseIfExpressionprivate instance variable iv_test'GiraffeExpressionprivate instance variable iv_thn'GiraffeExpressionpublic explicit operation GiraffeElseIfExpressionImpl(GiraffeExpression, GiraffeExpression)'(GiraffeExpression * GiraffeExpression ==> GiraffeElseIfExpressionImpl)public explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getThn()'(() ==> GiraffeExpression)end GiraffeElseIfExpressionImplclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass SimpleSpecification is subclass of SimpleNodepublic explicit operation getDefs()'(() ==> seq of (SimpleDefinition))end SimpleSpecificationclass GiraffeMethodDefinition is subclass of GiraffeNodepublic explicit operation getName()'(() ==> GiraffeIdentifier)public explicit operation getParameters()'(() ==> seq of (GiraffeParameter))public explicit operation getType()'(() ==> GiraffeType)public explicit operation getBody()'(() ==> seq of (GiraffeStatement))end GiraffeMethodDefinitionclass SimpleCaseAlternative is subclass of SimpleNodepublic explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getExp()'(() ==> SimpleExpression)end SimpleCaseAlternativeclass GiraffeClassDefinitionImpl is subclass of GiraffeClassDefinitionprivate instance variable iv_name'GiraffeIdentifierprivate instance variable iv_methods'set of (GiraffeMethodDefinition)public explicit operation GiraffeClassDefinitionImpl(GiraffeIdentifier, set of (GiraffeMethodDefinition))'(GiraffeIdentifier * set of (GiraffeMethodDefinition) ==> GiraffeClassDefinitionImpl)public explicit operation getName()'(() ==> GiraffeIdentifier)public explicit operation getMethods()'(() ==> set of (GiraffeMethodDefinition))end GiraffeClassDefinitionImplclass SimpleLocalDefinition is subclass of SimpleNodepublic explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getValue()'(() ==> SimpleExpression)end SimpleLocalDefinitionclass GiraffeDoubleLiteralExpressionImpl is subclass of GiraffeDoubleLiteralExpressionprivate instance variable iv_value'realpublic explicit operation GiraffeDoubleLiteralExpressionImpl(real)'(real ==> GiraffeDoubleLiteralExpressionImpl)public explicit operation getValue()'(() ==> real)end GiraffeDoubleLiteralExpressionImplclass GiraffeBooleanLiteralExpressionImpl is subclass of GiraffeBooleanLiteralExpressionprivate instance variable iv_value'boolpublic explicit operation GiraffeBooleanLiteralExpressionImpl(bool)'(bool ==> GiraffeBooleanLiteralExpressionImpl)public explicit operation getValue()'(() ==> bool)end GiraffeBooleanLiteralExpressionImplclass Codegenpublic explicit operation Generate(GiraffeSpecification)'(GiraffeSpecification ==> seq of (char))public explicit operation Generate(GiraffeClassDefinition)'(GiraffeClassDefinition ==> seq of (char))public explicit operation Generate(GiraffeMethodDefinition)'(GiraffeMethodDefinition ==> seq of (char))public explicit operation Generate(GiraffeParameter)'(GiraffeParameter ==> seq of (char))public explicit operation Generate(GiraffeType)'(GiraffeType ==> seq of (char))public explicit operation Generate(GiraffeStatement)'(GiraffeStatement ==> seq of (char))public explicit operation GenerateExpression(GiraffeExpression)'(GiraffeExpression ==> seq of (char))public explicit operation GenerateBinaryExpression(GiraffeBinaryExpression)'(GiraffeBinaryExpression ==> seq of (char))public explicit function tail(seq of (seq of (char)))'(seq of (seq of (char)) -> seq of (seq of (char)))end Codegenclass SimpleBinaryOperator is subclass of SimpleNodestatic public value AND'SimpleBinaryOperatorstatic public value DIV'SimpleBinaryOperatorstatic public value DIVIDE'SimpleBinaryOperatorstatic public value EQUALS'SimpleBinaryOperatorstatic public value EQUIVALENT'SimpleBinaryOperatorstatic public value GE'SimpleBinaryOperatorstatic public value GT'SimpleBinaryOperatorstatic public value IMPLIES'SimpleBinaryOperatorstatic public value LE'SimpleBinaryOperatorstatic public value LT'SimpleBinaryOperatorstatic public value MINUS'SimpleBinaryOperatorstatic public value MOD'SimpleBinaryOperatorstatic public value NE'SimpleBinaryOperatorstatic public value OR'SimpleBinaryOperatorstatic public value PLUS'SimpleBinaryOperatorstatic public value REM'SimpleBinaryOperatorstatic public value TIMES'SimpleBinaryOperatorpublic instance variable name'[seq of (char)]public explicit operation SimpleBinaryOperator(seq of (char))'(seq of (char) ==> SimpleBinaryOperator)end SimpleBinaryOperatorclass SimpleParameterImpl is subclass of SimpleParameterprivate instance variable iv_name'SimpleIdentifierprivate instance variable iv_type'SimpleTypepublic explicit operation SimpleParameterImpl(SimpleIdentifier, SimpleType)'(SimpleIdentifier * SimpleType ==> SimpleParameterImpl)public explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getType()'(() ==> SimpleType)end SimpleParameterImplclass SimpleApplyExpression is subclass of SimpleExpressionpublic explicit operation getFunc()'(() ==> SimpleExpression)public explicit operation getArgs()'(() ==> seq of (SimpleExpression))end SimpleApplyExpressionclass SimpleDefinitionImpl is subclass of SimpleNodeImplend SimpleDefinitionImplclass SimpleRealLiteralExpressionImpl is subclass of SimpleRealLiteralExpressionprivate instance variable iv_value'realpublic explicit operation SimpleRealLiteralExpressionImpl(real)'(real ==> SimpleRealLiteralExpressionImpl)public explicit operation getValue()'(() ==> real)end SimpleRealLiteralExpressionImplclass SimpleVariableExpression is subclass of SimpleExpressionpublic explicit operation getName()'(() ==> SimpleIdentifier)end SimpleVariableExpressionclass GiraffeClassDefinition is subclass of GiraffeNodepublic explicit operation getName()'(() ==> GiraffeIdentifier)public explicit operation getMethods()'(() ==> set of (GiraffeMethodDefinition))end GiraffeClassDefinitionclass GiraffeBinaryOperatorImpl is subclass of GiraffeBinaryOperatorend GiraffeBinaryOperatorImplclass SimpleTypeImpl is subclass of SimpleNodeImplend SimpleTypeImplclass SimpleFunctionDefinitionImpl is subclass of SimpleFunctionDefinitionprivate instance variable iv_name'SimpleIdentifierprivate instance variable iv_params'seq of (SimpleParameter)private instance variable iv_body'SimpleExpressionpublic explicit operation SimpleFunctionDefinitionImpl(SimpleIdentifier, seq of (SimpleParameter), SimpleExpression)'(SimpleIdentifier * seq of (SimpleParameter) * SimpleExpression ==> SimpleFunctionDefinitionImpl)public explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getParams()'(() ==> seq of (SimpleParameter))public explicit operation getBody()'(() ==> SimpleExpression)end SimpleFunctionDefinitionImplclass GiraffeLiteralExpression is subclass of GiraffeExpressionend GiraffeLiteralExpressionclass SimpleFunctionDefinition is subclass of SimpleDefinitionpublic explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getParams()'(() ==> seq of (SimpleParameter))public explicit operation getBody()'(() ==> SimpleExpression)end SimpleFunctionDefinitionclass SimpleElseIfExpression is subclass of SimpleNodepublic explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getThn()'(() ==> SimpleExpression)end SimpleElseIfExpressionclass GiraffeIfExpression is subclass of GiraffeExpressionpublic explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getThn()'(() ==> GiraffeExpression)public explicit operation getEls()'(() ==> GiraffeExpression)end GiraffeIfExpressionclass GiraffeIdentifier is subclass of GiraffeTypepublic explicit operation getName()'(() ==> seq of (char))end GiraffeIdentifierclass GiraffeTypeImpl is subclass of GiraffeNodeImplend GiraffeTypeImplclass GiraffeVariableExpressionImpl is subclass of GiraffeVariableExpressionprivate instance variable iv_name'GiraffeIdentifierpublic explicit operation GiraffeVariableExpressionImpl(GiraffeIdentifier)'(GiraffeIdentifier ==> GiraffeVariableExpressionImpl)public explicit operation getName()'(() ==> GiraffeIdentifier)end GiraffeVariableExpressionImplclass SimpleLiteralExpression is subclass of SimpleExpressionend SimpleLiteralExpressionclass GiraffeVariableExpression is subclass of GiraffeExpressionpublic explicit operation getName()'(() ==> GiraffeIdentifier)end GiraffeVariableExpressionclass SimpleBooleanLiteralExpression is subclass of SimpleLiteralExpressionpublic explicit operation getValue()'(() ==> bool)end SimpleBooleanLiteralExpressionclass codegen_Utilprivate instance variable compiler'Compilerprivate instance variable codegen'Codegenpublic explicit operation Run()'(() ==> (bool | int | seq of (char)))public explicit operation Run(seq of (seq of (char)))'(seq of (seq of (char)) ==> seq of (char))public explicit function iToS(int)'(int -> seq of (char))public explicit function showType(int)'(int -> int)public explicit function getSimpleNames()'(() -> seq of (seq of (char)))public explicit function parseSimpleProgram(seq of (char))'(seq of (char) -> SimpleSpecification)public explicit function writeProgram(seq of (char), seq of (char))'(seq of (char) * seq of (char) -> bool)public explicit function compileProgram(seq of (char))'(seq of (char) -> bool)public explicit function runProgram(seq of (char))'(seq of (char) -> (bool | int))end codegen_Utilclass SimpleBasicTypeImpl is subclass of SimpleBasicTypeend SimpleBasicTypeImplclass GiraffeReturnStatement is subclass of GiraffeStatementpublic explicit operation getValue()'(() ==> GiraffeExpression)end GiraffeReturnStatementclass SimpleSpecificationImpl is subclass of SimpleSpecificationprivate instance variable iv_defs'seq of (SimpleDefinition)public explicit operation SimpleSpecificationImpl(seq of (SimpleDefinition))'(seq of (SimpleDefinition) ==> SimpleSpecificationImpl)public explicit operation getDefs()'(() ==> seq of (SimpleDefinition))end SimpleSpecificationImplclass SimpleDefinition is subclass of SimpleNodeend SimpleDefinitionclass GiraffeBasicTypeImpl is subclass of GiraffeBasicTypeend GiraffeBasicTypeImplclass SimpleExpressionImpl is subclass of SimpleNodeImplend SimpleExpressionImplclass GiraffeReturnStatementImpl is subclass of GiraffeReturnStatementprivate instance variable iv_value'GiraffeExpressionpublic explicit operation GiraffeReturnStatementImpl(GiraffeExpression)'(GiraffeExpression ==> GiraffeReturnStatementImpl)public explicit operation getValue()'(() ==> GiraffeExpression)end GiraffeReturnStatementImplclass SimpleIdentifier is subclass of SimpleTypepublic explicit operation getName()'(() ==> seq of (char))end SimpleIdentifierclass SimpleCasesExpression is subclass of SimpleExpressionpublic explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getAlts()'(() ==> seq of (SimpleCaseAlternative))public explicit operation hasDeflt()'(() ==> bool)public explicit operation getDeflt()'(() ==> SimpleExpression)end SimpleCasesExpressionclass SimpleBooleanLiteralExpressionImpl is subclass of SimpleBooleanLiteralExpressionprivate instance variable iv_value'boolpublic explicit operation SimpleBooleanLiteralExpressionImpl(bool)'(bool ==> SimpleBooleanLiteralExpressionImpl)public explicit operation getValue()'(() ==> bool)end SimpleBooleanLiteralExpressionImplclass SimpleParameter is subclass of SimpleNodepublic explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getType()'(() ==> SimpleType)end SimpleParameterclass SimpleNodeImplend SimpleNodeImplclass SimpleLocalDefinitionImpl is subclass of SimpleLocalDefinitionprivate instance variable iv_name'SimpleIdentifierprivate instance variable iv_value'SimpleExpressionpublic explicit operation SimpleLocalDefinitionImpl(SimpleIdentifier, SimpleExpression)'(SimpleIdentifier * SimpleExpression ==> SimpleLocalDefinitionImpl)public explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getValue()'(() ==> SimpleExpression)end SimpleLocalDefinitionImplclass SimpleLetExpressionImpl is subclass of SimpleLetExpressionprivate instance variable iv_defs'seq of (SimpleLocalDefinition)private instance variable iv_body'SimpleExpressionpublic explicit operation SimpleLetExpressionImpl(seq of (SimpleLocalDefinition), SimpleExpression)'(seq of (SimpleLocalDefinition) * SimpleExpression ==> SimpleLetExpressionImpl)public explicit operation getDefs()'(() ==> seq of (SimpleLocalDefinition))public explicit operation getBody()'(() ==> SimpleExpression)end SimpleLetExpressionImplclass GiraffeExpressionImpl is subclass of GiraffeNodeImplend GiraffeExpressionImplclass SimpleIntegerLiteralExpressionImpl is subclass of SimpleIntegerLiteralExpressionprivate instance variable iv_value'intpublic explicit operation SimpleIntegerLiteralExpressionImpl(int)'(int ==> SimpleIntegerLiteralExpressionImpl)public explicit operation getValue()'(() ==> int)end SimpleIntegerLiteralExpressionImplclass SimpleVariableExpressionImpl is subclass of SimpleVariableExpressionprivate instance variable iv_name'SimpleIdentifierpublic explicit operation SimpleVariableExpressionImpl(SimpleIdentifier)'(SimpleIdentifier ==> SimpleVariableExpressionImpl)public explicit operation getName()'(() ==> SimpleIdentifier)end SimpleVariableExpressionImplclass GiraffeSpecificationImpl is subclass of GiraffeSpecificationprivate instance variable iv_clazz'GiraffeClassDefinitionpublic explicit operation GiraffeSpecificationImpl(GiraffeClassDefinition)'(GiraffeClassDefinition ==> GiraffeSpecificationImpl)public explicit operation getClazz()'(() ==> GiraffeClassDefinition)end GiraffeSpecificationImplclass GiraffeIntegerLiteralExpression is subclass of GiraffeLiteralExpressionpublic explicit operation getValue()'(() ==> int)end GiraffeIntegerLiteralExpressionclass GiraffeBooleanLiteralExpression is subclass of GiraffeLiteralExpressionpublic explicit operation getValue()'(() ==> bool)end GiraffeBooleanLiteralExpressionclass GiraffeExpression is subclass of GiraffeNodeend GiraffeExpressionclass SimpleLiteralExpressionImpl is subclass of SimpleExpressionImplend SimpleLiteralExpressionImplclass GiraffeNodeend GiraffeNodeclass GiraffeBasicType is subclass of GiraffeTypestatic public value BOOL'GiraffeBasicTypestatic public value DOUBLE'GiraffeBasicTypestatic public value INT'GiraffeBasicTypepublic instance variable name'[seq of (char)]public explicit operation GiraffeBasicType(seq of (char))'(seq of (char) ==> GiraffeBasicType)end GiraffeBasicTypeclass GiraffeLiteralExpressionImpl is subclass of GiraffeExpressionImplend GiraffeLiteralExpressionImplclass GiraffeParameter is subclass of GiraffeNodepublic explicit operation getType()'(() ==> GiraffeType)public explicit operation getName()'(() ==> GiraffeIdentifier)end GiraffeParameterclass SimpleBasicType is subclass of SimpleTypestatic public value BOOL'SimpleBasicTypestatic public value INT'SimpleBasicTypestatic public value NAT'SimpleBasicTypestatic public value REAL'SimpleBasicTypepublic instance variable name'[seq of (char)]public explicit operation SimpleBasicType(seq of (char))'(seq of (char) ==> SimpleBasicType)end SimpleBasicTypeclass GiraffeVariableDeclStatement is subclass of GiraffeStatementpublic explicit operation getType()'(() ==> GiraffeType)public explicit operation getName()'(() ==> GiraffeIdentifier)public explicit operation getValue()'(() ==> GiraffeExpression)end GiraffeVariableDeclStatementclass GiraffeCaseAlternative is subclass of GiraffeNodepublic explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getExp()'(() ==> GiraffeExpression)end GiraffeCaseAlternativeclass SimpleLetExpression is subclass of SimpleExpressionpublic explicit operation getDefs()'(() ==> seq of (SimpleLocalDefinition))public explicit operation getBody()'(() ==> SimpleExpression)end SimpleLetExpressionclass GiraffeIntegerLiteralExpressionImpl is subclass of GiraffeIntegerLiteralExpressionprivate instance variable iv_value'intpublic explicit operation GiraffeIntegerLiteralExpressionImpl(int)'(int ==> GiraffeIntegerLiteralExpressionImpl)public explicit operation getValue()'(() ==> int)end GiraffeIntegerLiteralExpressionImplclass SimpleTypeDefinition is subclass of SimpleDefinitionpublic explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getType()'(() ==> SimpleType)end SimpleTypeDefinitionclass GiraffeUnaryExpressionImpl is subclass of GiraffeUnaryExpressionprivate instance variable iv_op'GiraffeUnaryOperatorprivate instance variable iv_exp'GiraffeExpressionpublic explicit operation GiraffeUnaryExpressionImpl(GiraffeUnaryOperator, GiraffeExpression)'(GiraffeUnaryOperator * GiraffeExpression ==> GiraffeUnaryExpressionImpl)public explicit operation getOp()'(() ==> GiraffeUnaryOperator)public explicit operation getExp()'(() ==> GiraffeExpression)end GiraffeUnaryExpressionImplclass SimpleIntegerLiteralExpression is subclass of SimpleLiteralExpressionpublic explicit operation getValue()'(() ==> int)end SimpleIntegerLiteralExpressionclass GiraffeDoubleLiteralExpression is subclass of GiraffeLiteralExpressionpublic explicit operation getValue()'(() ==> real)end GiraffeDoubleLiteralExpressionclass SimpleUnaryOperatorImpl is subclass of SimpleUnaryOperatorend SimpleUnaryOperatorImplclass SimpleBinaryExpression is subclass of SimpleExpressionpublic explicit operation getLhs()'(() ==> SimpleExpression)public explicit operation getOp()'(() ==> SimpleBinaryOperator)public explicit operation getRhs()'(() ==> SimpleExpression)end SimpleBinaryExpressionclass SimpleCaseAlternativeImpl is subclass of SimpleCaseAlternativeprivate instance variable iv_test'SimpleExpressionprivate instance variable iv_exp'SimpleExpressionpublic explicit operation SimpleCaseAlternativeImpl(SimpleExpression, SimpleExpression)'(SimpleExpression * SimpleExpression ==> SimpleCaseAlternativeImpl)public explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getExp()'(() ==> SimpleExpression)end SimpleCaseAlternativeImplclass GiraffeElseIfExpression is subclass of GiraffeNodepublic explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getThn()'(() ==> GiraffeExpression)end GiraffeElseIfExpressionclass SimpleIdentifierImpl is subclass of SimpleIdentifierprivate instance variable iv_name'seq of (char)public explicit operation SimpleIdentifierImpl(seq of (char))'(seq of (char) ==> SimpleIdentifierImpl)public explicit operation getName()'(() ==> seq of (char))end SimpleIdentifierImplclass GiraffeVariableDeclStatementImpl is subclass of GiraffeVariableDeclStatementprivate instance variable iv_type'GiraffeTypeprivate instance variable iv_name'GiraffeIdentifierprivate instance variable iv_value'GiraffeExpressionpublic explicit operation GiraffeVariableDeclStatementImpl(GiraffeType, GiraffeIdentifier, GiraffeExpression)'(GiraffeType * GiraffeIdentifier * GiraffeExpression ==> GiraffeVariableDeclStatementImpl)public explicit operation getType()'(() ==> GiraffeType)public explicit operation getName()'(() ==> GiraffeIdentifier)public explicit operation getValue()'(() ==> GiraffeExpression)end GiraffeVariableDeclStatementImplclass GiraffeCaseAlternativeImpl is subclass of GiraffeCaseAlternativeprivate instance variable iv_test'GiraffeExpressionprivate instance variable iv_exp'GiraffeExpressionpublic explicit operation GiraffeCaseAlternativeImpl(GiraffeExpression, GiraffeExpression)'(GiraffeExpression * GiraffeExpression ==> GiraffeCaseAlternativeImpl)public explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getExp()'(() ==> GiraffeExpression)end GiraffeCaseAlternativeImplclass GiraffeBinaryExpressionImpl is subclass of GiraffeBinaryExpressionprivate instance variable iv_lhs'GiraffeExpressionprivate instance variable iv_op'GiraffeBinaryOperatorprivate instance variable iv_rhs'GiraffeExpressionpublic explicit operation GiraffeBinaryExpressionImpl(GiraffeExpression, GiraffeBinaryOperator, GiraffeExpression)'(GiraffeExpression * GiraffeBinaryOperator * GiraffeExpression ==> GiraffeBinaryExpressionImpl)public explicit operation getLhs()'(() ==> GiraffeExpression)public explicit operation getOp()'(() ==> GiraffeBinaryOperator)public explicit operation getRhs()'(() ==> GiraffeExpression)end GiraffeBinaryExpressionImplclass GiraffeType is subclass of GiraffeNodeend GiraffeTypeclass GiraffeBinaryOperator is subclass of GiraffeNodestatic public value AND'GiraffeBinaryOperatorstatic public value DIV'GiraffeBinaryOperatorstatic public value EQUALS'GiraffeBinaryOperatorstatic public value GE'GiraffeBinaryOperatorstatic public value GT'GiraffeBinaryOperatorstatic public value LE'GiraffeBinaryOperatorstatic public value LT'GiraffeBinaryOperatorstatic public value MINUS'GiraffeBinaryOperatorstatic public value MOD'GiraffeBinaryOperatorstatic public value NE'GiraffeBinaryOperatorstatic public value OR'GiraffeBinaryOperatorstatic public value PLUS'GiraffeBinaryOperatorstatic public value TIMES'GiraffeBinaryOperatorpublic instance variable name'[seq of (char)]public explicit operation GiraffeBinaryOperator(seq of (char))'(seq of (char) ==> GiraffeBinaryOperator)end GiraffeBinaryOperatorclass GiraffeStatement is subclass of GiraffeNodeend GiraffeStatementclass GiraffeUnaryExpression is subclass of GiraffeExpressionpublic explicit operation getOp()'(() ==> GiraffeUnaryOperator)public explicit operation getExp()'(() ==> GiraffeExpression)end GiraffeUnaryExpressionclass SimpleUnaryOperator is subclass of SimpleNodestatic public value MINUS'SimpleUnaryOperatorstatic public value NOT'SimpleUnaryOperatorstatic public value PLUS'SimpleUnaryOperatorpublic instance variable name'[seq of (char)]public explicit operation SimpleUnaryOperator(seq of (char))'(seq of (char) ==> SimpleUnaryOperator)end SimpleUnaryOperatorclass GiraffeUnaryOperatorImpl is subclass of GiraffeUnaryOperatorend GiraffeUnaryOperatorImplclass SimpleApplyExpressionImpl is subclass of SimpleApplyExpressionprivate instance variable iv_func'SimpleExpressionprivate instance variable iv_args'seq of (SimpleExpression)public explicit operation SimpleApplyExpressionImpl(SimpleExpression, seq of (SimpleExpression))'(SimpleExpression * seq of (SimpleExpression) ==> SimpleApplyExpressionImpl)public explicit operation getFunc()'(() ==> SimpleExpression)public explicit operation getArgs()'(() ==> seq of (SimpleExpression))end SimpleApplyExpressionImplclass Compilerstatic private value util'codegen_Utilprivate instance variable typeDefs'seq of (SimpleTypeDefinition)private instance variable context'map (seq of (char)) to (seq of (char))private invariant inv_Compiler'boolprivate instance variable varDecls'seq of (GiraffeVariableDeclStatement)private instance variable uid'nat1private explicit operation getUniqeName()'(() ==> seq of (char))private explicit operation getUniqeSimpleName()'(() ==> seq of (char))public explicit operation Compile(seq of (char), SimpleSpecification)'(seq of (char) * SimpleSpecification ==> GiraffeSpecification)public explicit operation Compile(SimpleFunctionDefinition)'(SimpleFunctionDefinition ==> GiraffeMethodDefinition)public explicit operation Compile(SimpleParameter)'(SimpleParameter ==> GiraffeParameter)public explicit operation Compile(SimpleType)'(SimpleType ==> [GiraffeType])public explicit operation Compile(SimpleExpression)'(SimpleExpression ==> [GiraffeExpression])public explicit operation CompileCases(SimpleCasesExpression)'(SimpleCasesExpression ==> GiraffeExpression)public explicit operation CompileLet(SimpleLetExpression)'(SimpleLetExpression ==> GiraffeExpression)public explicit operation Compile(SimpleBinaryOperator, SimpleExpression, SimpleExpression)'(SimpleBinaryOperator * SimpleExpression * SimpleExpression ==> [GiraffeBinaryExpression])public explicit operation GetType(SimpleExpression)'(SimpleExpression ==> SimpleType)public explicit operation GetBasicType(SimpleType)'(SimpleType ==> SimpleBasicType)public explicit function CompileIf(SimpleIfExpression)'(SimpleIfExpression -> GiraffeIfExpression)public explicit function deflatten(seq of (SimpleElseIfExpression), SimpleExpression)'(seq of (SimpleElseIfExpression) * SimpleExpression -> GiraffeExpression)end Compilerclass SimpleTypeDefinitionImpl is subclass of SimpleTypeDefinitionprivate instance variable iv_name'SimpleIdentifierprivate instance variable iv_type'SimpleTypepublic explicit operation SimpleTypeDefinitionImpl(SimpleIdentifier, SimpleType)'(SimpleIdentifier * SimpleType ==> SimpleTypeDefinitionImpl)public explicit operation getName()'(() ==> SimpleIdentifier)public explicit operation getType()'(() ==> SimpleType)end SimpleTypeDefinitionImplclass SimpleCasesExpressionImpl is subclass of SimpleCasesExpressionprivate instance variable iv_test'SimpleExpressionprivate instance variable iv_alts'seq of (SimpleCaseAlternative)private instance variable iv_deflt'[SimpleExpression]public explicit operation SimpleCasesExpressionImpl(SimpleExpression, seq of (SimpleCaseAlternative), [SimpleExpression])'(SimpleExpression * seq of (SimpleCaseAlternative) * [SimpleExpression] ==> SimpleCasesExpressionImpl)public explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getAlts()'(() ==> seq of (SimpleCaseAlternative))public explicit operation hasDeflt()'(() ==> bool)public explicit operation getDeflt()'(() ==> SimpleExpression)end SimpleCasesExpressionImplclass GiraffeParameterImpl is subclass of GiraffeParameterprivate instance variable iv_type'GiraffeTypeprivate instance variable iv_name'GiraffeIdentifierpublic explicit operation GiraffeParameterImpl(GiraffeType, GiraffeIdentifier)'(GiraffeType * GiraffeIdentifier ==> GiraffeParameterImpl)public explicit operation getType()'(() ==> GiraffeType)public explicit operation getName()'(() ==> GiraffeIdentifier)end GiraffeParameterImplclass GiraffeUnaryOperator is subclass of GiraffeNodestatic public value MINUS'GiraffeUnaryOperatorstatic public value NOT'GiraffeUnaryOperatorstatic public value PLUS'GiraffeUnaryOperatorpublic instance variable name'[seq of (char)]public explicit operation GiraffeUnaryOperator(seq of (char))'(seq of (char) ==> GiraffeUnaryOperator)end GiraffeUnaryOperatorclass GiraffeSpecification is subclass of GiraffeNodepublic explicit operation getClazz()'(() ==> GiraffeClassDefinition)end GiraffeSpecificationclass SimpleIfExpression is subclass of SimpleExpressionpublic explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getThn()'(() ==> SimpleExpression)public explicit operation getElif()'(() ==> seq of (SimpleElseIfExpression))public explicit operation getEse()'(() ==> SimpleExpression)end SimpleIfExpressionclass SimpleUnaryExpressionImpl is subclass of SimpleUnaryExpressionprivate instance variable iv_op'SimpleUnaryOperatorprivate instance variable iv_exp'SimpleExpressionpublic explicit operation SimpleUnaryExpressionImpl(SimpleUnaryOperator, SimpleExpression)'(SimpleUnaryOperator * SimpleExpression ==> SimpleUnaryExpressionImpl)public explicit operation getOp()'(() ==> SimpleUnaryOperator)public explicit operation getExp()'(() ==> SimpleExpression)end SimpleUnaryExpressionImplclass SimpleElseIfExpressionImpl is subclass of SimpleElseIfExpressionprivate instance variable iv_test'SimpleExpressionprivate instance variable iv_thn'SimpleExpressionpublic explicit operation SimpleElseIfExpressionImpl(SimpleExpression, SimpleExpression)'(SimpleExpression * SimpleExpression ==> SimpleElseIfExpressionImpl)public explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getThn()'(() ==> SimpleExpression)end SimpleElseIfExpressionImplclass GiraffeCasesExpression is subclass of GiraffeExpressionpublic explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getAlts()'(() ==> seq of (GiraffeCaseAlternative))public explicit operation hasDeflt()'(() ==> bool)public explicit operation getDeflt()'(() ==> GiraffeExpression)end GiraffeCasesExpressionclass GiraffeMethodDefinitionImpl is subclass of GiraffeMethodDefinitionprivate instance variable iv_name'GiraffeIdentifierprivate instance variable iv_parameters'seq of (GiraffeParameter)private instance variable iv_type'GiraffeTypeprivate instance variable iv_body'seq of (GiraffeStatement)public explicit operation GiraffeMethodDefinitionImpl(GiraffeIdentifier, seq of (GiraffeParameter), GiraffeType, seq of (GiraffeStatement))'(GiraffeIdentifier * seq of (GiraffeParameter) * GiraffeType * seq of (GiraffeStatement) ==> GiraffeMethodDefinitionImpl)public explicit operation getName()'(() ==> GiraffeIdentifier)public explicit operation getParameters()'(() ==> seq of (GiraffeParameter))public explicit operation getType()'(() ==> GiraffeType)public explicit operation getBody()'(() ==> seq of (GiraffeStatement))end GiraffeMethodDefinitionImplclass GiraffeStatementImpl is subclass of GiraffeNodeImplend GiraffeStatementImplclass GiraffeNodeImplend GiraffeNodeImplclass SimpleType is subclass of SimpleNodeend SimpleTypeclass SimpleIfExpressionImpl is subclass of SimpleIfExpressionprivate instance variable iv_test'SimpleExpressionprivate instance variable iv_thn'SimpleExpressionprivate instance variable iv_elif'seq of (SimpleElseIfExpression)private instance variable iv_ese'SimpleExpressionpublic explicit operation SimpleIfExpressionImpl(SimpleExpression, SimpleExpression, seq of (SimpleElseIfExpression), SimpleExpression)'(SimpleExpression * SimpleExpression * seq of (SimpleElseIfExpression) * SimpleExpression ==> SimpleIfExpressionImpl)public explicit operation getTest()'(() ==> SimpleExpression)public explicit operation getThn()'(() ==> SimpleExpression)public explicit operation getElif()'(() ==> seq of (SimpleElseIfExpression))public explicit operation getEse()'(() ==> SimpleExpression)end SimpleIfExpressionImplclass GiraffeIfExpressionImpl is subclass of GiraffeIfExpressionprivate instance variable iv_test'GiraffeExpressionprivate instance variable iv_thn'GiraffeExpressionprivate instance variable iv_els'GiraffeExpressionpublic explicit operation GiraffeIfExpressionImpl(GiraffeExpression, GiraffeExpression, GiraffeExpression)'(GiraffeExpression * GiraffeExpression * GiraffeExpression ==> GiraffeIfExpressionImpl)public explicit operation getTest()'(() ==> GiraffeExpression)public explicit operation getThn()'(() ==> GiraffeExpression)public explicit operation getEls()'(() ==> GiraffeExpression)end GiraffeIfExpressionImplclass SimpleUnaryExpression is subclass of SimpleExpressionpublic explicit operation getOp()'(() ==> SimpleUnaryOperator)public explicit operation getExp()'(() ==> SimpleExpression)end SimpleUnaryExpressionclass SimpleBinaryExpressionImpl is subclass of SimpleBinaryExpressionprivate instance variable iv_lhs'SimpleExpressionprivate instance variable iv_op'SimpleBinaryOperatorprivate instance variable iv_rhs'SimpleExpressionpublic explicit operation SimpleBinaryExpressionImpl(SimpleExpression, SimpleBinaryOperator, SimpleExpression)'(SimpleExpression * SimpleBinaryOperator * SimpleExpression ==> SimpleBinaryExpressionImpl)public explicit operation getLhs()'(() ==> SimpleExpression)public explicit operation getOp()'(() ==> SimpleBinaryOperator)public explicit operation getRhs()'(() ==> SimpleExpression)end SimpleBinaryExpressionImplclass SimpleBinaryOperatorImpl is subclass of SimpleBinaryOperatorend SimpleBinaryOperatorImplclass returnConstIntstatic public value returnConstInt'SimpleSpecificationImplend returnConstIntclass SimpleExpression is subclass of SimpleNodeend SimpleExpressionclass SimpleRealLiteralExpression is subclass of SimpleLiteralExpressionpublic explicit operation getValue()'(() ==> real)end SimpleRealLiteralExpressionclass SimpleNodeend SimpleNodeclass GiraffeBinaryExpression is subclass of GiraffeExpressionpublic explicit operation getLhs()'(() ==> GiraffeExpression)public explicit operation getOp()'(() ==> GiraffeBinaryOperator)public explicit operation getRhs()'(() ==> GiraffeExpression)end GiraffeBinaryExpression

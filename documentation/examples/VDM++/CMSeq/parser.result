RESULT:result:-1:-1,-1:class FlareDispenser is subclass of GLOBALstatic private value responseDB'map ((unresolved FlareDispenser`MissileType)) to ((unresolved FlareDispenser`Plan))static private value missilePriority'map ((unresolved FlareDispenser`MissileType)) to (nat)static public type Plan'Planstatic public type PlanStep'PlanSteppublic instance variable curplan'(unresolved FlareDispenser`Plan)private instance variable curprio'natprivate instance variable busy'boolprivate instance variable aperture'(unresolved FlareDispenser`Angle)private instance variable eventid'[(unresolved FlareDispenser`EventId)]public explicit operation FlareDispenser'(nat ==> (unresolved FlareDispenser`FlareDispenser))public explicit operation Step'(() ==> ())public explicit operation GetAngle'(() ==> nat)public explicit operation addThreat'((unresolved FlareDispenser`EventId) * (unresolved FlareDispenser`MissileType) * (unresolved FlareDispenser`Time) ==> ())private explicit operation releaseFlare'((unresolved FlareDispenser`EventId) * (unresolved FlareDispenser`FlareType) * (unresolved FlareDispenser`Time) * (unresolved FlareDispenser`Time) ==> ())public explicit operation isFinished'(() ==> bool)end FlareDispenserclass Timerprivate instance variable currentTime'natstatic private value stepLength'natpublic explicit operation StepTime'(() ==> ())public explicit operation GetTime'(() ==> nat)end Timerclass CMstatic public instance variable detector'(unresolved CM`MissileDetector)static public instance variable sensor0'(unresolved CM`Sensor)static public instance variable sensor1'(unresolved CM`Sensor)static public instance variable sensor2'(unresolved CM`Sensor)static public instance variable sensor3'(unresolved CM`Sensor)static public instance variable controller0'(unresolved CM`FlareController)static public instance variable controller1'(unresolved CM`FlareController)static public instance variable controller2'(unresolved CM`FlareController)static public instance variable dispenser0'(unresolved CM`FlareDispenser)static public instance variable dispenser1'(unresolved CM`FlareDispenser)static public instance variable dispenser2'(unresolved CM`FlareDispenser)static public instance variable dispenser3'(unresolved CM`FlareDispenser)static public instance variable dispenser4'(unresolved CM`FlareDispenser)static public instance variable dispenser5'(unresolved CM`FlareDispenser)static public instance variable dispenser6'(unresolved CM`FlareDispenser)static public instance variable dispenser7'(unresolved CM`FlareDispenser)static public instance variable dispenser8'(unresolved CM`FlareDispenser)static public instance variable dispenser9'(unresolved CM`FlareDispenser)static public instance variable dispenser10'(unresolved CM`FlareDispenser)static public instance variable dispenser11'(unresolved CM`FlareDispenser)end CMclass FlareController is subclass of GLOBALprivate instance variable aperture'(unresolved FlareController`Angle)private instance variable ranges'map (nat) to ((((unresolved FlareController`Angle) * (unresolved FlareController`Angle))))private instance variable dispensers'map (nat) to ((unresolved FlareController`FlareDispenser))private invariant inv_FlareController'boolprivate instance variable threats'seq of ((((unresolved FlareController`EventId) * (unresolved FlareController`MissileType) * (unresolved FlareController`Angle) * (unresolved FlareController`Time))))private instance variable busy'boolpublic explicit operation FlareController'((unresolved FlareController`Angle) ==> (unresolved FlareController`FlareController))public explicit operation addDispenser'((unresolved FlareController`FlareDispenser) ==> ())public explicit operation Step'(() ==> ())public explicit operation getAperture'(() ==> ((unresolved GLOBAL`Angle) * (unresolved GLOBAL`Angle)))public explicit operation addThreat'((unresolved FlareController`EventId) * (unresolved FlareController`MissileType) * (unresolved FlareController`Angle) * (unresolved FlareController`Time) ==> ())private explicit operation getThreat'(() ==> ((unresolved FlareController`EventId) * (unresolved FlareController`MissileType) * (unresolved FlareController`Angle) * (unresolved FlareController`Time)))public explicit operation isFinished'(() ==> bool)end FlareControllerclass GLOBALstatic public value SENSOR_APERTURE'?static public value FLARE_APERTURE'?static public value DISPENSER_APERTURE'?static public type MissileType'MissileTypestatic public type FlareType'FlareTypestatic public type Angle'Anglestatic public type EventId'EventIdstatic public type Time'Timepublic explicit operation canObserve'((unresolved GLOBAL`Angle) * (unresolved GLOBAL`Angle) * (unresolved GLOBAL`Angle) ==> bool)public explicit operation getAperture'(() ==> ((unresolved GLOBAL`Angle) * (unresolved GLOBAL`Angle)))end GLOBALclass Worldstatic public instance variable env'[(unresolved World`Environment)]static public instance variable timerRef'(unresolved World`Timer)public explicit operation World'(() ==> (unresolved World`World))public explicit operation Run'(() ==> ())end Worldclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass MissileDetector is subclass of GLOBALprivate instance variable ranges'map (nat) to ((((unresolved MissileDetector`Angle) * (unresolved MissileDetector`Angle))))private instance variable controllers'map (nat) to ((unresolved MissileDetector`FlareController))private invariant inv_MissileDetector'boolprivate instance variable threats'seq of ((((unresolved MissileDetector`EventId) * (unresolved MissileDetector`MissileType) * (unresolved MissileDetector`Angle) * (unresolved MissileDetector`Time))))private instance variable busy'boolpublic explicit operation addController'((unresolved MissileDetector`FlareController) ==> ())public explicit operation Step'(() ==> ())public explicit operation addThreat'((unresolved MissileDetector`EventId) * (unresolved MissileDetector`MissileType) * (unresolved MissileDetector`Angle) * (unresolved MissileDetector`Time) ==> ())private explicit operation getThreat'(() ==> ((unresolved MissileDetector`EventId) * (unresolved MissileDetector`MissileType) * (unresolved MissileDetector`Angle) * (unresolved MissileDetector`Time)))public explicit operation isFinished'(() ==> bool)end MissileDetectorclass Environment is subclass of GLOBALstatic public type inline'inlinestatic public type outline'outlineprivate instance variable io'(unresolved Environment`IO)private instance variable inlines'seq of ((unresolved Environment`inline))private instance variable outlines'seq of ((unresolved Environment`outline))private instance variable ranges'map (nat) to ((((unresolved Environment`Angle) * (unresolved Environment`Angle))))private instance variable sensors'map (nat) to ((unresolved Environment`Sensor))private invariant inv_Environment'boolprivate instance variable evid'[(unresolved Environment`EventId)]private instance variable busy'boolpublic explicit operation Environment'(seq of (char) ==> (unresolved Environment`Environment))public explicit operation addSensor'((unresolved Environment`Sensor) ==> ())public explicit operation Run'(() ==> ())private explicit operation createSignal'(() ==> [(unresolved Environment`EventId)])public explicit operation handleEvent'((unresolved Environment`EventId) * (unresolved Environment`FlareType) * (unresolved Environment`Angle) * (unresolved Environment`Time) * (unresolved Environment`Time) ==> ())public explicit operation showResult'(() ==> ())public explicit operation isFinished'(() ==> bool)end Environmentclass Sensor is subclass of GLOBALprivate instance variable detector'(unresolved Sensor`MissileDetector)private instance variable aperture'(unresolved Sensor`Angle)public explicit operation Sensor'((unresolved Sensor`MissileDetector) * (unresolved Sensor`Angle) ==> (unresolved Sensor`Sensor))public explicit operation getAperture'(() ==> ((unresolved GLOBAL`Angle) * (unresolved GLOBAL`Angle)))public explicit operation trip'((unresolved Sensor`EventId) * (unresolved Sensor`MissileType) * (unresolved Sensor`Angle) ==> ())end Sensor

WARNING:TestHostController.vdmpp:5001:23,11:Instance variable 'tempSensor' is not initialized.
WARNING:Sensor.vdmpp:5001:21,16:Instance variable 'Type' is not initialized.
WARNING:Actuator.vdmpp:5001:22,16:Instance variable 'Corr' is not initialized.
WARNING:Actuator.vdmpp:5001:21,16:Instance variable 'Type' is not initialized.
WARNING:TestHostController.vdmpp:5001:25,4:Instance variable 'win' is not initialized.
WARNING:TestHostController.vdmpp:5001:26,8:Instance variable 'therm' is not initialized.
WARNING:TestActuator.vdmpp:5001:20,4:Instance variable 'win' is not initialized.
WARNING:Sensor.vdmpp:5001:23,16:Instance variable 'Env' is not initialized.
WARNING:Sensor.vdmpp:5001:20,16:Instance variable 'ID' is not initialized.
WARNING:Actuator.vdmpp:5001:20,16:Instance variable 'ID' is not initialized.
WARNING:TestHostController.vdmpp:5001:24,12:Instance variable 'humidSensor' is not initialized.
WARNING:TestSensor.vdmpp:5001:20,11:Instance variable 'tempSensor' is not initialized.
WARNING:TestSensor.vdmpp:5001:21,12:Instance variable 'humidSensor' is not initialized.
WARNING:TestActuator.vdmpp:5001:21,8:Instance variable 'therm' is not initialized.
WARNING:Actuator.vdmpp:5001:23,16:Instance variable 'Env' is not initialized.
WARNING:TestSurroundings.vdmpp:5001:20,4:Instance variable 'env' is not initialized.
WARNING:Sensor.vdmpp:5001:22,16:Instance variable 'Value' is not initialized.
WARNING:TestHostController.vdmpp:5001:22,8:Instance variable 'host' is not initialized.
WARNING:TestHostController.vdmpp:5001:21,8:Instance variable 'world' is not initialized.
RESULT:result:-1:-1,-1:class HumidSensor is subclass of Sensorpublic explicit operation HumidSensor(nat, nodeType, nat)'(nat * nodeType * nat ==> HumidSensor)public explicit operation Step()'(() ==> ())end HumidSensorclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass Testpublic explicit operation Run(TestResult)'(TestResult ==> ())end Testclass Worldstatic public instance variable env'Environmentpublic explicit operation Run()'(() ==> ())end Worldclass TestSurroundings is subclass of TestCaseprivate instance variable env'Environmentpublic explicit operation TestSurroundings(seq of (char))'(seq of (char) ==> TestSurroundings)protected explicit operation SetUp()'(() ==> ())protected explicit operation Test()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestSurroundingsclass Window is subclass of Actuatorpublic explicit operation Window(nat, nodeType)'(nat * nodeType ==> Window)public explicit operation Step()'(() ==> ())public explicit operation SetCorrection(correction)'(correction ==> ())public explicit operation GetCorrection()'(() ==> correction)end Windowclass Actuatorprotected instance variable ID'natprotected instance variable Type'nodeTypeprotected instance variable Corr'correctionprotected instance variable Env'Environmentpublic explicit operation GetID()'(() ==> nat)public explicit operation GetType()'(() ==> nodeType)public explicit operation Step()'(() ==> ())end Actuatorclass TestCase is subclass of Testprotected instance variable name'seq of (char)public explicit operation TestCase(seq of (char))'(seq of (char) ==> TestCase)public explicit operation GetName()'(() ==> seq of (char))protected explicit operation AssertTrue(bool)'(bool ==> ())protected explicit operation AssertFalse(bool)'(bool ==> ())public explicit operation Run(TestResult)'(TestResult ==> ())protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestCaseclass HostControllerprivate instance variable finished'boolprivate instance variable print'boolprivate instance variable TargetTemp'natprivate instance variable Temp'natprivate instance variable TargetHumid'natprivate instance variable Humid'natprivate instance variable NodeList'map (nat) to (nodeType)private instance variable Algo'algTypestatic public type algType'algTypepublic explicit operation HostController(nat, nat)'(nat * nat ==> HostController)public explicit operation UpdateValues()'(() ==> ())public explicit operation GetAlgo()'(() ==> algType)public explicit operation GetTemp()'(() ==> nat)public explicit operation GetHumid()'(() ==> nat)public explicit operation Algorithm()'(() ==> ())private explicit operation THTWAlgo()'(() ==> ())private explicit operation TTWAlgo()'(() ==> ())private explicit operation TTAlgo()'(() ==> ())private explicit operation TWAlgo()'(() ==> ())private explicit operation HWAlgo()'(() ==> ())private explicit operation UpdateAlgorithm()'(() ==> ())private explicit operation printStr(seq of (char))'(seq of (char) ==> ())public explicit operation AddNode(nat, nodeType)'(nat * nodeType ==> ())public explicit operation RemoveNode(nat, nodeType)'(nat * nodeType ==> ())private explicit operation Step()'(() ==> ())end HostControllerclass TestHostController is subclass of TestCaseprivate instance variable world'Worldprivate instance variable host'HostControllerprivate instance variable tempSensor'TemperatureSensorprivate instance variable humidSensor'HumidSensorprivate instance variable win'Windowprivate instance variable therm'Thermostatpublic explicit operation TestHostController(seq of (char))'(seq of (char) ==> TestHostController)protected explicit operation SetUp()'(() ==> ())protected explicit operation Test()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestHostControllerclass TemperatureSensor is subclass of Sensorpublic explicit operation TemperatureSensor(nat, nodeType, nat)'(nat * nodeType * nat ==> TemperatureSensor)public explicit operation Step()'(() ==> ())end TemperatureSensorclass HAstatic public instance variable Host'HostControllerstatic public instance variable TempNode'TemperatureSensorstatic public instance variable HumidNode'HumidSensorstatic public instance variable ThermNode'Thermostatstatic public instance variable WinNode'Windowpublic explicit operation HA()'(() ==> HA)end HAclass Environmentprivate instance variable ha'HAprivate instance variable envTemp'natprivate instance variable envHumid'natpublic explicit operation Environment()'(() ==> Environment)public explicit operation ReadTemp()'(() ==> nat)public explicit operation IncTemp()'(() ==> ())public explicit operation DecTemp()'(() ==> ())public explicit operation SetTemp(nat)'(nat ==> ())public explicit operation ReadHumid()'(() ==> nat)public explicit operation IncHumid()'(() ==> ())public explicit operation DecHumid()'(() ==> ())public explicit operation SetHumid(nat)'(nat ==> ())end Environmentclass TestSensor is subclass of TestCaseprivate instance variable tempSensor'TemperatureSensorprivate instance variable humidSensor'HumidSensorpublic explicit operation TestSensor(seq of (char))'(seq of (char) ==> TestSensor)protected explicit operation SetUp()'(() ==> ())protected explicit operation Test()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestSensorclass Thermostat is subclass of Actuatorpublic explicit operation Thermostat(nat, nodeType)'(nat * nodeType ==> Thermostat)public explicit operation Step()'(() ==> ())public explicit operation SetCorrection(correction)'(correction ==> ())public explicit operation GetCorrection()'(() ==> correction)end Thermostatclass Sensorprotected instance variable ID'natprotected instance variable Type'nodeTypeprotected instance variable Value'natprotected instance variable Env'Environmentpublic explicit operation GetID()'(() ==> nat)public explicit operation GetType()'(() ==> nodeType)public explicit operation ReadValue()'(() ==> nat)public explicit operation Step()'(() ==> ())end Sensorclass TestCompletepublic explicit operation Execute()'(() ==> ())end TestCompleteclass TestResultprivate instance variable failures'seq of (TestCase)public explicit operation AddFailure(TestCase)'(TestCase ==> ())public explicit operation Print(seq of (char))'(seq of (char) ==> ())public explicit operation Show()'(() ==> ())end TestResultclass NetworkTypesstatic public type nodeType'nodeTypestatic public type correction'correctionend NetworkTypesclass Surroundingsprivate instance variable envTemp'natprivate instance variable envHumid'natpublic explicit operation Surroundings()'(() ==> Surroundings)public explicit operation ReadTemp()'(() ==> nat)public explicit operation IncTemp()'(() ==> ())public explicit operation DecTemp()'(() ==> ())public explicit operation SetTemp(nat)'(nat ==> ())public explicit operation ReadHumid()'(() ==> nat)public explicit operation IncHumid()'(() ==> ())public explicit operation DecHumid()'(() ==> ())public explicit operation SetHumid(nat)'(nat ==> ())end Surroundingsclass TestSuite is subclass of Testprivate instance variable tests'seq of (Test)public explicit operation Run()'(() ==> ())public explicit operation Run(TestResult)'(TestResult ==> ())public explicit operation AddTest(Test)'(Test ==> ())end TestSuiteclass TestActuator is subclass of TestCaseprivate instance variable win'Windowprivate instance variable therm'Thermostatpublic explicit operation TestActuator(seq of (char))'(seq of (char) ==> TestActuator)protected explicit operation SetUp()'(() ==> ())protected explicit operation Test()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestActuator

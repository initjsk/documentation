RESULT:result:-1:-1,-1:class Expertprivate instance variable quali'set of ((unresolved Expert`Qualification))static public type Qualification'Qualificationpublic explicit operation Expert'(set of ((unresolved Expert`Qualification)) ==> (unresolved Expert`Expert))public explicit operation GetQuali'(() ==> set of ((unresolved Expert`Qualification)))end Expertclass Test1private instance variable a1'(unresolved Test1`Alarm)private instance variable a2'(unresolved Test1`Alarm)private instance variable ex1'(unresolved Test1`Expert)private instance variable ex2'(unresolved Test1`Expert)private instance variable ex3'(unresolved Test1`Expert)private instance variable ex4'(unresolved Test1`Expert)private instance variable plant'(unresolved Test1`Plant)private instance variable exs'set of ((unresolved Test1`Expert))static private value p1'(unresolved Plant`Period)static private value p2'(unresolved Plant`Period)static private value p3'(unresolved Plant`Period)static private value p4'(unresolved Plant`Period)static private value ps'set of ((unresolved Plant`Period))public explicit operation Run'(() ==> (set of ((unresolved Plant`Period)) * (unresolved Test1`Expert)))public trace '(() ==> ())end Test1class Plantprivate instance variable alarms'set of ((unresolved Plant`Alarm))private instance variable schedule'map ((unresolved Plant`Period)) to (set of ((unresolved Plant`Expert)))private invariant inv_Plant'boolprivate explicit function PlantInv'(set of ((unresolved Plant`Alarm)) * map ((unresolved Plant`Period)) to (set of ((unresolved Plant`Expert))) -> bool)static public type Period'Periodpublic explicit operation ExpertToPage'((unresolved Plant`Alarm) * (unresolved Plant`Period) ==> (unresolved Plant`Expert))public explicit operation NumberOfExperts'((unresolved Plant`Period) ==> nat)public explicit operation ExpertIsOnDuty'((unresolved Plant`Expert) ==> set of ((unresolved Plant`Period)))public explicit operation Plant'(set of ((unresolved Plant`Alarm)) * map ((unresolved Plant`Period)) to (set of ((unresolved Plant`Expert))) ==> (unresolved Plant`Plant))public explicit operation AddExpertToSchedule'((unresolved Plant`Period) * (unresolved Plant`Expert) ==> ())public explicit operation RemoveExpertFromSchedule'((unresolved Plant`Period) * (unresolved Plant`Expert) ==> ())end Plantclass Alarmstatic public type String'Stringprivate instance variable descr'(unresolved Alarm`String)private instance variable reqQuali'(unresolved Expert`Qualification)public explicit operation Alarm'((unresolved Expert`Qualification) * (unresolved Alarm`String) ==> (unresolved Alarm`Alarm))public explicit operation GetReqQuali'(() ==> (unresolved Expert`Qualification))end Alarm

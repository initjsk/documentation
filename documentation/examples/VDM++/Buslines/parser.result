RESULT:result:-1:-1,-1:class VDMUtilstatic public explicit function set2seq'(set of (@T) +> seq of (@T))static public explicit function get_file_pos'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])static public explicit function val2seq_of_char'(@T +> seq of (char))static public explicit function seq_of_char2val'(seq1 of (char) -> (bool * [@p]))static public explicit function classname'(@T -> [seq1 of (char)])end VDMUtilclass gui_Graphicspublic explicit operation init'(() ==> ())public explicit operation busInRouteTo'(nat * seq of (char) * seq of (char) * nat ==> ())public explicit operation move'(() ==> ())public explicit operation sleep'(() ==> ())public explicit operation passengerAtCentral'(nat * seq of (char) ==> ())public explicit operation passengerAnnoyed'(nat ==> ())public explicit operation passengerGotOnBus'(nat ==> ())public explicit operation inflowChanged'(nat ==> ())public explicit operation busAdded'(nat ==> ())public explicit operation busStopping'(nat ==> ())public explicit operation busPassengerCountChanged'(nat * nat ==> ())end gui_Graphicsclass Configstatic public value BusCapacity'natstatic public value DefaultRoadSpeedLimit'natstatic public value PassengerAnnoyanceLimit'natstatic public value MaxInflow'natend Configclass Busprivate instance variable seats'set of ((unresolved Bus`Passenger))private invariant inv_Bus'boolprivate instance variable line'natprivate instance variable route'seq of ((unresolved Bus`Road))private instance variable curRoute'seq of ((unresolved Bus`Road))private instance variable nextWP'(unresolved Bus`Waypoint)private instance variable currentRoad'(unresolved Bus`Road)private instance variable wps'seq of ((unresolved Bus`Waypoint))public explicit operation Bus'(nat * seq of ((unresolved Bus`Road)) * seq of ((unresolved Bus`Waypoint)) ==> (unresolved Bus`Bus))public explicit operation GetOn'(set of ((unresolved Bus`Passenger)) ==> ())public explicit operation GotOff'(set of ((unresolved Bus`Passenger)) ==> ())public explicit operation GetWaypoints'(() ==> seq of ((unresolved Bus`Waypoint)))public explicit operation GetStops'(() ==> seq of ((unresolved Bus`Busstop)))private explicit operation NextWaypoint'(() ==> (unresolved Bus`Waypoint))public explicit operation WaitForThreadStart'(() ==> ())private explicit operation ThreadStarted'(() ==> ())private permission predicate 'boolprivate permission predicate 'boolprotected thread null'?private explicit operation SelectSubset'(set of ((unresolved Bus`Passenger)) * nat ==> set of ((unresolved Bus`Passenger)))end Busclass Typesstatic public type Time'Timestatic public type Direction'Directionstatic public type Event'Eventstatic public type BusRoute'BusRoutestatic public type Inflow'Inflowstatic public type Simulate'Simulatestatic public type WasteTime'WasteTimestatic public explicit function DirectionToGraphics'((unresolved Types`Direction) -> nat)end Typesclass WaitNotifyprivate instance variable waitset'set of (nat)public explicit operation Wait'(() ==> ())public explicit operation Notify'(() ==> ())public explicit operation NotifyThread'(nat ==> ())public explicit operation NotifyAll'(() ==> ())private explicit operation AddToWaitSet'(nat ==> ())private explicit operation Awake'(() ==> ())private permission predicate 'boolprivate mutex predicate '?end WaitNotifyclass Cityprivate instance variable wayspoints'set of ((unresolved City`Waypoint))private instance variable stops'inmap of ((unresolved Waypoint`BusStops)) to ((unresolved City`Busstop))private instance variable roads'inmap of ((unresolved Road`RoadNumber)) to ((unresolved City`Road))private instance variable buses'inmap of (nat) to ((unresolved City`Bus))private instance variable central'(unresolved City`Busstop)private instance variable inflow'natpublic explicit operation City'(() ==> (unresolved City`City))public explicit operation addBusstop'((unresolved Waypoint`BusStops) ==> (unresolved City`Busstop))public explicit operation addWaypoint'((unresolved Waypoint`WaypointsEnum) ==> (unresolved City`Waypoint))public explicit operation addRoad'((unresolved City`Waypoint) * (unresolved City`Waypoint) * (unresolved Road`RoadNumber) * nat ==> ())public explicit operation addRoad'((unresolved City`Waypoint) * (unresolved City`Waypoint) * (unresolved Road`RoadNumber) * nat * nat ==> ())public explicit operation addBus'(nat * seq of ((unresolved Road`RoadNumber)) ==> (unresolved City`Bus))private explicit operation findRoadsFromRoadNumber'(seq of ((unresolved Road`RoadNumber)) ==> seq of ((unresolved City`Road)))public explicit operation getCentralStation'(() ==> (unresolved City`Busstop))public explicit operation setInflow'(nat ==> ())public explicit operation getInflow'(() ==> nat)public explicit operation getBuses'(() ==> set of ((unresolved City`Bus)))public explicit operation WaitForThreadStart'(() ==> ())private explicit operation ThreadStarted'(() ==> ())private permission predicate 'boolprotected thread null'?end Cityclass Waypointstatic public type BusStops'BusStopsstatic public type WaypointsEnum'WaypointsEnumprotected instance variable id'(unresolved Waypoint`WaypointsEnum)protected instance variable isStop'boolpublic explicit operation Waypoint'((unresolved Waypoint`WaypointsEnum) ==> (unresolved Waypoint`Waypoint))public explicit operation GetId'(() ==> (unresolved Waypoint`WaypointsEnum))public explicit operation IsStop'(() ==> bool)end Waypointclass MATHstatic public explicit function sin'(real +> real)static public explicit function cos'(real +> real)static public explicit function tan'(real -> real)static public explicit function cot'(real -> real)static public explicit function asin'(real -> real)static public explicit function acos'(real -> real)static public explicit function atan'(real +> real)static public explicit function acot'(real +> real)static public explicit function sqrt'(real -> real)static public explicit function pi_f'(() +> real)static public explicit operation srand'(int ==> ())static public explicit operation rand'(int ==> int)static public explicit operation srand2'(int ==> int)static public explicit function exp'(real +> real)static public explicit function ln'(real -> real)static public explicit function log'(real -> real)static public explicit function fac'(nat -> nat1)static public value pi'?end MATHclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass Passengerstatic private instance variable nextPassengerId'natprivate instance variable passengerId'natprivate instance variable goal'(unresolved Passenger`Waypoint)private invariant inv_Passenger'boolprivate instance variable annoyanceLimit'natprivate instance variable pickedUp'boolprivate instance variable alreadyAnnoyed'boolpublic explicit operation Passenger'((unresolved Passenger`Busstop) ==> (unresolved Passenger`Passenger))public explicit operation GetDestination'(() ==> (unresolved Passenger`Waypoint))public explicit operation GotOnBus'(() ==> ())public explicit operation IsAnnoyedOfWaiting'(() ==> bool)public explicit operation AnnoyedOfWaiting'(() ==> ())public explicit operation Id'(() ==> nat)private explicit operation GetNextId'(() ==> nat)private mutex predicate '?end Passengerclass ClockTickprotected thread null'?end ClockTickclass TimeStampstatic public value stepLength'natprivate instance variable currentTime'natprivate instance variable wakeUpMap'map (nat) to (nat)public explicit operation WaitRelative'(nat ==> ())public explicit operation WaitAbsolute'(nat ==> ())private explicit operation AddToWakeUpMap'(nat * nat ==> ())public explicit operation NotifyThread'(nat ==> ())public explicit operation NotifyAll'(() ==> ())public explicit operation NotifyAndIncTime'(() ==> ())public explicit operation GetTime'(() ==> nat)public explicit operation Awake'(() ==> ())private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?end TimeStampclass Environmentpublic instance variable city'(unresolved Environment`City)private instance variable io'(unresolved Environment`IO)private instance variable inlines'seq of ((unresolved Environment`inline))private instance variable outlines'seq of (char)private instance variable busy'boolprivate instance variable simulating'boolprivate instance variable passengersTransported'natprivate instance variable passengersAnnoyed'natprivate instance variable passengersCount'natprivate instance variable passengersAnnoyedStops'map ((unresolved Waypoint`WaypointsEnum)) to (nat)static private type inline'inlinestatic private type InputTP'InputTPpublic explicit operation Environment'(seq of (char) ==> (unresolved Environment`Environment))private explicit operation BuildCityMap'(() ==> ())public explicit operation Events'(() ==> ())public explicit operation handleEvent'(seq of (char) ==> ())private explicit operation SetInflow'(nat ==> ())public explicit operation IncreaseInflow'(() ==> ())public explicit operation DecreaseInflow'(() ==> ())public explicit operation TransportedPassengers'(nat ==> ())public explicit operation AnnoyedPassenger'(nat * (unresolved Waypoint`WaypointsEnum) ==> ())public explicit operation PassengerCount'(() ==> ())public explicit operation report'(() ==> ())public explicit operation isFinished'(() ==> ())public explicit operation goEnvironment'(() ==> ())public explicit operation run'(() ==> ())protected thread null'?private permission predicate 'boolprivate mutex predicate '?end Environmentclass Roadstatic public type RoadNumber'RoadNumberprivate instance variable roadNmbr'(unresolved Road`RoadNumber)private instance variable roadLength'natprivate instance variable speedlimit'natprivate instance variable wps'set of ((unresolved Road`Waypoint))private instance variable timePenalty'natprivate invariant inv_Road'boolpublic explicit operation Road'((unresolved Road`RoadNumber) * set of ((unresolved Road`Waypoint)) * nat ==> (unresolved Road`Road))public explicit operation Road'((unresolved Road`RoadNumber) * set of ((unresolved Road`Waypoint)) * nat * nat ==> (unresolved Road`Road))public explicit operation Covers'(set of ((unresolved Road`Waypoint)) ==> bool)public explicit operation GetWaypoints'(() ==> set of ((unresolved Road`Waypoint)))public explicit operation OppositeEnd'((unresolved Road`Waypoint) ==> (unresolved Road`Waypoint))public explicit operation GetSpeedLimit'(() ==> nat)public explicit operation GetLength'(() ==> nat)public explicit operation GetRoadNumber'(() ==> (unresolved Road`RoadNumber))public explicit operation GetTimePenalty'(() ==> nat)end Roadclass Printerstatic public explicit operation Out'(seq of (char) ==> ())static public explicit operation natToString'(nat ==> seq of (char))static public explicit operation OutWithTS'(seq of (char) ==> ())static public explicit operation intToString'(int ==> seq of (char))end Printerclass Busstop is subclass of Waypointprivate instance variable waiting'set of ((unresolved Busstop`Passenger))public explicit operation Busstop'((unresolved Waypoint`BusStops) ==> (unresolved Busstop`Busstop))public explicit operation GetWaitingCount'(() ==> nat)public explicit operation GetWaiting'(() ==> set of ((unresolved Busstop`Passenger)))public explicit operation GetWaitingOn'(seq of ((unresolved Busstop`Waypoint)) ==> set of ((unresolved Busstop`Passenger)))public explicit operation AddPassenger'((unresolved Busstop`Passenger) ==> ())public explicit operation PassengerLeft'(set of ((unresolved Busstop`Passenger)) ==> ())private mutex predicate '?end Busstopclass Worldstatic public instance variable graphics'(unresolved World`gui_Graphics)static public instance variable env'[(unresolved World`Environment)]static public instance variable timerRef'(unresolved World`TimeStamp)public explicit operation World'(() ==> (unresolved World`World))public explicit operation Run'(() ==> ())end World

RESULT:result:-1:-1,-1:class WindTurbineprivate instance variable mHubController'(unresolved WindTurbine`HubController)private instance variable mMainShaftController'(unresolved WindTurbine`MainShaftController)private instance variable mOperatingPanel'(unresolved WindTurbine`OperatingPanel)public explicit operation WindTurbine'(seq of ((unresolved Enviroment`TestData)) ==> (unresolved WindTurbine`WindTurbine))public explicit operation Run'(() ==> ())end WindTurbineclass Modestatic protected instance variable mHubController'[(unresolved Mode`HubController)]static protected instance variable mEnterHubInSafeMode'boolstatic public explicit operation SetHubController'((unresolved Mode`HubController) ==> ())public explicit operation Run'(() ==> ())public explicit operation EnterHubInSafeMode'(() ==> ())public explicit operation LeaveHubInSafeMode'(() ==> ())protected explicit operation ChangeMode'((unresolved Mode`Mode) ==> ())protected explicit operation OnEntry'(() ==> ())protected explicit operation OnRun'(() ==> ())protected explicit operation OnExit'(() ==> ())static public explicit function StateChangeInv'((unresolved Mode`Mode) * (unresolved Mode`Mode) -> bool)static public explicit function HubInSafeModeInv'((unresolved Mode`Mode) * (unresolved MainShaftController`RPMType) * bool * bool -> bool)end Modeclass ModeEnterHubInSafeMode is subclass of Modestatic public value MAX_WINDSPEED'(unresolved WindMeasurementController`WindSpeedType)protected explicit operation OnRun'(() ==> ())end ModeEnterHubInSafeModeclass ModeHubInSafeMode is subclass of Modeprotected explicit operation OnEntry'(() ==> ())protected explicit operation OnRun'(() ==> ())protected explicit operation OnExit'(() ==> ())end ModeHubInSafeModeclass ModeLeaveHubInSafeMode is subclass of Modeprotected explicit operation OnRun'(() ==> ())end ModeLeaveHubInSafeModeclass ModeOperational is subclass of Modeprotected explicit operation OnEntry'(() ==> ())protected explicit operation OnRun'(() ==> ())end ModeOperationalclass HubControllerprivate instance variable mHub'(unresolved HubController`Hub)private instance variable mMainShaftController'(unresolved HubController`MainShaftController)private instance variable mMode'(unresolved HubController`Mode)private invariant inv_HubController'boolprivate instance variable mEStopSeq'seq of (bool)public explicit operation HubController'(seq of (bool) * (unresolved HubController`MainShaftController) ==> (unresolved HubController`HubController))public explicit operation GetHub'(() ==> (unresolved HubController`Hub))public explicit operation GetMainShaftController'(() ==> (unresolved HubController`MainShaftController))public explicit operation SetMode'((unresolved HubController`Mode) ==> ())public explicit operation GetMode'(() ==> (unresolved HubController`Mode))public explicit operation Run'(() ==> ())end HubControllerclass Brakeprivate instance variable mLowLimit'(unresolved MainShaftController`RPMType)private instance variable mHighLimit'(unresolved MainShaftController`RPMType)public explicit operation Brake'((unresolved MainShaftController`RPMType) * (unresolved MainShaftController`RPMType) ==> (unresolved Brake`Brake))public explicit operation GetLow'(() ==> (unresolved MainShaftController`RPMType))public explicit operation GetHigh'(() ==> (unresolved MainShaftController`RPMType))public explicit operation IsEqual'((unresolved Brake`Brake) ==> bool)public explicit operation ApplyBrake'((unresolved MainShaftController`RPMType) ==> (unresolved MainShaftController`RPMType))public explicit operation InterSect'((unresolved Brake`Brake) ==> bool)public explicit operation InRange'(((unresolved MainShaftController`RPMType)) ==> bool)end Brakeclass Enviromentstatic public type TestData'TestDatastatic private explicit function CreateTestSeq'((unresolved WindMeasurementController`WindSpeedType) * bool -> seq of ((unresolved Enviroment`TestData)))static public explicit operation Run'(() ==> ())end Enviromentclass Speakerprivate instance variable mAlarm'natpublic explicit operation StartAlarm'(() ==> ())public explicit operation StopAlarm'(() ==> ())public explicit operation IsActive'(() ==> bool)public explicit operation Run'(() ==> ())end Speakerclass Hubprivate instance variable mSpeaker'(unresolved Hub`Speaker)private instance variable mIsLocked'boolprivate instance variable mIsEStopPressed'boolpublic explicit operation Hub'(() ==> (unresolved Hub`Hub))public explicit operation Open'(() ==> ())public explicit operation Close'(() ==> ())public explicit operation IsOpen'(() ==> bool)public explicit operation IsAlarmActive'(() ==> bool)public explicit operation PressEStop'(() ==> ())public explicit operation ReleaseEStop'(() ==> ())public explicit operation IsEStopPressed'(() ==> bool)public explicit operation Run'(() ==> ())end Hubclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass WindMeasurementControllerstatic public type WindSpeedType'WindSpeedTypestatic public value MAX_WIND'(unresolved WindMeasurementController`WindSpeedType)private instance variable mWindSpeedSeq'seq of ((unresolved WindMeasurementController`WindSpeedType))static private instance variable mInstance'[(unresolved WindMeasurementController`WindMeasurementController)]private explicit operation WindMeasurementController'(seq of ((unresolved WindMeasurementController`WindSpeedType)) ==> (unresolved WindMeasurementController`WindMeasurementController))static public explicit operation CreateInstance'(seq of ((unresolved WindMeasurementController`WindSpeedType)) ==> ())static public explicit operation GetInstance'(() ==> (unresolved WindMeasurementController`WindMeasurementController))public explicit operation GetWindSpeed'(() ==> (unresolved WindMeasurementController`WindSpeedType))public explicit operation IsFinished'(() ==> bool)public explicit operation Run'(() ==> ())end WindMeasurementControllerclass OperatingPanelstatic public type CmdType'CmdTypeprivate instance variable mCmdSeq'seq of ((unresolved OperatingPanel`CmdType))private instance variable mHubController'(unresolved OperatingPanel`HubController)private instance variable mTime'natpublic explicit operation OperatingPanel'(seq of ((unresolved OperatingPanel`CmdType)) * (unresolved OperatingPanel`HubController) ==> (unresolved OperatingPanel`OperatingPanel))private explicit operation EnterHubInSafeMode'(() ==> ())private explicit operation LeaveHubInSafeMode'(() ==> ())private explicit operation Print'(nat1 * seq of (char) ==> ())public explicit operation RunCmdInterface'(() ==> ())public explicit operation RunDisplayInterface'(() ==> ())end OperatingPanelclass MainShaftControllerstatic public value LOCK_LIMIT'(unresolved MainShaftController`RPMType)static public value MAX_RPM'(unresolved MainShaftController`RPMType)static public type RPMType'RPMTypeprivate instance variable mIsLocked'boolprivate instance variable mBrakeSeq'seq of ((unresolved MainShaftController`Brake))private invariant inv_MainShaftController'boolprivate instance variable mRPM'(unresolved MainShaftController`RPMType)private instance variable mIsBrakeApplied'boolstatic private explicit function BrakeSeqInv'(seq of ((unresolved MainShaftController`Brake)) -> bool)public explicit operation MainShaftController'(() ==> (unresolved MainShaftController`MainShaftController))public explicit operation CloseLock'(() ==> ())public explicit operation OpenLock'(() ==> ())public explicit operation IsLocked'(() ==> bool)private explicit operation AddBrake'((unresolved MainShaftController`Brake) ==> ())private explicit operation RemoveBrake'((unresolved MainShaftController`Brake) ==> ())public explicit operation ApplyBrake'(() ==> ())public explicit operation ReleaseBrake'(() ==> ())public explicit operation IsBrakeApplied'(() ==> bool)public explicit operation GetRPM'(() ==> (unresolved MainShaftController`RPMType))public explicit operation Run'(() ==> ())end MainShaftController

class OperatingPanel
 types
 --Enter Hub In Safe Mode (E) | Leave Hub In Safe Mode (L) | No Command (N)
 public CmdType = <E> | <L> | <N>;
 
 instance variables
 mCmdSeq : seq of CmdType;
 mHubController : HubController;
 mTime : nat := 0;

 operations
 public OperatingPanel : seq of CmdType * HubController ==> OperatingPanel
 OperatingPanel(cmdSeq, hubController) ==
 (
  mCmdSeq := cmdSeq;
  mHubController := hubController;
 );

 EnterHubInSafeMode : () ==> ()
 EnterHubInSafeMode() ==
  mHubController.GetMode().EnterHubInSafeMode();
   

 LeaveHubInSafeMode : () ==> ()
 LeaveHubInSafeMode() ==
  mHubController.GetMode().LeaveHubInSafeMode();

 Print : nat1 * seq of char ==> ()
 Print(time, string) ==
 (
  IO`print("T");
  IO`print(time);
  IO`print(" " ^ string ^ "\n");
 );

 public RunCmdInterface : () ==> ()
 RunCmdInterface() ==
 (
  if len mCmdSeq >= 1 then
   let cmd = hd mCmdSeq
   in
   (
    mCmdSeq := tl mCmdSeq;
    mTime := len mCmdSeq + 1;    

    if cmd = <E> then
    (
     Print(mTime, "Command <E>");
     EnterHubInSafeMode()
    )
    else if cmd = <L> then
    ( 
     Print(mTime, "Command <L>");
     LeaveHubInSafeMode()
    )
   )
 );

 public RunDisplayInterface : () ==> ()
 RunDisplayInterface() ==
 (
  --todo klaus cases
  if  isofclass(ModeEnterHubInSafeMode, mHubController.GetMode()) then
   Print(mTime, "Entering Hub In Safe Mode")
  else if isofclass(ModeHubInSafeMode, mHubController.GetMode()) then
   Print(mTime, "Hub In Safe Mode")
  else if isofclass(ModeLeaveHubInSafeMode, mHubController.GetMode()) then
   Print(mTime, "Leaving Hub In Safe Mode")
  else 
   Print(mTime, "Operational")
 ); 
end OperatingPanel
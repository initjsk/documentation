WARNING:ReflectorTest.vdmpp:5001:10,7:Instance variable 'alph' is not initialized.
WARNING:Component.vdmpp:5001:5,17:Instance variable 'alph' is not initialized.
WARNING:RotorTest.vdmpp:5001:13,7:Instance variable 'alph' is not initialized.
WARNING:PlugboardTest.vdmpp:5001:15,7:Instance variable 'alph' is not initialized.
WARNING:Configuration.vdmpp:5001:5,19:Instance variable 'config' is not initialized.
RESULT:result:-1:-1,-1:class Reflector is subclass of Configurationprivate invariant inv_Reflector'boolprivate explicit function ReflectorInv([Component], inmap of (nat) to (nat), Alphabet)'([Component] * inmap of (nat) to (nat) * Alphabet -> bool)public explicit operation Reflector(nat, Alphabet, inmap of (nat) to (nat))'(nat * Alphabet * inmap of (nat) to (nat) ==> Reflector)public explicit operation Substitute(nat)'(nat ==> nat)end Reflectorclass PlugboardTest is subclass of TestCasestatic private value refcfg'inmap of (nat) to (nat)static private value rotcfg'inmap of (nat) to (nat)static private value pbcfg'inmap of (nat) to (nat)private instance variable alph'Alphabetpublic explicit operation PlugboardTest(seq of (char))'(seq of (char) ==> PlugboardTest)protected explicit operation SetUp()'(() ==> ())protected explicit operation SimpleTest()'(() ==> ())protected explicit operation ComplexTest()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end PlugboardTestclass SimpleEnigmaTest is subclass of TestCasepublic explicit operation SimpleEnigmaTest(seq of (char))'(seq of (char) ==> SimpleEnigmaTest)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end SimpleEnigmaTestclass SimpleEnigma is subclass of Componentstatic private value refcfg'inmap of (nat) to (nat)static private value rotcfg'inmap of (nat) to (nat)static private value pbcfg'inmap of (nat) to (nat)public explicit operation SimpleEnigma()'(() ==> SimpleEnigma)public explicit operation Keystroke(char)'(char ==> char)end SimpleEnigmaclass Configuration is subclass of Componentprotected instance variable config'inmap of (nat) to (nat)protected explicit operation Encode(nat)'(nat ==> nat)protected explicit operation Decode(nat)'(nat ==> nat)public explicit operation Substitute(nat)'(nat ==> nat)end Configurationclass Testpublic explicit operation Run(TestResult)'(TestResult ==> ())end Testclass ReflectorTest is subclass of TestCasestatic private value cfg'inmap of (nat) to (nat)private instance variable alph'Alphabetpublic explicit operation ReflectorTest(seq of (char))'(seq of (char) ==> ReflectorTest)protected explicit operation SetUp()'(() ==> ())private explicit operation SimpleTest()'(() ==> ())private explicit operation ComplexTest()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end ReflectorTestclass ConfigurationTest is subclass of Configuration, TestCasestatic private value cfg'inmap of (nat) to (nat)public explicit operation ConfigurationTest(seq of (char))'(seq of (char) ==> ConfigurationTest)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end ConfigurationTestclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass AlphabetTest is subclass of TestCasestatic private value str'seq of (char)public explicit operation AlphabetTest(seq of (char))'(seq of (char) ==> AlphabetTest)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end AlphabetTestclass Plugboard is subclass of Configurationprivate invariant inv_Plugboard'boolprivate explicit function PlugboardInv(inmap of (nat) to (nat), Alphabet)'(inmap of (nat) to (nat) * Alphabet -> bool)public explicit operation Plugboard(Alphabet, inmap of (nat) to (nat))'(Alphabet * inmap of (nat) to (nat) ==> Plugboard)public explicit operation Substitute(nat)'(nat ==> nat)end Plugboardclass TestCase is subclass of Testprotected instance variable name'seq of (char)public explicit operation TestCase(seq of (char))'(seq of (char) ==> TestCase)public explicit operation GetName()'(() ==> seq of (char))protected explicit operation AssertTrue(bool)'(bool ==> ())protected explicit operation AssertFalse(bool)'(bool ==> ())public explicit operation Run(TestResult)'(TestResult ==> ())protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestCaseclass Rotor is subclass of Configurationprivate instance variable latch_pos'natprivate instance variable latch_lock'boolprivate invariant inv_Rotor'boolprivate explicit function RotorInv(nat, inmap of (nat) to (nat), Alphabet)'(nat * inmap of (nat) to (nat) * Alphabet -> bool)public explicit operation Rotor(nat, nat, Alphabet, inmap of (nat) to (nat))'(nat * nat * Alphabet * inmap of (nat) to (nat) ==> Rotor)public explicit operation Rotate()'(() ==> ())public explicit operation Rotate(nat)'(nat ==> ())end Rotorclass Componentprotected instance variable next'[Component]protected instance variable alph'Alphabetpublic explicit operation Successors()'(() ==> set of (Component))public explicit operation SetNext(Component)'(Component ==> ())public explicit operation Substitute(nat)'(nat ==> nat)public explicit operation Rotate()'(() ==> ())public explicit operation Rotate(nat)'(nat ==> ())end Componentclass RotorTest is subclass of TestCasestatic private value refcfg'inmap of (nat) to (nat)static private value rotcfg'inmap of (nat) to (nat)private instance variable alph'Alphabetpublic explicit operation RotorTest(seq of (char))'(seq of (char) ==> RotorTest)protected explicit operation SetUp()'(() ==> ())protected explicit operation SimpleTest()'(() ==> ())protected explicit operation ComplexTest()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end RotorTestclass TestResultprivate instance variable failures'seq of (TestCase)public explicit operation AddFailure(TestCase)'(TestCase ==> ())public explicit operation Print(seq of (char))'(seq of (char) ==> ())public explicit operation Show()'(() ==> ())end TestResultclass TestSuite is subclass of Testprivate instance variable tests'seq of (Test)public explicit operation Run()'(() ==> ())public explicit operation Run(TestResult)'(TestResult ==> ())public explicit operation AddTest(Test)'(Test ==> ())end TestSuiteclass EnigmaTestpublic explicit operation Execute()'(() ==> ())end EnigmaTestclass Alphabetprivate instance variable alph'seq of (char)private invariant inv_Alphabet'boolprivate explicit function AlphabetInv(seq of (char))'(seq of (char) -> bool)public explicit operation Alphabet(seq of (char))'(seq of (char) ==> Alphabet)public explicit operation GetChar(nat)'(nat ==> char)public explicit operation GetIndex(char)'(char ==> nat)public explicit operation GetIndices()'(() ==> set of (nat))public explicit operation GetSize()'(() ==> nat)public explicit operation Shift(nat, nat)'(nat * nat ==> nat)public explicit operation Shift(nat)'(nat ==> nat)end Alphabet

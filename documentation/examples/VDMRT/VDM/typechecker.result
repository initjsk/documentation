WARNING:TestVDMController.vdmrt:5001:18,12:Instance variable 'pos' is not initialized
WARNING:TestTrafficLight.vdmrt:5001:18,12:Instance variable 'pos' is not initialized
WARNING:TestVehicle.vdmrt:5001:20,12:Instance variable 'pos' is not initialized
WARNING:Environment.vdmrt:5001:19,16:Instance variable 'vdmCtrl' is not initialized
WARNING:TestTraffic.vdmrt:5001:19,12:Instance variable 'pos' is not initialized
WARNING:TestVDMComplete.vdmrt:5000:27,14:Definition 'w' not used
WARNING:TestVehicle.vdmrt:5001:19,12:Instance variable 'dir' is not initialized
WARNING:TestTraffic.vdmrt:5008:89,10:traf at 83'6 hidden by traf
WARNING:TestTrafficData.vdmrt:5001:18,12:Instance variable 'pos' is not initialized
WARNING:TestController.vdmrt:5001:18,12:Instance variable 'pos' is not initialized
RESULT:result:-1:-1,-1:class Vehicleprivate instance variable dir'Directionprivate instance variable speed'natprivate instance variable lowgrip'boolprivate instance variable turnIndicator'Indicatorprivate instance variable pos'Positionprivate instance variable id'natstatic public type Indicator'Indicatorpublic explicit operation Vehicle(nat, Position, nat, Direction)'(nat * Position * nat * Direction ==> Vehicle)public explicit operation Vehicle(VehicleData)'(VehicleData ==> Vehicle)public explicit operation GetDirection()'(() ==> Direction)async public explicit operation SetDirection(Direction)'(Direction ==> ())public explicit operation GetSpeed()'(() ==> nat)async public explicit operation SetSpeed(nat)'(nat ==> ())public explicit operation getLowGrip()'(() ==> bool)async public explicit operation setLowGrip(bool)'(bool ==> ())public explicit operation TurnIndicator()'(() ==> Indicator)async public explicit operation setTurnIndicator(Indicator)'(Indicator ==> ())public explicit operation GetPosition()'(() ==> Position)async public explicit operation SetPosition(Position)'(Position ==> ())public explicit operation GetID()'(() ==> nat)public explicit operation Move()'(() ==> ())public explicit operation getDTO()'(() ==> VehicleData)static public explicit function IndicatorToString(Indicator)'(Indicator -> seq of (char))private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end Vehicleclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass Typesstatic public type Time'Timestatic public type Direction'Directionstatic public type Event'Eventstatic public type VechicleRun'VechicleRunstatic public type TrafficLightRun'TrafficLightRunstatic public type VehicleUpdateSpeed'VehicleUpdateSpeedstatic public type VehicleUpdatePosition'VehicleUpdatePositionstatic public type VehicleUpdateDirection'VehicleUpdateDirectionstatic public type VehicleLowGrip'VehicleLowGripstatic public type VehicleTurnIndication'VehicleTurnIndicationstatic public type WasteTime'WasteTimestatic public explicit function DirectionToString(Direction)'(Direction -> seq of (char))end Typesclass Testpublic explicit operation Run(TestResult)'(TestResult ==> ())end Testclass VDMprivate instance variable cpu0'CPUprivate instance variable cpu1'CPUprivate instance variable cpu2'CPUprivate instance variable cpu3'CPUprivate instance variable cpu4'CPUprivate instance variable cpu5'CPUprivate instance variable cpu6'CPUprivate instance variable cpu7'CPUprivate instance variable cpu8'CPUprivate instance variable cpu9'CPUprivate instance variable cpu10'CPUprivate instance variable cpu11'CPUprivate instance variable cpu12'CPUprivate instance variable cpu13'CPUprivate instance variable cpu14'CPUprivate instance variable bus1'BUSstatic public instance variable ctrl1'Controllerstatic public instance variable ctrl2'Controllerstatic public instance variable ctrl3'Controllerstatic public instance variable ctrl4'Controllerstatic public instance variable ctrl5'Controllerstatic public instance variable ctrl6'Controllerstatic public instance variable ctrl7'Controllerstatic public instance variable ctrl8'Controllerstatic public instance variable ctrl9'Controllerstatic public instance variable ctrl10'Controllerstatic public instance variable ctrl11'Controllerstatic public instance variable ctrl12'Controllerstatic public instance variable ctrl13'Controllerstatic public instance variable ctrl14'Controllerstatic public instance variable tl1'TrafficLightstatic public instance variable vdmCtrl'VDMControllerpublic explicit operation VDM()'(() ==> VDM)end VDMclass TrafficDataprivate instance variable dir'Directionprivate instance variable pos'Positionprivate instance variable message'MessageTypeprivate instance variable timeToLive'natstatic public type MessageType'MessageTypepublic explicit operation TrafficData(MessageType, Position, Direction)'(MessageType * Position * Direction ==> TrafficData)public explicit operation GetPosition()'(() ==> Position)public explicit operation GetMessage()'(() ==> MessageType)public explicit operation GetDirection()'(() ==> Direction)public explicit operation Expired()'(() ==> bool)public explicit operation ToString()'(() ==> seq of (char))static public explicit function MessageTypeToString(MessageType)'(MessageType -> seq of (char))end TrafficDataclass TestVDMCompletepublic explicit operation Execute()'(() ==> ())end TestVDMCompleteclass TestSuite is subclass of Testprivate instance variable tests'seq of (Test)static public type TestKinds'TestKindspublic explicit operation Run()'(() ==> ())public explicit operation Run(TestResult)'(TestResult ==> ())public explicit operation AddTest(TestKinds)'(TestKinds ==> ())end TestSuiteclass TestTrafficLight is subclass of TestCaseprivate instance variable pos'Positionpublic explicit operation TestTrafficLight(seq of (char))'(seq of (char) ==> TestTrafficLight)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())public explicit operation testGreenLightPath()'(() ==> ())public explicit operation testCrossDirection()'(() ==> ())end TestTrafficLightclass VDMControllerpublic instance variable ctrlUnits'inmap of (nat) to (Controller)public instance variable lights'inmap of (nat) to (TrafficLight)private invariant inv_VDMController'boolprivate invariant inv_VDMController'boolprivate invariant inv_VDMController'boolpublic explicit operation addController(Controller)'(Controller ==> ())public explicit operation addTrafficLight(TrafficLight)'(TrafficLight ==> ())public explicit operation getController(nat)'(nat ==> Controller)public explicit operation getTrafficLight(nat)'(nat ==> TrafficLight)public explicit operation Step()'(() ==> ())public explicit operation CalculateInRange()'(() ==> ())static public explicit function OppositeDirection(Direction)'(Direction -> Direction)public explicit function FindInRange(Controller, set of (Controller))'(Controller * set of (Controller) -> set of (Controller))public explicit function InRange(Controller, Controller)'(Controller * Controller -> bool)public explicit function FindInRangeWithOppositeDirection(Controller, set of (Controller))'(Controller * set of (Controller) -> set of (Controller))protected thread thread'?private permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end VDMControllerclass TestCase is subclass of Testprivate instance variable name'seq of (char)public explicit operation TestCase(seq of (char))'(seq of (char) ==> TestCase)public explicit operation GetName()'(() ==> seq of (char))protected explicit operation AssertTrue(bool)'(bool ==> ())protected explicit operation AssertFalse(bool)'(bool ==> ())public explicit operation Run(TestResult)'(TestResult ==> ())protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestCaseclass TestResultprivate instance variable failures'seq of (TestCase)public explicit operation AddFailure(TestCase)'(TestCase ==> ())public explicit operation Print(seq of (char))'(seq of (char) ==> ())public explicit operation Show()'(() ==> ())end TestResultclass TrafficLightprivate instance variable pos'Positionprivate instance variable greenLightTime'nat1private instance variable greenDir'Directionprivate instance variable id'natpublic explicit operation TrafficLight(nat, Position, nat1)'(nat * Position * nat1 ==> TrafficLight)public explicit operation AddTrafficData(TrafficData)'(TrafficData ==> ())public explicit operation GetTrafficData()'(() ==> set of (TrafficData))public explicit operation GetPosition()'(() ==> Position)public explicit operation GreenLightPath()'(() ==> Direction)public explicit operation GetID()'(() ==> nat)private explicit operation Step()'(() ==> ())static public explicit function CrossDirection(Direction)'(Direction -> Direction)protected thread thread'?private mutex predicate '?private mutex predicate '?end TrafficLightclass TestTraffic is subclass of TestCaseprivate instance variable pos'Positionpublic explicit operation TestTraffic(seq of (char))'(seq of (char) ==> TestTraffic)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())public explicit operation testCongestion()'(() ==> ())end TestTrafficclass Positionprivate instance variable x'intprivate instance variable y'intpublic explicit operation Position(int, int)'(int * int ==> Position)public explicit operation X()'(() ==> int)public explicit operation Y()'(() ==> int)public explicit operation setX(int)'(int ==> ())public explicit operation setY(int)'(int ==> ())public explicit operation toString()'(() ==> seq of (char))public explicit operation inRange(Position, int)'(Position * int ==> bool)public explicit operation deepCopy()'(() ==> Position)static public explicit function Compare(Position, Position)'(Position * Position -> bool)end Positionclass Worldstatic public instance variable env'[Environment]public explicit operation World()'(() ==> World)public explicit operation Run()'(() ==> ())static public explicit operation Verbose(bool)'(bool ==> ())end Worldclass VDMUtilstatic public explicit function set2seq(set of (@T))'(set of (@T) +> seq of (@T))static public explicit function get_file_pos()'(() +> [(seq of (char) * nat * nat * seq of (char) * seq of (char))])static public explicit function val2seq_of_char(@T)'(@T +> seq of (char))static public explicit function seq_of_char2val(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))end VDMUtilclass TestPosition is subclass of TestCasepublic explicit operation TestPosition(seq of (char))'(seq of (char) ==> TestPosition)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())public explicit operation testInRange()'(() ==> ())public explicit operation testDeepCopy()'(() ==> ())public explicit operation testCompare()'(() ==> ())end TestPositionclass TestVDMController is subclass of TestCaseprivate instance variable pos'Positionpublic explicit operation TestVDMController(seq of (char))'(seq of (char) ==> TestVDMController)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())private explicit operation runner()'(() ==> ())private explicit operation IsFinished()'(() ==> ())protected explicit operation TearDown()'(() ==> ())protected thread thread'?private permission predicate 'boolend TestVDMControllerclass TestTrafficData is subclass of TestCaseprivate instance variable pos'Positionpublic explicit operation TestTrafficData(seq of (char))'(seq of (char) ==> TestTrafficData)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())public explicit operation testExpired()'(() ==> ())end TestTrafficDataclass TestController is subclass of TestCaseprivate instance variable pos'Positionpublic explicit operation TestController(seq of (char))'(seq of (char) ==> TestController)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())end TestControllerclass Configstatic public value Range'natstatic public value TrafficDataLifeTime'natstatic public value TrafficDataKeeptNumber'natstatic public value TrafficCongestionTrack'natstatic public value TrafficCongestionRange'natstatic public value TrafficCongestionThreshold'natend Configclass Printerstatic private instance variable echo'boolstatic public explicit operation Echo(bool)'(bool ==> ())static public explicit operation OutAlways(seq of (char))'(seq of (char) ==> ())static public explicit operation OutWithTS(seq of (char))'(seq of (char) ==> ())static public explicit operation natToString(nat)'(nat ==> seq of (char))static public explicit operation intToString(int)'(int ==> seq of (char))end Printerclass VehicleDataprivate instance variable dir'Directionprivate instance variable speed'natprivate instance variable lowgrip'boolprivate instance variable turnIndicator'Indicatorprivate instance variable pos'Positionprivate instance variable id'natstatic public type Indicator'Indicatorpublic explicit operation VehicleData(nat, Position, nat, Direction, bool)'(nat * Position * nat * Direction * bool ==> VehicleData)public explicit operation GetDirection()'(() ==> Direction)public explicit operation GetSpeed()'(() ==> nat)public explicit operation getLowGrip()'(() ==> bool)public explicit operation TurnIndicator()'(() ==> Indicator)public explicit operation GetPosition()'(() ==> Position)public explicit operation GetID()'(() ==> nat)end VehicleDataclass Controllerprivate instance variable internalTrafficData'seq of (TrafficData)private invariant inv_Controller'boolprivate instance variable externalTrafficData'seq of (TrafficData)private invariant inv_Controller'boolprivate instance variable communicatedWith'seq of (nat)private invariant inv_Controller'boolprivate instance variable traffic'Trafficprivate instance variable vdmVehicle'Vehiclepublic explicit operation Controller(Vehicle)'(Vehicle ==> Controller)async public explicit operation AddOncomingVehicle(VehicleData)'(VehicleData ==> ())async public explicit operation AddTrafficData(nat, seq of (TrafficData))'(nat * seq of (TrafficData) ==> ())private explicit operation AddInternalTrafficData(TrafficData)'(TrafficData ==> ())public explicit operation GetTrafficData()'(() ==> seq of (TrafficData))public explicit operation GetVehicleID()'(() ==> nat)public explicit operation GetPosition()'(() ==> Position)public explicit operation GetDirection()'(() ==> Direction)public explicit operation getVehicle()'(() ==> Vehicle)public explicit operation getVehicleDTO()'(() ==> VehicleData)public explicit operation Step()'(() ==> ())async public explicit operation run()'(() ==> ())protected thread thread'?private mutex predicate '?private mutex predicate '?private mutex predicate '?end Controllerclass Environmentprivate instance variable vdmCtrl'VDMControllerprivate instance variable io'IOprivate instance variable inlines'seq of (inline)private instance variable outlines'seq of (char)private instance variable busy'boolstatic private type inline'inlinestatic private type InputTP'InputTPpublic explicit operation Environment(seq of (char))'(seq of (char) ==> Environment)public explicit operation Events()'(() ==> ())public explicit operation handleEvent(seq of (char))'(seq of (char) ==> ())public explicit operation report()'(() ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation setVDMCtrl(VDMController)'(VDMController ==> ())public explicit operation run()'(() ==> ())protected thread thread'?private permission predicate 'boolprivate mutex predicate '?end Environmentclass TestVehicle is subclass of TestCaseprivate instance variable dir'Directionprivate instance variable pos'Positionpublic explicit operation TestVehicle(seq of (char))'(seq of (char) ==> TestVehicle)protected explicit operation SetUp()'(() ==> ())protected explicit operation RunTest()'(() ==> ())protected explicit operation TearDown()'(() ==> ())protected explicit operation initData()'(() ==> Vehicle)protected explicit operation testGetDirection()'(() ==> ())protected explicit operation testSetDirection()'(() ==> ())protected explicit operation testGetSpeed()'(() ==> ())protected explicit operation testSetSpeed()'(() ==> ())protected explicit operation testgetLowGrip()'(() ==> ())protected explicit operation testsetLowGrip()'(() ==> ())protected explicit operation testTurnIndicator()'(() ==> ())protected explicit operation testsetTurnIndicator()'(() ==> ())protected explicit operation testGetPosition()'(() ==> ())protected explicit operation testSetPosition()'(() ==> ())protected explicit operation testStep()'(() ==> ())end TestVehicleclass Trafficprivate instance variable vehicles'seq of (Vehicle)private invariant inv_Traffic'boolpublic explicit operation AddVehicle(Vehicle)'(Vehicle ==> ())public explicit operation ExistVehicle(Vehicle)'(Vehicle ==> bool)public explicit operation ExistVehicleData(VehicleData)'(VehicleData ==> bool)public explicit operation GetVehicles()'(() ==> seq of (Vehicle))public explicit operation Congestion()'(() ==> bool)private explicit operation AverageSpeed(set of (Vehicle))'(set of (Vehicle) ==> nat)public explicit function InRange(Vehicle, Vehicle)'(Vehicle * Vehicle -> bool)public explicit function FindInRangeWithSameDirection(Vehicle, seq of (Vehicle))'(Vehicle * seq of (Vehicle) -> set of (Vehicle))private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end Trafficclass CPUpublic explicit operation CPU((<FCFS> | <FP>), real)'((<FCFS> | <FP>) * real ==> CPU)public explicit operation deploy(?)'(? ==> ())public explicit operation deploy(?, seq of (char))'(? * seq of (char) ==> ())public explicit operation setPriority(?, nat)'(? * nat ==> ())end CPUclass BUSpublic explicit operation BUS((<CSMACD> | <FCFS>), real, set of (CPU))'((<CSMACD> | <FCFS>) * real * set of (CPU) ==> BUS)end BUS

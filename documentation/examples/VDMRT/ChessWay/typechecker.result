RESULT:result:-1:-1,-1:class Environmentstatic private value reserved'set of (seq of (char))static public type tCtCurve'tCtCurvestatic public type tCtBehavior'tCtBehaviorprivate instance variable mCtBehavior'tCtBehaviorpublic explicit operation loadCsvFile(seq of (char), seq of (char))'(seq of (char) * seq of (char) ==> ())public explicit operation loadScenario(seq of (char))'(seq of (char) ==> ())public explicit operation evalSensors(real)'(real ==> ())public explicit operation evalSingle(real, seq of (char), tCtCurve)'(real * seq of (char) * tCtCurve ==> ())static public instance variable debug'natprivate instance variable mWorld'Worldprivate instance variable mMaxSimTime'natprivate instance variable mLeftWheel'Wheelprivate instance variable mRightWheel'Wheelprivate instance variable mLeftHall'HallSensorprivate instance variable mRightHall'HallSensorprivate instance variable mUser'Userpublic explicit operation Environment(World, nat)'(World * nat ==> Environment)private instance variable ain'ISensorRealprivate instance variable vin'ISensorRealprivate instance variable aout'IActuatorRealprivate instance variable vout'IActuatorRealprivate instance variable mValues'map (seq of (char)) to (real)public explicit operation setValue(seq of (char), real)'(seq of (char) * real ==> ())private explicit operation setCosimValue(seq of (char), real)'(seq of (char) * real ==> ())public explicit operation getValue(seq of (char))'(seq of (char) ==> real)private explicit operation getCosimValue(seq of (char))'(seq of (char) ==> real)private mutex predicate '?private mutex predicate '?private mutex predicate '?private explicit operation mainLoop()'(() ==> ())private explicit operation terminate()'(() ==> ())protected thread thread'?private explicit operation printDiagnostics()'(() ==> ())public explicit operation printEnvironment()'(() ==> ())end Environmentclass MotorSensor is subclass of ISensorRealprivate instance variable mController'Controllerpublic explicit operation MotorSensor(Controller)'(Controller ==> MotorSensor)public explicit operation GetValue()'(() ==> real)public explicit operation getHallSensorData()'(() ==> (bool * bool * bool))end MotorSensorclass IActuatorRealpublic explicit operation SetValue(real)'(real ==> ())end IActuatorRealclass ChessWayprivate instance variable fpga1'CPUprivate instance variable fpga2'CPUprivate instance variable bus'BUSstatic public instance variable acc_in'[ISensorReal]static public instance variable vel_in'[ISensorReal]static public instance variable acc_out'[IActuatorReal]static public instance variable vel_out'[IActuatorReal]static public instance variable lctrl'LeftControllerstatic public instance variable rctrl'RightControllerstatic public instance variable debug'boolpublic explicit operation ChessWay()'(() ==> ChessWay)end ChessWayclass PD is subclass of DTControlprotected instance variable k'realprotected instance variable tauD'realprotected instance variable beta'realprotected instance variable uD'realprotected instance variable prev_err'realpublic explicit operation PD(real, real, real)'(real * real * real ==> PD)public explicit operation PD(real, real)'(real * real ==> PD)public explicit operation PD()'(() ==> PD)public explicit operation Output(real)'(real ==> real)static private value DEF_K'realstatic private value DEF_TAUD'realstatic private value DEF_BETA'realend PDclass MotorActuator is subclass of IActuatorRealstatic private type tDriveStatus'tDriveStatusprivate instance variable mDriveStatus'tDriveStatusprivate instance variable mController'Controllerpublic explicit operation MotorActuator(Controller)'(Controller ==> MotorActuator)public explicit operation initActuator()'(() ==> ())public explicit operation isActuated()'(() ==> bool)public explicit operation setFreeRunning()'(() ==> ())public explicit operation setActuated()'(() ==> ())public explicit operation SetValue(real)'(real ==> ())public explicit operation setPWM(real)'(real ==> ())public explicit operation printDiagnostics()'(() ==> ())end MotorActuatorclass MATHstatic public explicit function sin(real)'(real +> real)static public explicit function cos(real)'(real +> real)static public explicit function tan(real)'(real -> real)static public explicit function cot(real)'(real -> real)static public explicit function asin(real)'(real -> real)static public explicit function acos(real)'(real -> real)static public explicit function atan(real)'(real +> real)static public explicit function acot(real)'(real +> real)static public explicit function sqrt(real)'(real -> real)static public explicit function pi_f()'(() +> real)static public explicit operation srand(int)'(int ==> ())static public explicit operation rand(int)'(int ==> int)static public explicit operation srand2(int)'(int ==> int)static public explicit function exp(real)'(real +> real)static public explicit function ln(real)'(real -> real)static public explicit function log(real)'(real -> real)static public explicit function fac(nat)'(nat -> nat1)static public value pi'realend MATHclass PID is subclass of DTControlprotected instance variable k'realprotected instance variable tauI'realprotected instance variable tauD'realprotected instance variable beta'realprotected instance variable uP'realprotected instance variable uD'realprotected instance variable uI'realprotected instance variable prev_err'realpublic explicit operation PID(real, real, real, real)'(real * real * real * real ==> PID)public explicit operation PID(real, real, real)'(real * real * real ==> PID)public explicit operation PID()'(() ==> PID)public explicit operation Output(real)'(real ==> real)static private value DEF_K'realstatic private value DEF_TAUI'realstatic private value DEF_TAUD'realstatic private value DEF_BETA'realend PIDclass Worldstatic public value SIM_RESOLUTION'nat1static public value MAX_SIM_TIME'nat1static public instance variable cosim'boolpublic explicit operation run()'(() ==> ())public explicit operation RunVdmRt()'(() ==> ())public explicit operation RunScenario(seq1 of (char))'(seq1 of (char) ==> ())public instance variable finish'boolprivate explicit operation waitForSimulationEnd()'(() ==> ())public explicit operation signal()'(() ==> ())private permission predicate 'boolend Worldclass Sensor is subclass of ISensorRealprivate instance variable value'realpublic explicit operation Sensor(real)'(real ==> Sensor)public explicit operation Sensor()'(() ==> Sensor)public explicit operation GetValue()'(() ==> real)end Sensorclass P is subclass of DTControlprotected instance variable k'realpublic explicit operation P(real)'(real ==> P)public explicit operation P()'(() ==> P)public explicit operation Output(real)'(real ==> real)static private value DEF_K'realend Pclass OnOffSwitchprivate instance variable mController'Controllerpublic explicit operation OnOffSwitch(Controller)'(Controller ==> OnOffSwitch)public explicit operation getStatus()'(() ==> bool)end OnOffSwitchclass PI is subclass of DTControlprotected instance variable k'realprotected instance variable tauI'realprotected instance variable uP'realprotected instance variable uI'realpublic explicit operation PI(real, real)'(real * real ==> PI)public explicit operation PI()'(() ==> PI)public explicit operation Output(real)'(real ==> real)static private value DEF_K'realstatic private value DEF_TAUI'realend PIclass RightController is subclass of Controllerstatic private value KP2'realstatic private value KI2'realstatic private value KD2'realstatic private value BETA2'realpublic instance variable ctrl'DTControlpublic instance variable mSafetySwitch'SafetySwitchpublic instance variable mOnOffSwitch'OnOffSwitchpublic instance variable mDirectionSwitch'DirectionSwitchpublic explicit operation RightController()'(() ==> RightController)private instance variable mLeft'[LeftController]public explicit operation setLeftController(LeftController)'(LeftController ==> ())private instance variable mLoopCnt'natprivate instance variable mTimeEntry'natprivate instance variable mDebug'natpublic explicit operation CtrlLoopEntry()'(() ==> ())public explicit operation CtrlLoopBody()'(() ==> ())public explicit operation CtrlLoopExit()'(() ==> ())public explicit operation PowerUp()'(() ==> ())public explicit operation printDiagnostics()'(() ==> ())public explicit operation computeResponse((bool * bool * bool), bool, bool, tDirectionStatus)'((bool * bool * bool) * bool * bool * tDirectionStatus ==> real)end RightControllerclass Wheelstatic private value MAX_ACC'realprivate instance variable mName'seq of (char)private instance variable mEnvironment'Environmentprivate instance variable last'natpublic instance variable acc'realpublic instance variable speed'realpublic instance variable position'realpublic explicit operation Wheel(seq of (char), Environment)'(seq of (char) * Environment ==> Wheel)private explicit operation isActuated()'(() ==> bool)private explicit operation getPWM()'(() ==> real)public explicit operation evaluate()'(() ==> ())end Wheelclass SetpointProfileCSVprivate instance variable filename'seq of (char)private instance variable lines'intprivate instance variable line'intprivate instance variable setpoint'realprivate instance variable next_setpoint'[(real * real)]public explicit operation SetpointProfileCSV(real, seq of (char))'(real * seq of (char) ==> SetpointProfileCSV)public explicit operation SetpointProfileCSV(seq of (char))'(seq of (char) ==> SetpointProfileCSV)private explicit operation ReadNextSetpoint()'(() ==> ())public explicit operation GetSetpoint()'(() ==> real)private explicit operation quit(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())private explicit operation quit(seq of (char))'(seq of (char) ==> ())end SetpointProfileCSVclass Accelerometerprivate instance variable mController'Controllerpublic explicit operation Accelerometer(Controller)'(Controller ==> Accelerometer)public explicit operation getAccelerationData()'(() ==> (real * real * real))end Accelerometerclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass ISensorRealpublic explicit operation GetValue()'(() ==> real)end ISensorRealclass LeftController is subclass of Controllerstatic private value KP1'realstatic private value KI1'realstatic private value KD1'realstatic private value BETA1'realpublic instance variable ctrl'DTControlpublic instance variable mAccelerometer'Accelerometerpublic instance variable mGyroscope'Gyroscopepublic explicit operation LeftController()'(() ==> LeftController)private instance variable mRight'[RightController]public explicit operation setRightController(RightController)'(RightController ==> ())private instance variable mLoopCnt'natprivate instance variable mTimeEntry'natprivate instance variable mDebug'natpublic explicit operation CtrlLoopEntry()'(() ==> ())public explicit operation CtrlLoopBody()'(() ==> ())public explicit operation CtrlLoopExit()'(() ==> ())public explicit operation PowerUp()'(() ==> ())public explicit operation printDiagnostics()'(() ==> ())public explicit operation computeResponse((bool * bool * bool), (real * real * real), real)'((bool * bool * bool) * (real * real * real) * real ==> real)end LeftControllerclass Controllerstatic public value SAMPLETIME'realpublic instance variable mName'seq of (char)public instance variable mMotorActuator'MotorActuatorpublic instance variable mMotorSensor'MotorSensorpublic explicit operation Controller(seq of (char))'(seq of (char) ==> Controller)protected instance variable mEnvironment'[Environment]public explicit operation setEnvironment(Environment)'(Environment ==> ())public explicit operation setValue(seq of (char), real)'(seq of (char) * real ==> ())public explicit operation getValue(seq of (char))'(seq of (char) ==> real)static protected value DEBUGCTRLLOOP'nat1protected explicit operation printDiagnostics(nat)'(nat ==> ())public explicit operation PowerUp()'(() ==> ())async private explicit operation CtrlLoop()'(() ==> ())public explicit operation CtrlLoopEntry()'(() ==> ())public explicit operation CtrlLoopBody()'(() ==> ())public explicit operation CtrlLoopExit()'(() ==> ())protected thread thread'?end Controllerclass Gyroscopeprivate instance variable mController'Controllerpublic explicit operation Gyroscope(Controller)'(Controller ==> Gyroscope)public explicit operation getYawRateData()'(() ==> real)end Gyroscopeclass CSV is subclass of IOstatic public explicit function fwriteval(seq1 of (char), seq of (?), filedirective)'(seq1 of (char) * seq of (?) * filedirective -> bool)static public explicit function freadval(seq1 of (char), int)'(seq1 of (char) * int -> (bool * [@p]))static public explicit function flinecount(seq1 of (char))'(seq1 of (char) -> (bool * int))static public explicit operation ferror()'(() ==> seq of (char))end CSVclass Actuator is subclass of IActuatorRealprivate instance variable value'realpublic explicit operation Actuator(real)'(real ==> Actuator)public explicit operation Actuator()'(() ==> Actuator)public explicit operation SetValue(real)'(real ==> ())end Actuatorclass DTControl is subclass of DTObjectpublic explicit operation Output(real)'(real ==> real)end DTControlclass DTObjectprotected instance variable sampletime'realpublic explicit operation SetSampleTime(real)'(real ==> ())end DTObjectclass SafetySwitchprivate instance variable mController'Controllerpublic explicit operation SafetySwitch(Controller)'(Controller ==> SafetySwitch)public explicit operation getStatus()'(() ==> bool)end SafetySwitchclass DirectionSwitchprivate instance variable mController'Controllerpublic explicit operation DirectionSwitch(Controller)'(Controller ==> DirectionSwitch)static public type tDirectionStatus'tDirectionStatuspublic explicit operation getStatus()'(() ==> tDirectionStatus)end DirectionSwitchclass HallSensorprivate instance variable mName'seq of (char)private instance variable mEnvironment'Environmentprivate instance variable mWheel'Wheelprivate explicit function convert(real)'(real -> nat)public explicit operation HallSensor(seq of (char), Environment, Wheel)'(seq of (char) * Environment * Wheel ==> HallSensor)private explicit operation setSensor(seq of (char), bool)'(seq of (char) * bool ==> ())public explicit operation setSensors(bool, bool, bool)'(bool * bool * bool ==> ())public explicit operation evaluate()'(() ==> ())end HallSensorclass Userstatic private value gravity'realprivate instance variable mEnvironment'Environmentprivate instance variable mLeftWheel'Wheelprivate instance variable mRightWheel'Wheelprivate instance variable last'natprivate instance variable angle'realpublic explicit operation User(Environment, Wheel, Wheel)'(Environment * Wheel * Wheel ==> User)public explicit operation evaluate()'(() ==> ())end Userclass CPUpublic explicit operation CPU((<FCFS> | <FP>), real)'((<FCFS> | <FP>) * real ==> CPU)public explicit operation deploy(?)'(? ==> ())public explicit operation deploy(?, seq of (char))'(? * seq of (char) ==> ())public explicit operation setPriority(?, nat)'(? * nat ==> ())end CPUclass BUSpublic explicit operation BUS((<CSMACD> | <FCFS>), real, set of (CPU))'((<CSMACD> | <FCFS>) * real * set of (CPU) ==> BUS)end BUS

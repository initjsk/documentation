WARNING:Actuator.vdmrt:5001:18,15:Instance variable 'ID' is not initialized
WARNING:Sensor.vdmrt:5001:20,18:Instance variable 'Value' is not initialized
WARNING:Sensor.vdmrt:5001:18,15:Instance variable 'ID' is not initialized
WARNING:Actuator.vdmrt:5001:20,17:Instance variable 'Corr' is not initialized
WARNING:Sensor.vdmrt:5001:19,17:Instance variable 'Type' is not initialized
WARNING:Actuator.vdmrt:5001:19,17:Instance variable 'Type' is not initialized
RESULT:result:-1:-1,-1:class TemperatureSensor is subclass of Sensorprivate instance variable finished'boolpublic explicit operation TemperatureSensor(nat, nodeType, int)'(nat * nodeType * int ==> TemperatureSensor)public explicit operation PeriodicOp()'(() ==> ())public explicit operation IsFinished()'(() ==> ())private permission predicate 'boolprotected thread thread'?end TemperatureSensorclass Actuatorprotected instance variable ID'natprotected instance variable Type'nodeTypeprotected instance variable Corr'correctionpublic explicit operation GetID()'(() ==> nat)public explicit operation GetType()'(() ==> nodeType)public explicit operation Step()'(() ==> ())end Actuatorclass Window is subclass of Actuatorprivate instance variable finished'boolpublic explicit operation Window(nat, nodeType)'(nat * nodeType ==> Window)private explicit operation PeriodicOp()'(() ==> ())async public explicit operation SetCorrection(correction)'(correction ==> ())public explicit operation GetCorrection()'(() ==> correction)public explicit operation IsFinished()'(() ==> ())private permission predicate 'boolprivate mutex predicate '?protected thread thread'?end Windowclass Sensorprotected instance variable ID'natprotected instance variable Type'nodeTypeprotected instance variable Value'intpublic explicit operation GetID()'(() ==> nat)public explicit operation GetType()'(() ==> nodeType)public explicit operation ReadValue()'(() ==> int)public explicit operation Step()'(() ==> ())end Sensorclass HAprivate instance variable cpu1'CPUprivate instance variable cpu2'CPUprivate instance variable cpu5'CPUprivate instance variable cpu3'CPUprivate instance variable cpu4'CPUprivate instance variable bus1'BUSstatic public instance variable Host'HostControllerstatic public instance variable TempNode'TemperatureSensorstatic public instance variable HumidNode'HumidSensorstatic public instance variable ThermNode'Thermostatstatic public instance variable WinNode'Windowpublic explicit operation HA()'(() ==> HA)end HAclass HostControllerstatic private value OVERSHOOT_CNT'natprivate instance variable finished'boolprivate instance variable TargetTemp'natprivate instance variable Temp'natprivate instance variable TargetHumid'natprivate instance variable Humid'natprivate instance variable NodeList'map (nat) to (nodeType)private instance variable Algo'algTypeprivate instance variable incTempCnt'natprivate instance variable decTempCnt'natprivate instance variable decHumidCnt'natstatic public type algType'algTypepublic explicit operation HostController(nat, nat)'(nat * nat ==> HostController)public explicit operation UpdateValues()'(() ==> ())public explicit operation GetAlgo()'(() ==> algType)public explicit operation GetTemp()'(() ==> nat)public explicit operation GetHumid()'(() ==> nat)public explicit operation Algorithm()'(() ==> ())private explicit operation THTWAlgo()'(() ==> ())private explicit operation TTWAlgo()'(() ==> ())private explicit operation TTAlgo()'(() ==> ())private explicit operation TWAlgo()'(() ==> ())private explicit operation HWAlgo()'(() ==> ())private explicit operation UpdateAlgorithm()'(() ==> ())public explicit operation AddNode(nat, nodeType)'(nat * nodeType ==> ())public explicit operation RemoveNode(nat, nodeType)'(nat * nodeType ==> ())private explicit operation PeriodicOp()'(() ==> ())public explicit operation IsFinished()'(() ==> ())public explicit operation Finish()'(() ==> ())private mutex predicate '?private permission predicate 'boolprotected thread thread'?end HostControllerclass Environmentprivate instance variable io'IOprivate instance variable inlines'seq of (inline)private instance variable outlines'seq of (outline)private instance variable simtime'natprivate instance variable finished'boolprivate instance variable envTemp'intprivate instance variable envHumid'intstatic public type inline'inlinestatic public type outline'outlinepublic explicit operation Environment(seq of (char))'(seq of (char) ==> Environment)private explicit operation CreateSignal()'(() ==> ())private explicit operation ShowResults()'(() ==> ())public explicit operation HandleEvent(nat, nat, nat)'(nat * nat * nat ==> ())public explicit operation SetTemp(nat)'(nat ==> ())public explicit operation SetHumid(nat)'(nat ==> ())public explicit operation ReadTemp()'(() ==> int)public explicit operation IncTemp()'(() ==> ())public explicit operation DecTemp()'(() ==> ())public explicit operation ReadHumid()'(() ==> nat)public explicit operation IncHumid()'(() ==> ())public explicit operation DecHumid()'(() ==> ())public explicit operation IsFinished()'(() ==> ())private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private permission predicate 'boolprotected thread thread'?end Environmentclass HumidSensor is subclass of Sensorprivate instance variable finished'boolpublic explicit operation HumidSensor(nat, nodeType, nat)'(nat * nodeType * nat ==> HumidSensor)public explicit operation PeriodicOp()'(() ==> ())public explicit operation IsFinished()'(() ==> ())private permission predicate 'boolprotected thread thread'?end HumidSensorclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass Worldstatic public instance variable env'[Environment]public explicit operation World()'(() ==> World)public explicit operation Run()'(() ==> ())end Worldclass Thermostat is subclass of Actuatorprivate instance variable finished'boolpublic explicit operation Thermostat(nat, nodeType)'(nat * nodeType ==> Thermostat)private explicit operation PeriodicOp()'(() ==> ())async public explicit operation SetCorrection(correction)'(correction ==> ())public explicit operation GetCorrection()'(() ==> correction)public explicit operation IsFinished()'(() ==> ())private permission predicate 'boolprivate mutex predicate '?protected thread thread'?end Thermostatclass NetworkTypesstatic public type nodeType'nodeTypestatic public type correction'correctionend NetworkTypesclass CPUpublic explicit operation CPU((<FCFS> | <FP>), real)'((<FCFS> | <FP>) * real ==> CPU)public explicit operation deploy(?)'(? ==> ())public explicit operation deploy(?, seq of (char))'(? * seq of (char) ==> ())public explicit operation setPriority(?, nat)'(? * nat ==> ())end CPUclass BUSpublic explicit operation BUS((<CSMACD> | <FCFS>), real, set of (CPU))'((<CSMACD> | <FCFS>) * real * set of (CPU) ==> BUS)end BUS

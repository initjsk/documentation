WARNING:TransportPlan.vdmrt:5001:10,19:Instance variable 'totalFee' is not initialized
WARNING:CyberRail.vdmrt:5000:206,26:Definition 'id_Route' not used
WARNING:TokenDevice.vdmrt:5001:11,20:Instance variable 'q_Env_out' is not initialized
WARNING:TokenDevice.vdmrt:5001:12,20:Instance variable 'q_APM_out' is not initialized
WARNING:RailwayGrid.vdmrt:5008:61,13:grid at 9'9 hidden by grid
WARNING:CyberRail.vdmrt:5001:14,18:Instance variable 'q_APM_out' is not initialized
WARNING:Company.vdmrt:5000:31,36:Definition 'tid' not used
WARNING:CyberRail.vdmrt:5000:49,45:Definition 'tokenDevice' not used
WARNING:Company.vdmrt:5001:9,20:Instance variable 'cyberrail' is not initialized
WARNING:Company.vdmrt:5000:31,32:Definition 'nav' not used
WARNING:ActivePlanManager.vdmrt:5000:88,27:Definition 'plan' not used
WARNING:TransportPlan.vdmrt:5001:11,24:Instance variable 'totalDuration' is not initialized
WARNING:CyberRail.vdmrt:5001:13,16:Instance variable 'railway' is not initialized
WARNING:Customer.vdmrt:5000:48,28:Definition 'curtime' not used
WARNING:ActivePlanManager.vdmrt:5001:22,21:Instance variable 'tokenDevices' is not initialized
WARNING:ActivePlanManager.vdmrt:5001:20,17:Instance variable 'q_CR_out' is not initialized
WARNING:RailwayGrid.vdmrt:5008:114,16:grid at 9'9 hidden by grid
WARNING:Customer.vdmrt:5001:8,18:Instance variable 'cyberrail' is not initialized
WARNING:CyberRail.vdmrt:5006:71,8:Statement will not be reached
RESULT:result:-1:-1,-1:class MessageTypesstatic public type REQUESTPLAN'REQUESTPLANstatic public type RETURNPLAN'RETURNPLANstatic public type CALCPLAN'CALCPLANstatic public type INACTIVEROUTE'INACTIVEROUTEstatic public type ACTIVEROUTE'ACTIVEROUTEstatic public type ADDROUTE'ADDROUTEstatic public type REMOVEROUTE'REMOVEROUTEstatic public type STRATEGYINIT'STRATEGYINITstatic public type STRATEGYEND'STRATEGYENDstatic public type STRATEGYNOTIFY'STRATEGYNOTIFYstatic public type MessageT'MessageTend MessageTypesclass SNW is subclass of Strategyprivate instance variable state'Statestatic public type State'Stateprivate explicit operation strategyInit()'(() ==> ())private explicit operation strategyNotify()'(() ==> ())private explicit operation strategyEnd()'(() ==> ())private explicit operation handleEvents(ActivePlanManager)'(ActivePlanManager ==> ())end SNWclass Company is subclass of Environmentprivate instance variable cyberrail'CyberRailpublic explicit operation Company(seq of (char))'(seq of (char) ==> Company)public explicit operation composeTransportGrid()'(() ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation stimulate()'(() ==> ())protected thread thread'?private permission predicate 'boolend Companyclass ActivePlanManager is subclass of Strategyprivate instance variable activeTokens'inmap of (TokenDevice) to (TransportPlan)private invariant inv_ActivePlanManager'boolprivate instance variable busy'boolprivate instance variable q_CR_out'CyberRailprivate instance variable tokenDevices'set of (TokenDevice)private instance variable q_Tok_in'seq of (MessageT)private instance variable q_CR_in'seq of (MessageT)private instance variable q_Tok_out'seq of (TransportPlan)private instance variable state'Statestatic public type State'Stateprivate explicit operation strategyInit()'(() ==> ())private explicit operation strategyNotify()'(() ==> ())private explicit operation strategyEnd()'(() ==> ())public explicit operation ActivePlanManager()'(() ==> ActivePlanManager)public explicit operation isFinished()'(() ==> ())public explicit operation inactiveRoute(nat)'(nat ==> ())public explicit operation addTransportPlan(TransportPlan, TokenDevice)'(TransportPlan * TokenDevice ==> ())public explicit operation removeTransportPlan(TransportPlan, TokenDevice)'(TransportPlan * TokenDevice ==> ())public explicit operation getPlans()'(() ==> set of (TransportPlan))public explicit operation handleEvent()'(() ==> ())private explicit operation handleQ_Tok_out()'(() ==> ())private explicit operation handleQ_CR_in()'(() ==> ())private explicit operation handleQ_Tok_in()'(() ==> ())private explicit operation handleStrategyInit()'(() ==> ())private explicit operation handleStrategyEnd()'(() ==> ())private explicit operation handleInactiveRoute(MessageT)'(MessageT ==> ())private explicit operation handleTransportPlan(MessageT)'(MessageT ==> ())private explicit operation handleRequestPlan(MessageT)'(MessageT ==> ())private explicit operation reduce_Q_Tok()'(() ==> ())private explicit operation reduce_Q_CR()'(() ==> ())public explicit operation setQ_CR_out(CyberRail)'(CyberRail ==> ())public explicit operation addToSystemQueue(MessageT)'(MessageT ==> ())async public explicit operation addToClientQueue(MessageT)'(MessageT ==> ())protected thread thread'?private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end ActivePlanManagerclass CyberRailprivate instance variable normalState'boolprivate instance variable curtime'natprivate instance variable railway'RailwayGridprivate instance variable q_APM_out'ActivePlanManagerprivate instance variable q_Env_in'seq of (MessageT)private instance variable q_APM_in'seq of (MessageT)private instance variable busy'boolprivate instance variable timeout'natstatic public type NavigationInput'NavigationInputstatic public type String'Stringstatic public type Choice'Choicepublic explicit operation setRailwayGrid(RailwayGrid)'(RailwayGrid ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation calculateTransportPlan(NavigationInput, TokenDevice)'(NavigationInput * TokenDevice ==> [DTO])public explicit operation setActiveRoute(nat)'(nat ==> ())private explicit operation findCheapest(Grid)'(Grid ==> [seq of (Route)])private explicit operation findQuickest(Grid)'(Grid ==> [seq of (Route)])public explicit operation setQ_APM_out(ActivePlanManager)'(ActivePlanManager ==> ())async public explicit operation addToStimuliQueue(MessageT)'(MessageT ==> ())public explicit operation addToSystemQueue(MessageT)'(MessageT ==> ())public explicit operation handleEvents()'(() ==> ())private explicit operation handleQ_Env_in()'(() ==> ())private explicit operation handleQ_APM_in()'(() ==> ())private explicit operation handleCalcPlan(NavigationInput, TokenDevice)'(NavigationInput * TokenDevice ==> ())private explicit operation handleInactiveRoute(MessageT)'(MessageT ==> ())private explicit operation finalizeInactiveRoute()'(() ==> ())public explicit operation setInactiveRoute(nat)'(nat ==> ())private explicit operation reduce_Q_APM()'(() ==> ())private explicit operation reduce_Q_Env()'(() ==> ())protected thread thread'?private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end CyberRailclass CRSystemprivate instance variable cpu1'CPUprivate instance variable cpu3'CPUprivate instance variable cpu4'CPUprivate instance variable cpu5'CPUprivate instance variable cpu6'CPUprivate instance variable cpu7'CPUprivate instance variable cpu8'CPUprivate instance variable cpu9'CPUprivate instance variable cpu10'CPUprivate instance variable cpu11'CPUprivate instance variable cpu12'CPUprivate instance variable cpu2'CPUprivate instance variable bus1'BUSprivate instance variable bus2'BUSprivate instance variable bus3'BUSprivate instance variable bus4'BUSprivate instance variable bus5'BUSprivate instance variable bus6'BUSprivate instance variable bus7'BUSprivate instance variable bus8'BUSprivate instance variable bus9'BUSprivate instance variable bus10'BUSprivate instance variable bus12'BUSstatic public instance variable tok1'TokenDevicestatic public instance variable tok2'TokenDevicestatic public instance variable tok3'TokenDevicestatic public instance variable tok4'TokenDevicestatic public instance variable tok5'TokenDevicestatic public instance variable tok6'TokenDevicestatic public instance variable tok7'TokenDevicestatic public instance variable tok8'TokenDevicestatic public instance variable tok9'TokenDevicestatic public instance variable tok10'TokenDevicestatic public instance variable cb'CyberRailstatic public instance variable apm'ActivePlanManagerstatic public instance variable grid'RailwayGridprivate explicit operation CRSystem()'(() ==> CRSystem)end CRSystemclass Environmentstatic public type outline'outlinestatic public type inline'inlineprotected instance variable io'IOprotected instance variable outfileName'seq of (char)protected instance variable outlines'seq of (outline)protected instance variable inlines'seq of (inline)protected instance variable busy'boolpublic explicit operation stimulate()'(() ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation respons([TransportPlan], [Route], nat)'([TransportPlan] * [Route] * nat ==> ())public explicit operation showResults()'(() ==> ())public explicit operation Environment(seq of (char))'(seq of (char) ==> Environment)private mutex predicate '?private mutex predicate '?protected thread thread'?end Environmentclass Loggerstatic public type logType'logTypestatic public type TP'TPstatic public type Fnc'Fncstatic public instance variable log'seq of (logType)static public explicit operation writeTransportPlan(TransportPlan)'(TransportPlan ==> ())static public explicit operation writeFnc(String)'(String ==> ())static public explicit operation write(logType)'(logType ==> ())static public explicit operation flush()'(() ==> ())static public explicit operation printLog()'(() ==> seq of (logType))private mutex predicate '?end Loggerclass MessageQueueprivate instance variable queue'seq of (Message)private instance variable size'natstatic public type String'Stringstatic public type FunctionType'FunctionTypestatic public type ParamType'ParamTypestatic public type Message'Messagepublic explicit operation MessageQueue(nat)'(nat ==> MessageQueue)public explicit operation push(Message)'(Message ==> ())public explicit operation pop()'(() ==> Message)private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?end MessageQueueclass RailwayGridprivate instance variable routeList'set of (Route)private instance variable grid'Gridprivate instance variable inactiveGrid'Gridprivate instance variable inactiveRouteID'set of (Route)private instance variable io'IOstatic public type String'Stringstatic public type Plan'Planstatic public type Grid'Gridpublic explicit operation RailwayGrid()'(() ==> RailwayGrid)private explicit operation recAlgo(Grid, Plan, String)'(Grid * Plan * String ==> Grid)public explicit operation getGrid()'(() ==> Grid)public explicit operation setInactiveRoute(nat)'(nat ==> ())public explicit operation test()'(() ==> ())private explicit operation writef(Grid)'(Grid ==> ())end RailwayGridclass Strategyprivate explicit operation strategyInit()'(() ==> ())private explicit operation strategyNotify()'(() ==> ())private explicit operation strategyEnd()'(() ==> ())private explicit operation handleEvents()'(() ==> ())end Strategyclass TransportPlanprivate instance variable id_token'natprivate instance variable totalFee'realprivate instance variable totalDuration'natprivate instance variable choice'Choicepublic instance variable routeList'seq of (Route)private instance variable routesTravled'seq of (Route)private invariant inv_TransportPlan'boolstatic public type Route'Routestatic public type DTO'DTOpublic explicit operation TransportPlan(seq of (Route), Choice, nat)'(seq of (Route) * Choice * nat ==> TransportPlan)public explicit operation getNextRoute()'(() ==> Route)public explicit operation containsRoute(nat)'(nat ==> bool)public explicit operation addRoute(Route)'(Route ==> ())public explicit operation routeTraveled()'(() ==> ())public explicit operation routesRemaining()'(() ==> nat)public explicit operation getByValue()'(() ==> DTO)public explicit operation getPlanAsNaviInput()'(() ==> NavigationInput)public explicit operation getTokenId()'(() ==> nat)public explicit operation getRouteList()'(() ==> seq of (Route))private mutex predicate '?end TransportPlanclass Worldprotected instance variable envCustomer'[Customer]public explicit operation World(seq of (char))'(seq of (char) ==> World)public explicit operation test()'(() ==> TokenDevice)public explicit operation run()'(() ==> seq of (logType))end Worldclass Customer is subclass of Environmentstatic public instance variable tokenDevices'map (nat) to (TokenDevice)private instance variable cyberrail'CyberRailpublic explicit operation Customer(seq of (char))'(seq of (char) ==> Customer)public explicit operation Customer()'(() ==> Customer)public explicit operation addCyberRail(CyberRail)'(CyberRail ==> ())public explicit operation addTokenDevice(TokenDevice)'(TokenDevice ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation test()'(() ==> map (nat) to (TokenDevice))public explicit operation stimulate()'(() ==> ())private explicit operation isDone()'(() ==> ())private explicit operation reduceInline()'(() ==> ())private explicit operation inputStimuli()'(() ==> ())protected thread thread'?private mutex predicate '?private mutex predicate '?private mutex predicate '?private permission predicate 'boolend Customerclass TokenDeviceprivate instance variable id_token'natprivate instance variable transportPlan'[TransportPlan]private instance variable q_Env_out'Environmentprivate instance variable q_APM_out'ActivePlanManagerpublic explicit operation TokenDevice(nat)'(nat ==> TokenDevice)public explicit operation notifyPassenger(TransportPlan)'(TransportPlan ==> ())public explicit operation requestTransportPlan(NavigationInput)'(NavigationInput ==> ())public explicit operation getTokenId()'(() ==> nat)public explicit operation routeTraveled()'(() ==> ())public explicit operation setTransportPlan(TransportPlan)'(TransportPlan ==> ())public explicit operation travel()'(() ==> ())public explicit operation onTheRoad()'(() ==> ())public explicit operation isFinished()'(() ==> ())public explicit operation setQ_Env_out(Environment)'(Environment ==> ())public explicit operation setQ_APM_out(ActivePlanManager)'(ActivePlanManager ==> ())protected thread thread'?private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?end TokenDeviceclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass CPUpublic explicit operation CPU((<FCFS> | <FP>), real)'((<FCFS> | <FP>) * real ==> CPU)public explicit operation deploy(?)'(? ==> ())public explicit operation deploy(?, seq of (char))'(? * seq of (char) ==> ())public explicit operation setPriority(?, nat)'(? * nat ==> ())end CPUclass BUSpublic explicit operation BUS((<CSMACD> | <FCFS>), real, set of (CPU))'((<CSMACD> | <FCFS>) * real * set of (CPU) ==> BUS)end BUS

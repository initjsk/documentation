RESULT:result:-1:-1,-1:class TransportPlanprivate instance variable id_token'natprivate instance variable totalFee'realprivate instance variable totalDuration'natprivate instance variable choice'(unresolved CyberRail`Choice)public instance variable routeList'seq of ((unresolved TransportPlan`Route))private instance variable routesTravled'seq of ((unresolved TransportPlan`Route))private invariant inv_TransportPlan'boolstatic public type Route'Routestatic public type DTO'DTOpublic explicit operation TransportPlan'(seq of ((unresolved TransportPlan`Route)) * (unresolved CyberRail`Choice) * nat ==> (unresolved TransportPlan`TransportPlan))public explicit operation getNextRoute'(() ==> (unresolved TransportPlan`Route))public explicit operation containsRoute'(nat ==> bool)public explicit operation addRoute'((unresolved TransportPlan`Route) ==> ())public explicit operation routeTraveled'(() ==> ())public explicit operation routesRemaining'(() ==> nat)public explicit operation getByValue'(() ==> (unresolved TransportPlan`DTO))public explicit operation getPlanAsNaviInput'(() ==> (unresolved CyberRail`NavigationInput))public explicit operation getTokenId'(() ==> nat)public explicit operation getRouteList'(() ==> seq of ((unresolved TransportPlan`Route)))private mutex predicate '?end TransportPlanclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval'(@p -> bool)static public explicit function fwriteval'(seq1 of (char) * @p * (unresolved IO`filedirective) -> bool)static public explicit function freadval'(seq1 of (char) -> (bool * [@p]))public explicit operation echo'(seq of (char) ==> bool)public explicit operation fecho'(seq of (char) * seq of (char) * [(unresolved IO`filedirective)] ==> bool)public explicit operation ferror'(() ==> seq of (char))static public explicit operation print'(? ==> ())static public explicit operation println'(? ==> ())static public explicit operation printf'(seq of (char) * seq of (?) ==> ())end IOclass SNW is subclass of Strategyprivate instance variable state'(unresolved SNW`State)static public type State'Stateprivate explicit operation strategyInit'(() ==> ())private explicit operation strategyNotify'(() ==> ())private explicit operation strategyEnd'(() ==> ())private explicit operation handleEvents'((unresolved SNW`ActivePlanManager) ==> ())end SNWclass Loggerstatic public type logType'logTypestatic public type TP'TPstatic public type Fnc'Fncstatic public instance variable log'seq of ((unresolved Logger`logType))static public explicit operation writeTransportPlan'((unresolved Logger`TransportPlan) ==> ())static public explicit operation writeFnc'((unresolved CyberRail`String) ==> ())static public explicit operation write'((unresolved Logger`logType) ==> ())static public explicit operation flush'(() ==> ())static public explicit operation printLog'(() ==> seq of ((unresolved Logger`logType)))private mutex predicate '?end Loggerclass Strategyprivate explicit operation strategyInit'(() ==> ())private explicit operation strategyNotify'(() ==> ())private explicit operation strategyEnd'(() ==> ())private explicit operation handleEvents'(() ==> ())end Strategyclass TokenDeviceprivate instance variable id_token'natprivate instance variable transportPlan'[(unresolved TokenDevice`TransportPlan)]private instance variable q_Env_out'(unresolved TokenDevice`Environment)private instance variable q_APM_out'(unresolved TokenDevice`ActivePlanManager)public explicit operation TokenDevice'(nat ==> (unresolved TokenDevice`TokenDevice))public explicit operation notifyPassenger'((unresolved TokenDevice`TransportPlan) ==> ())public explicit operation requestTransportPlan'((unresolved CyberRail`NavigationInput) ==> ())public explicit operation getTokenId'(() ==> nat)public explicit operation routeTraveled'(() ==> ())public explicit operation setTransportPlan'((unresolved TokenDevice`TransportPlan) ==> ())public explicit operation travel'(() ==> ())public explicit operation onTheRoad'(() ==> ())public explicit operation isFinished'(() ==> ())public explicit operation setQ_Env_out'((unresolved TokenDevice`Environment) ==> ())public explicit operation setQ_APM_out'((unresolved TokenDevice`ActivePlanManager) ==> ())protected thread null'?private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?end TokenDeviceclass MessageTypesstatic public type REQUESTPLAN'REQUESTPLANstatic public type RETURNPLAN'RETURNPLANstatic public type CALCPLAN'CALCPLANstatic public type INACTIVEROUTE'INACTIVEROUTEstatic public type ACTIVEROUTE'ACTIVEROUTEstatic public type ADDROUTE'ADDROUTEstatic public type REMOVEROUTE'REMOVEROUTEstatic public type STRATEGYINIT'STRATEGYINITstatic public type STRATEGYEND'STRATEGYENDstatic public type STRATEGYNOTIFY'STRATEGYNOTIFYstatic public type MessageT'MessageTend MessageTypesclass Customer is subclass of Environmentstatic public instance variable tokenDevices'map (nat) to ((unresolved Customer`TokenDevice))private instance variable cyberrail'(unresolved Customer`CyberRail)public explicit operation Customer'(seq of (char) ==> (unresolved Customer`Customer))public explicit operation Customer'(() ==> (unresolved Customer`Customer))public explicit operation addCyberRail'((unresolved Customer`CyberRail) ==> ())public explicit operation addTokenDevice'((unresolved Customer`TokenDevice) ==> ())public explicit operation isFinished'(() ==> ())public explicit operation test'(() ==> map (nat) to ((unresolved Customer`TokenDevice)))public explicit operation stimulate'(() ==> ())private explicit operation isDone'(() ==> ())private explicit operation reduceInline'(() ==> ())private explicit operation inputStimuli'(() ==> ())protected thread null'?private mutex predicate '?private mutex predicate '?private mutex predicate '?private permission predicate 'boolend Customerclass RailwayGridprivate instance variable routeList'set of ((unresolved TransportPlan`Route))private instance variable grid'(unresolved RailwayGrid`Grid)private instance variable inactiveGrid'(unresolved RailwayGrid`Grid)private instance variable inactiveRouteID'set of ((unresolved TransportPlan`Route))private instance variable io'(unresolved RailwayGrid`IO)static public type String'Stringstatic public type Plan'Planstatic public type Grid'Gridpublic explicit operation RailwayGrid'(() ==> (unresolved RailwayGrid`RailwayGrid))private explicit operation recAlgo'((unresolved RailwayGrid`Grid) * (unresolved RailwayGrid`Plan) * (unresolved RailwayGrid`String) ==> (unresolved RailwayGrid`Grid))public explicit operation getGrid'(() ==> (unresolved RailwayGrid`Grid))public explicit operation setInactiveRoute'(nat ==> ())public explicit operation test'(() ==> ())private explicit operation writef'((unresolved RailwayGrid`Grid) ==> ())end RailwayGridclass Environmentstatic public type outline'outlinestatic public type inline'inlineprotected instance variable io'(unresolved Environment`IO)protected instance variable outfileName'seq of (char)protected instance variable outlines'seq of ((unresolved Environment`outline))protected instance variable inlines'seq of ((unresolved Environment`inline))protected instance variable busy'boolpublic explicit operation stimulate'(() ==> ())public explicit operation isFinished'(() ==> ())public explicit operation respons'([(unresolved Environment`TransportPlan)] * [(unresolved TransportPlan`Route)] * nat ==> ())public explicit operation showResults'(() ==> ())public explicit operation Environment'(seq of (char) ==> (unresolved Environment`Environment))private mutex predicate '?private mutex predicate '?protected thread null'?end Environmentclass Worldprotected instance variable envCustomer'[(unresolved World`Customer)]public explicit operation World'(seq of (char) ==> (unresolved World`World))public explicit operation test'(() ==> (unresolved World`TokenDevice))public explicit operation run'(() ==> seq of ((unresolved Logger`logType)))end Worldclass CyberRailprivate instance variable normalState'boolprivate instance variable curtime'natprivate instance variable railway'(unresolved CyberRail`RailwayGrid)private instance variable q_APM_out'(unresolved CyberRail`ActivePlanManager)private instance variable q_Env_in'seq of ((unresolved MessageTypes`MessageT))private instance variable q_APM_in'seq of ((unresolved MessageTypes`MessageT))private instance variable busy'boolprivate instance variable timeout'natstatic public type NavigationInput'NavigationInputstatic public type String'Stringstatic public type Choice'Choicepublic explicit operation setRailwayGrid'((unresolved CyberRail`RailwayGrid) ==> ())public explicit operation isFinished'(() ==> ())public explicit operation calculateTransportPlan'((unresolved CyberRail`NavigationInput) * (unresolved CyberRail`TokenDevice) ==> [(unresolved TransportPlan`DTO)])public explicit operation setActiveRoute'(nat ==> ())private explicit operation findCheapest'((unresolved RailwayGrid`Grid) ==> [seq of ((unresolved TransportPlan`Route))])private explicit operation findQuickest'((unresolved RailwayGrid`Grid) ==> [seq of ((unresolved TransportPlan`Route))])public explicit operation setQ_APM_out'((unresolved CyberRail`ActivePlanManager) ==> ())async public explicit operation addToStimuliQueue'((unresolved MessageTypes`MessageT) ==> ())public explicit operation addToSystemQueue'((unresolved MessageTypes`MessageT) ==> ())public explicit operation handleEvents'(() ==> ())private explicit operation handleQ_Env_in'(() ==> ())private explicit operation handleQ_APM_in'(() ==> ())private explicit operation handleCalcPlan'((unresolved CyberRail`NavigationInput) * (unresolved CyberRail`TokenDevice) ==> ())private explicit operation handleInactiveRoute'((unresolved MessageTypes`MessageT) ==> ())private explicit operation finalizeInactiveRoute'(() ==> ())public explicit operation setInactiveRoute'(nat ==> ())private explicit operation reduce_Q_APM'(() ==> ())private explicit operation reduce_Q_Env'(() ==> ())protected thread null'?private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end CyberRailclass Company is subclass of Environmentprivate instance variable cyberrail'(unresolved Company`CyberRail)public explicit operation Company'(seq of (char) ==> (unresolved Company`Company))public explicit operation composeTransportGrid'(() ==> ())public explicit operation isFinished'(() ==> ())public explicit operation stimulate'(() ==> ())protected thread null'?private permission predicate 'boolend Companyclass MessageQueueprivate instance variable queue'seq of ((unresolved MessageQueue`Message))private instance variable size'natstatic public type String'Stringstatic public type FunctionType'FunctionTypestatic public type ParamType'ParamTypestatic public type Message'Messagepublic explicit operation MessageQueue'(nat ==> (unresolved MessageQueue`MessageQueue))public explicit operation push'((unresolved MessageQueue`Message) ==> ())public explicit operation pop'(() ==> (unresolved MessageQueue`Message))private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?end MessageQueueclass ActivePlanManager is subclass of Strategyprivate instance variable activeTokens'inmap of ((unresolved ActivePlanManager`TokenDevice)) to ((unresolved ActivePlanManager`TransportPlan))private invariant inv_ActivePlanManager'boolprivate instance variable busy'boolprivate instance variable q_CR_out'(unresolved ActivePlanManager`CyberRail)private instance variable tokenDevices'set of ((unresolved ActivePlanManager`TokenDevice))private instance variable q_Tok_in'seq of ((unresolved MessageTypes`MessageT))private instance variable q_CR_in'seq of ((unresolved MessageTypes`MessageT))private instance variable q_Tok_out'seq of ((unresolved ActivePlanManager`TransportPlan))private instance variable state'(unresolved ActivePlanManager`State)static public type State'Stateprivate explicit operation strategyInit'(() ==> ())private explicit operation strategyNotify'(() ==> ())private explicit operation strategyEnd'(() ==> ())public explicit operation ActivePlanManager'(() ==> (unresolved ActivePlanManager`ActivePlanManager))public explicit operation isFinished'(() ==> ())public explicit operation inactiveRoute'(nat ==> ())public explicit operation addTransportPlan'((unresolved ActivePlanManager`TransportPlan) * (unresolved ActivePlanManager`TokenDevice) ==> ())public explicit operation removeTransportPlan'((unresolved ActivePlanManager`TransportPlan) * (unresolved ActivePlanManager`TokenDevice) ==> ())public explicit operation getPlans'(() ==> set of ((unresolved ActivePlanManager`TransportPlan)))public explicit operation handleEvent'(() ==> ())private explicit operation handleQ_Tok_out'(() ==> ())private explicit operation handleQ_CR_in'(() ==> ())private explicit operation handleQ_Tok_in'(() ==> ())private explicit operation handleStrategyInit'(() ==> ())private explicit operation handleStrategyEnd'(() ==> ())private explicit operation handleInactiveRoute'((unresolved MessageTypes`MessageT) ==> ())private explicit operation handleTransportPlan'((unresolved MessageTypes`MessageT) ==> ())private explicit operation handleRequestPlan'((unresolved MessageTypes`MessageT) ==> ())private explicit operation reduce_Q_Tok'(() ==> ())private explicit operation reduce_Q_CR'(() ==> ())public explicit operation setQ_CR_out'((unresolved ActivePlanManager`CyberRail) ==> ())public explicit operation addToSystemQueue'((unresolved MessageTypes`MessageT) ==> ())async public explicit operation addToClientQueue'((unresolved MessageTypes`MessageT) ==> ())protected thread null'?private permission predicate 'boolprivate permission predicate 'boolprivate mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?private mutex predicate '?end ActivePlanManagerclass CRSystemprivate instance variable cpu1'(unresolved CRSystem`CPU)private instance variable cpu3'(unresolved CRSystem`CPU)private instance variable cpu4'(unresolved CRSystem`CPU)private instance variable cpu5'(unresolved CRSystem`CPU)private instance variable cpu6'(unresolved CRSystem`CPU)private instance variable cpu7'(unresolved CRSystem`CPU)private instance variable cpu8'(unresolved CRSystem`CPU)private instance variable cpu9'(unresolved CRSystem`CPU)private instance variable cpu10'(unresolved CRSystem`CPU)private instance variable cpu11'(unresolved CRSystem`CPU)private instance variable cpu12'(unresolved CRSystem`CPU)private instance variable cpu2'(unresolved CRSystem`CPU)private instance variable bus1'(unresolved CRSystem`BUS)private instance variable bus2'(unresolved CRSystem`BUS)private instance variable bus3'(unresolved CRSystem`BUS)private instance variable bus4'(unresolved CRSystem`BUS)private instance variable bus5'(unresolved CRSystem`BUS)private instance variable bus6'(unresolved CRSystem`BUS)private instance variable bus7'(unresolved CRSystem`BUS)private instance variable bus8'(unresolved CRSystem`BUS)private instance variable bus9'(unresolved CRSystem`BUS)private instance variable bus10'(unresolved CRSystem`BUS)private instance variable bus12'(unresolved CRSystem`BUS)static public instance variable tok1'(unresolved CRSystem`TokenDevice)static public instance variable tok2'(unresolved CRSystem`TokenDevice)static public instance variable tok3'(unresolved CRSystem`TokenDevice)static public instance variable tok4'(unresolved CRSystem`TokenDevice)static public instance variable tok5'(unresolved CRSystem`TokenDevice)static public instance variable tok6'(unresolved CRSystem`TokenDevice)static public instance variable tok7'(unresolved CRSystem`TokenDevice)static public instance variable tok8'(unresolved CRSystem`TokenDevice)static public instance variable tok9'(unresolved CRSystem`TokenDevice)static public instance variable tok10'(unresolved CRSystem`TokenDevice)static public instance variable cb'(unresolved CRSystem`CyberRail)static public instance variable apm'(unresolved CRSystem`ActivePlanManager)static public instance variable grid'(unresolved CRSystem`RailwayGrid)private explicit operation CRSystem'(() ==> (unresolved CRSystem`CRSystem))end CRSystem

WARNING:BasicTask.vdmrt:5000:9,15:Definition 'e' not used
RESULT:result:-1:-1,-1:class MMIHandleKeyPressTwo is subclass of BasicTaskpublic explicit operation MMIHandleKeyPressTwo(EventDispatcher)'(EventDispatcher ==> MMIHandleKeyPressTwo)public explicit operation HandleKeyPress()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end MMIHandleKeyPressTwoclass EventDispatcher is subclass of Loggerprivate instance variable queues'map (seq of (char)) to (AbstractTask)private instance variable messages'seq of (AbstractTaskEvent)private instance variable interrupts'seq of (AbstractTaskEvent)public explicit operation Register(AbstractTask)'(AbstractTask ==> ())private explicit operation setEvent(AbstractTask, Event)'(AbstractTask * Event ==> ())private explicit operation getEvent()'(() ==> (AbstractTask * Event))public explicit operation SendNetwork(seq of (char), seq of (char), nat)'(seq of (char) * seq of (char) * nat ==> ())public explicit operation SendInterrupt(seq of (char), seq of (char), nat)'(seq of (char) * seq of (char) * nat ==> ())protected thread thread'?private mutex predicate '?private permission predicate 'boolend EventDispatcherclass MMIUpdateScreenTMC is subclass of BasicTaskpublic explicit operation MMIUpdateScreenTMC(EventDispatcher)'(EventDispatcher ==> MMIUpdateScreenTMC)public explicit operation UpdateScreen()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end MMIUpdateScreenTMCclass NavigationDatabaseLookup is subclass of BasicTaskpublic explicit operation NavigationDatabaseLookup(EventDispatcher)'(EventDispatcher ==> NavigationDatabaseLookup)public explicit operation DatabaseLookup()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end NavigationDatabaseLookupclass IOstatic public type filedirective'filedirectivestatic public explicit function writeval(@p)'(@p -> bool)static public explicit function fwriteval(seq1 of (char), @p, filedirective)'(seq1 of (char) * @p * filedirective -> bool)static public explicit function freadval(seq1 of (char))'(seq1 of (char) -> (bool * [@p]))public explicit operation echo(seq of (char))'(seq of (char) ==> bool)public explicit operation fecho(seq of (char), seq of (char), [filedirective])'(seq of (char) * seq of (char) * [filedirective] ==> bool)public explicit operation ferror()'(() ==> seq of (char))static public explicit operation print(?)'(? ==> ())static public explicit operation println(?)'(? ==> ())static public explicit operation printf(seq of (char), seq of (?))'(seq of (char) * seq of (?) ==> ())end IOclass AbstractTaskprivate instance variable name'seq of (char)private instance variable events'seq of (NetworkEvent)private instance variable interrupts'seq of (InterruptEvent)private instance variable dispatcher'EventDispatcherpublic explicit operation AbstractTask(seq of (char), EventDispatcher)'(seq of (char) * EventDispatcher ==> AbstractTask)public explicit operation getName()'(() ==> seq of (char))public explicit operation setEvent(Event)'(Event ==> ())protected explicit operation getEvent()'(() ==> Event)protected explicit operation sendMessage(seq of (char), nat)'(seq of (char) * nat ==> ())protected explicit operation raiseInterrupt(seq of (char), nat)'(seq of (char) * nat ==> ())private mutex predicate '?private permission predicate 'boolend AbstractTaskclass Loggerstatic private instance variable io'IOstatic private instance variable mode'(<append> | <start>)public explicit operation printNetworkEvent(seq of (char), seq of (char), nat)'(seq of (char) * seq of (char) * nat ==> ())public explicit operation printInterruptEvent(seq of (char), seq of (char), nat)'(seq of (char) * seq of (char) * nat ==> ())end Loggerclass BasicTask is subclass of AbstractTaskpublic explicit operation BasicTask(seq of (char), EventDispatcher)'(seq of (char) * EventDispatcher ==> BasicTask)protected explicit operation handleEvent(Event)'(Event ==> ())protected thread thread'?end BasicTaskclass NetworkEvent is subclass of Eventpublic explicit operation NetworkEvent(nat)'(nat ==> NetworkEvent)end NetworkEventclass Eventprivate instance variable val'natpublic explicit operation Event(nat)'(nat ==> Event)public explicit operation getEvent()'(() ==> nat)end Eventclass EnvironmentTask is subclass of AbstractTaskstatic private instance variable num'natprotected instance variable max_stimuli'natprotected instance variable e2s'map (nat) to (nat)protected instance variable s2e'map (nat) to (nat)public explicit function checkResponseTimes(map (nat) to (nat), map (nat) to (nat), nat)'(map (nat) to (nat) * map (nat) to (nat) * nat -> bool)public explicit operation EnvironmentTask(seq of (char), EventDispatcher, nat)'(seq of (char) * EventDispatcher * nat ==> EnvironmentTask)protected explicit operation handleEvent(Event)'(Event ==> ())public explicit operation getNum()'(() ==> nat)public explicit operation setEvent(Event)'(Event ==> ())public explicit operation Run()'(() ==> ())public explicit operation logEnvToSys(nat)'(nat ==> ())public explicit operation logSysToEnv(nat)'(nat ==> ())public explicit operation getMinMaxAverage()'(() ==> (nat * nat * real))private mutex predicate '?private mutex predicate '?private mutex predicate '?private permission predicate 'boolend EnvironmentTaskclass MMIUpdateScreenVolume is subclass of BasicTaskpublic explicit operation MMIUpdateScreenVolume(EventDispatcher)'(EventDispatcher ==> MMIUpdateScreenVolume)public explicit operation UpdateScreen()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end MMIUpdateScreenVolumeclass RadNavSysstatic public type perfdata'perfdataprivate instance variable dispatch'EventDispatcherprivate instance variable appTasks'set of (BasicTask)private instance variable envTasks'map (seq of (char)) to (EnvironmentTask)private instance variable mode'natpublic explicit operation RadNavSys()'(() ==> RadNavSys)public explicit operation RadNavSys(nat)'(nat ==> RadNavSys)private explicit operation addApplicationTask(BasicTask)'(BasicTask ==> ())private explicit operation addEnvironmentTask(EnvironmentTask)'(EnvironmentTask ==> ())public explicit operation Run()'(() ==> map (seq of (char)) to (perfdata))end RadNavSysclass VolumeKnob is subclass of EnvironmentTaskpublic explicit operation VolumeKnob(EventDispatcher, nat)'(EventDispatcher * nat ==> VolumeKnob)protected explicit operation handleEvent(Event)'(Event ==> ())private explicit operation createSignal()'(() ==> ())public explicit operation Run()'(() ==> ())protected thread thread'?end VolumeKnobclass RadioHandleTMC is subclass of BasicTaskpublic explicit operation RadioHandleTMC(EventDispatcher)'(EventDispatcher ==> RadioHandleTMC)public explicit operation HandleTMC()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end RadioHandleTMCclass TransmitTMC is subclass of EnvironmentTaskpublic explicit operation TransmitTMC(EventDispatcher, nat)'(EventDispatcher * nat ==> TransmitTMC)protected explicit operation handleEvent(Event)'(Event ==> ())private explicit operation createSignal()'(() ==> ())public explicit operation Run()'(() ==> ())protected thread thread'?end TransmitTMCclass AbstractTaskEventprivate instance variable abstask'AbstractTaskprivate instance variable ev'Eventpublic explicit operation AbstractTaskEvent(AbstractTask, Event)'(AbstractTask * Event ==> AbstractTaskEvent)public explicit operation getFields()'(() ==> (AbstractTask * Event))end AbstractTaskEventclass NavigationDecodeTMC is subclass of BasicTaskpublic explicit operation NavigationDecodeTMC(EventDispatcher)'(EventDispatcher ==> NavigationDecodeTMC)public explicit operation DecodeTMC()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end NavigationDecodeTMCclass InsertAddress is subclass of EnvironmentTaskpublic explicit operation InsertAddress(EventDispatcher, nat)'(EventDispatcher * nat ==> InsertAddress)protected explicit operation handleEvent(Event)'(Event ==> ())private explicit operation createSignal()'(() ==> ())public explicit operation Run()'(() ==> ())protected thread thread'?end InsertAddressclass MMIHandleKeyPressOne is subclass of BasicTaskpublic explicit operation MMIHandleKeyPressOne(EventDispatcher)'(EventDispatcher ==> MMIHandleKeyPressOne)public explicit operation HandleKeyPress()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end MMIHandleKeyPressOneclass RadioAdjustVolume is subclass of BasicTaskpublic explicit operation RadioAdjustVolume(EventDispatcher)'(EventDispatcher ==> RadioAdjustVolume)public explicit operation AdjustVolume()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end RadioAdjustVolumeclass MMIUpdateScreenAddress is subclass of BasicTaskpublic explicit operation MMIUpdateScreenAddress(EventDispatcher)'(EventDispatcher ==> MMIUpdateScreenAddress)public explicit operation UpdateScreen()'(() ==> ())protected explicit operation handleEvent(Event)'(Event ==> ())end MMIUpdateScreenAddressclass InterruptEvent is subclass of Eventpublic explicit operation InterruptEvent(nat)'(nat ==> InterruptEvent)end InterruptEventclass CPUpublic explicit operation CPU((<FCFS> | <FP>), real)'((<FCFS> | <FP>) * real ==> CPU)public explicit operation deploy(?)'(? ==> ())public explicit operation deploy(?, seq of (char))'(? * seq of (char) ==> ())public explicit operation setPriority(?, nat)'(? * nat ==> ())end CPUclass BUSpublic explicit operation BUS((<CSMACD> | <FCFS>), real, set of (CPU))'((<CSMACD> | <FCFS>) * real * set of (CPU) ==> BUS)end BUS

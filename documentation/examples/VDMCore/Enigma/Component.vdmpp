class Component

instance variables
  protected next : [Component];
  protected alph : Alphabet

operations

public Component: [Component] * Alphabet ==> Component
Component(com,al) ==
  atomic(next := com;
         alph := al);

  public Successors: () ==> set of Component
  Successors () ==
    if next = nil
    then return {self}
    else return {self} union next.Successors();

  public Substitute: nat ==> nat
  Substitute (-) == is subclass responsibility;

  public Rotate: () ==> ()
  Rotate () == skip;

  public Rotate: nat ==> ()
  Rotate (-) == skip

end Component

RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)InstallValueDefs' map set compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 159'18forall m1, m2 in set {{id |-> {mk_(Look(env, id), model) | [env in set env_s]}} | id in set (dinter {SelDom(env) | [env in set env_s]})} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 2' (Unproved)InstallValueDefs' function apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 159'31(forall id in set (dinter {SelDom(env) | [env in set env_s]}) &  (forall env in set env_s &    pre_Look(env, id)))Proof Obligation 3' (Unproved)InstallValueDefs' non-empty set obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 160'33{SelDom(env) | [env in set env_s]} <> {}Proof Obligation 4' (Unproved)InstallFnDefs' map set compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 172'13forall m1, m2 in set {{nm |-> mk_((fn_marg(nm).pat), (fn_marg(nm).body))} | nm in set (dom fn_marg)} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 5' (Trivial by <forall x in set s & x in set s>)InstallFnDefs' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 172'25(forall nm in set (dom fn_marg) &  nm in set dom fn_marg)Proof Obligation 6' (Trivial by <forall x in set s & x in set s>)InstallFnDefs' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 172'41(forall nm in set (dom fn_marg) &  nm in set dom fn_marg)Proof Obligation 7' (Unproved)LeaveCurFn' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 182'17curfn <> []Proof Obligation 8' (Unproved)PopEnvL' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 199'17env_l <> []Proof Obligation 9' (Unproved)TopEnvL' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 203'15env_l <> []Proof Obligation 10' (Unproved)PopBlkEnv' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 211'22env_l <> []Proof Obligation 11' (Unproved)PopBlkEnv' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 211'19(hd env_l) <> []Proof Obligation 12' (Unproved)PopBlkEnv' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 211'35env_l <> []Proof Obligation 13' (Unproved)PushBlkEnv' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 215'30env_l <> []Proof Obligation 14' (Unproved)PushBlkEnv' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 215'43env_l <> []Proof Obligation 15' (Unproved)FnInfo' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 235'20curfn <> []Proof Obligation 16' (Unproved)LookUpValueDefs' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 254'26(forall mk_(v, m) in set val_m(id) &  forall ldom1 in set dom m, rdom2 in set dom {id |-> v} &  ldom1 = rdom2 => m(ldom1) = {id |-> v}(rdom2))Proof Obligation 17' (Unproved)LookUpValueDefs' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 254'65id in set dom val_mProof Obligation 18' (Unproved)LookUpValueDefs' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 250'3(is_(RESULT, set of ((VAL * Model))))Proof Obligation 19' (Unproved)LookUpFn' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 259'12nm in set dom fn_mProof Obligation 20' (Trivial by <not x = y => x <> y>)Look, nm, val' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 280'31(forall env'BlkEnv, id'UniqueId & (exists [mk_(nm, -) in set (elems env)] & (nm = id)) =>  (not (env = []) =>    env <> []))Proof Obligation 21' (Unproved)Look' function apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 284'13(forall env'BlkEnv, id'UniqueId & (exists [mk_(nm, -) in set (elems env)] & (nm = id)) =>  (not (env = []) =>    (let mk_(nm, val)'NameVal = (hd env) in      (not (nm = id) =>        pre_Look((tl env), id)))))Proof Obligation 22' (Unproved)Look' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 284'21(forall env'BlkEnv, id'UniqueId & (exists [mk_(nm, -) in set (elems env)] & (nm = id)) =>  (not (env = []) =>    (let mk_(nm, val)'NameVal = (hd env) in      (not (nm = id) =>        env <> []))))Proof Obligation 23' (Unproved)Extend' map set compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 290'14(forall val_m'map (UniqueId) to (LVAL), upd_m'map (UniqueId) to (LVAL) &  forall m1, m2 in set {{id |-> (if (id in set (dom val_m))  then (val_m(id) union upd_m(id))  else upd_m(id))} | id in set (dom upd_m)} &    forall d3 in set dom m1, d4 in set dom m2 &      d3 = d4 => m1(d3) = m2(d4))Proof Obligation 24' (Trivial by <x in set s => x in set s>)Extend' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 291'27(forall val_m'map (UniqueId) to (LVAL), upd_m'map (UniqueId) to (LVAL) &  (forall id in set (dom upd_m) &    ((id in set (dom val_m)) =>      id in set dom val_m)))Proof Obligation 25' (Unproved)Extend' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 291'43(forall val_m'map (UniqueId) to (LVAL), upd_m'map (UniqueId) to (LVAL) &  (forall id in set (dom upd_m) &    ((id in set (dom val_m)) =>      id in set dom upd_m)))Proof Obligation 26' (Unproved)Extend' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\env.vdmsl) at line 292'19(forall val_m'map (UniqueId) to (LVAL), upd_m'map (UniqueId) to (LVAL) &  (forall id in set (dom upd_m) &    (not (id in set (dom val_m)) =>      id in set dom upd_m)))Proof Obligation 27' (Unproved)PatternMatch, id' value binding obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 15'41exists mk_PatternName(id)'Pattern & mk_PatternName(id) = pat_pProof Obligation 28' (Unproved)PatternMatch, id' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 15'62is_(pat_p, PatternName)Proof Obligation 29' (Unproved)MatchSetEnumPattern, val_sv' value binding obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 46'10exists mk_SET(val_sv)'VAL & mk_SET(val_sv) = val_vProof Obligation 30' (Unproved)MatchSetEnumPattern, val_sv' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 46'27is_(val_v, SET)Proof Obligation 31' (Unproved)MatchSetUnionPattern, val_sv' value binding obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 69'12exists mk_SET(val_sv)'VAL & mk_SET(val_sv) = val_vProof Obligation 32' (Unproved)MatchSetUnionPattern, val_sv' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 69'29is_(val_v, SET)Proof Obligation 33' (Trivial by <forall x in set s & x in set s>)MatchLists, tmp_ls' sequence apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 105'30(forall i in set (inds els_lp) &  i in set inds els_lp)Proof Obligation 34' (Unproved)MatchLists, tmp_ls' sequence apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 105'41(forall i in set (inds els_lp) &  i in set inds val_lv)Proof Obligation 35' (Unproved)StripDoubles' while loop termination obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 136'3while (tmpblk_l <> []) do ...Proof Obligation 36' (Unproved)StripDoubles, id, val_v' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 137'28tmpblk_l <> []Proof Obligation 37' (Unproved)StripDoubles' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 138'49tmpblk_l <> []Proof Obligation 38' (Unproved)StripDoubles' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 140'22tmpblk_l <> []Proof Obligation 39' (Unproved)EvalSetBind, set_sv' value binding obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 164'16exists mk_SET(set_sv)'VAL & mk_SET(set_sv) = set_vProof Obligation 40' (Unproved)EvalSetBind, set_sv' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 164'33is_(set_v, SET)Proof Obligation 41' (Unproved)EvalSetBind' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\pat.vdmsl) at line 158'1is_(RESULT, set of ((BlkEnv * Model)))Proof Obligation 42' (Unproved)Consistent' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 32'14(forall lval'LVAL, bind'Model &  (forall mk_(val, b) in set lval & (forall id in set ((dom b) inter (dom bind)) & (b(id) = bind(id))) =>    forall ldom1 in set dom b, rdom2 in set dom bind &    ldom1 = rdom2 => b(ldom1) = bind(rdom2)))Proof Obligation 43' (Unproved)Consistent' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 35'14(forall lval'LVAL, bind'Model &  (forall mk_(val, b) in set lval &    (forall id in set ((dom b) inter (dom bind)) &      id in set dom b)))Proof Obligation 44' (Unproved)Consistent' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 35'22(forall lval'LVAL, bind'Model &  (forall mk_(val, b) in set lval &    (forall id in set ((dom b) inter (dom bind)) &      id in set dom bind)))Proof Obligation 45' (Unproved)SetToSeq' post condition obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 48'3(forall s'set of (VAL) &  post_SetToSeq(s, (if (s = {})  then []  else let e in set s in ([e] ^ SetToSeq((s \ {e}))))))Proof Obligation 46' (Unproved)SetToSeq' let be st existence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 52'14(forall s'set of (VAL) &  (not (s = {}) =>    exists e in set s))Proof Obligation 47' (Unproved)Permute' sequence apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 67'30(forall l'seq of (VAL) &  (not [] = l =>    (not [-] = l =>      (forall i in set (inds l) &        (forall j in set Permute(RestSeq(l, i)) &          i in set inds l)))))Proof Obligation 48' (Unproved)RestSeq' sequence apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 73'7(forall l'seq of (VAL), i'nat1 &  (forall j in set ((inds l) \ {i}) &    j in set inds l))Proof Obligation 49' (Unproved)PatternIds' cases exhaustive obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\auxil.vdmsl) at line 81'5(forall pat'Pattern &  (exists mk_PatternName(mk_(nm, pos))'Pattern & pat = mk_PatternName(mk_(nm, pos))) or pat = mk_MatchVal(-) or (exists mk_SetEnumPattern(els)'Pattern & pat = mk_SetEnumPattern(els)) or (exists mk_SetUnionPattern(lp, rp)'Pattern & pat = mk_SetUnionPattern(lp, rp)))Proof Obligation 50' (Unproved)LooseEvalLetBeSTExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 85'39forall ldom1 in set dom m2, rdom2 in set dom m &ldom1 = rdom2 => m2(ldom1) = m(rdom2)Proof Obligation 51' (Unproved)LooseEvalIfExpr, b' value binding obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 118'14exists mk_BOOL(b)'VAL & mk_BOOL(b) = test_vProof Obligation 52' (Unproved)LooseEvalIfExpr, b' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 118'27is_(test_v, BOOL)Proof Obligation 53' (Unproved)LooseEvalCasesExpr' while loop termination obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 142'9while ((alt_l <> []) and cont) do ...Proof Obligation 54' (Unproved)LooseEvalCasesExpr, pat, body' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 143'41alt_l <> []Proof Obligation 55' (Unproved)LooseEvalCasesExpr' non-empty sequence obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 153'18alt_l <> []Proof Obligation 56' (Unproved)LooseEvalSetBinaryExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 196'49forall ldom1 in set dom rm, rdom2 in set dom lm &ldom1 = rdom2 => rm(ldom1) = lm(rdom2)Proof Obligation 57' (Unproved)LooseEvalEqBinaryExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 205'50forall ldom1 in set dom rm, rdom2 in set dom lm &ldom1 = rdom2 => rm(ldom1) = lm(rdom2)Proof Obligation 58' (Unproved)LooseEvalNumBinaryExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 214'65forall ldom1 in set dom rm, rdom2 in set dom lm &ldom1 = rdom2 => rm(ldom1) = lm(rdom2)Proof Obligation 59' (Unproved)LooseEvalNumBinaryExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 215'65forall ldom1 in set dom rm, rdom2 in set dom lm &ldom1 = rdom2 => rm(ldom1) = lm(rdom2)Proof Obligation 60' (Unproved)LooseEvalNumBinaryExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 216'65forall ldom1 in set dom rm, rdom2 in set dom lm &ldom1 = rdom2 => rm(ldom1) = lm(rdom2)Proof Obligation 61' (Unproved)LooseEvalSetEnumerationExpr' sequence apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 231'701 in set inds elsProof Obligation 62' (Unproved)LooseEvalSetEnumerationExpr, elm_llv' sequence apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 234'41index in set inds elsProof Obligation 63' (Unproved)LooseEvalSetEnumerationExpr' map compatible obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 235'40(forall mk_(s, m) in set sm_s, mk_(e, m2) in set elm_llv & (forall id in set ((dom m) inter (dom m2)) & (m(id) = m2(id))) =>  forall ldom1 in set dom m, rdom2 in set dom m2 &  ldom1 = rdom2 => m(ldom1) = m2(rdom2))Proof Obligation 64' (Unproved)LooseEvalSetEnumerationExpr' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 238'13(forall mk_(s, m) in set sm_s, mk_(e, m2) in set elm_llv &  (forall id in set ((dom m) inter (dom m2)) &    id in set dom m))Proof Obligation 65' (Unproved)LooseEvalSetEnumerationExpr' map apply obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 238'21(forall mk_(s, m) in set sm_s, mk_(e, m2) in set elm_llv &  (forall id in set ((dom m) inter (dom m2)) &    id in set dom m2))Proof Obligation 66' (Unproved)LooseEvalLiteral' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 295'29(is_(lit, NumLit) =>  is_int((lit.val)))Proof Obligation 67' (Unproved)LooseEvalLiteral' subtype obligation in 'DEFAULT' (..\..\documentation\examples\VDMSL\loose\expr.vdmsl) at line 296'26(not is_(lit, NumLit) =>  is_((lit.val), bool))

RESULT:result:-1:-1,-1:module DEFAULTexports alldefinitionsstatic private TempRead = seq of (int)	inv temp == ((len temp) = 5)Rising' (TempRead -> bool)	Rising(temp) ==(temp(1) < temp(5))OverLimit' (TempRead -> bool)	OverLimit(temp) ==((temp(1) > 400) or ((temp(2) > 400) or ((temp(3) > 400) or ((temp(4) > 400) or (temp(5) > 400)))))OverLimit2' (TempRead -> bool)	OverLimit2(temp) ==(exists [i in set (inds temp)] & (temp(i) > 400))ContOverLimit' (TempRead -> bool)	ContOverLimit(temp) ==((temp(1) > 400) and ((temp(2) > 400) and ((temp(3) > 400) and ((temp(4) > 400) and (temp(5) > 400)))))ContOverLimit2' (TempRead -> bool)	ContOverLimit2(temp) ==(forall i in set (inds temp) & (temp(i) > 400))Safe' (TempRead -> bool)	Safe(temp) ==((temp(3) > 400) => (temp(5) < 400))private RaiseAlarm((temp'TempRead))alarm'bool	post ((not Safe(temp)) <=> alarm)MixQuant' (TempRead -> bool)	MixQuant(temp) ==(exists [min in set {1, ... ,5}] & (forall i in set {1, ... ,5} & ((i <> min) => (temp(i) > temp(min)))))end DEFAULT

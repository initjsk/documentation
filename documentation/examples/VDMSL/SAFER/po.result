RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)GripCommand, tran' map sequence compatible obligation in 'HCM' (../../documentation/examples/VDMSL/SAFER/hcm.vdmsl) at line 33'16(forall mk_HandGripPosition(vert, horiz, trans, twist)'HandGripPosition, mode'ControlModeSwitch &  forall m1, m2 in set {{<X> |-> horiz}, {<Y> |-> (if (mode = <Tran>)  then trans  else <Zero>)}, {<Z> |-> (if (mode = <Tran>)  then vert  else <Zero>)}} &    forall d3 in set dom m1, d4 in set dom m2 &      d3 = d4 => m1(d3) = m2(d4))Proof Obligation 2' (Unproved)GripCommand, rot' map sequence compatible obligation in 'HCM' (../../documentation/examples/VDMSL/SAFER/hcm.vdmsl) at line 36'16(forall mk_HandGripPosition(vert, horiz, trans, twist)'HandGripPosition, mode'ControlModeSwitch &  forall m1, m2 in set {{<Roll> |-> (if (mode = <Rot>)  then vert  else <Zero>)}, {<Pitch> |-> twist}, {<Yaw> |-> (if (mode = <Rot>)  then trans  else <Zero>)}} &    forall d3 in set dom m1, d4 in set dom m2 &      d3 = d4 => m1(d3) = m2(d4))Proof Obligation 3' (Unproved)GripCommand' subtype obligation in 'HCM' (../../documentation/examples/VDMSL/SAFER/hcm.vdmsl) at line 40'28(forall mk_HandGripPosition(vert, horiz, trans, twist)'HandGripPosition, mode'ControlModeSwitch &  (let tran'map ((<X> | <Y> | <Z>)) to ((<Zero> | AxisCommand)) = {<X> |-> horiz, <Y> |-> (if (mode = <Tran>)  then trans  else <Zero>), <Z> |-> (if (mode = <Tran>)  then vert  else <Zero>)}, rot'map ((<Pitch> | <Roll> | <Yaw>)) to ((<Zero> | AxisCommand)) = {<Roll> |-> (if (mode = <Rot>)  then vert  else <Zero>), <Pitch> |-> twist, <Yaw> |-> (if (mode = <Rot>)  then trans  else <Zero>)} in    inv_TranCommand(tran) and (is_(tran, map (TranAxis) to (AxisCommand)))))Proof Obligation 4' (Unproved)GripCommand' subtype obligation in 'HCM' (../../documentation/examples/VDMSL/SAFER/hcm.vdmsl) at line 40'33(forall mk_HandGripPosition(vert, horiz, trans, twist)'HandGripPosition, mode'ControlModeSwitch &  (let tran'map ((<X> | <Y> | <Z>)) to ((<Zero> | AxisCommand)) = {<X> |-> horiz, <Y> |-> (if (mode = <Tran>)  then trans  else <Zero>), <Z> |-> (if (mode = <Tran>)  then vert  else <Zero>)}, rot'map ((<Pitch> | <Roll> | <Yaw>)) to ((<Zero> | AxisCommand)) = {<Roll> |-> (if (mode = <Rot>)  then vert  else <Zero>), <Pitch> |-> twist, <Yaw> |-> (if (mode = <Rot>)  then trans  else <Zero>)} in    inv_RotCommand(rot) and (is_(rot, map (RotAxis) to (AxisCommand)))))Proof Obligation 5' (Trivial by <forall x in set s & x in set s>)RotCmdsPresent' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 25'31(forall cmd'RotCommand &  (forall a in set (dom cmd) &    a in set dom cmd))Proof Obligation 6' (Unproved)PrioritizedTranCmd' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 29'8(forall tran'TranCommand &  <X> in set dom tran)Proof Obligation 7' (Unproved)PrioritizedTranCmd' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 30'44(forall tran'TranCommand &  ((tran(<X>) <> <Zero>) =>    <X> in set dom tran))Proof Obligation 8' (Unproved)PrioritizedTranCmd' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 32'44(forall tran'TranCommand &  (not (tran(<X>) <> <Zero>) =>    ((tran(<Y>) <> <Zero>) =>      <Y> in set dom tran)))Proof Obligation 9' (Unproved)PrioritizedTranCmd' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 34'44(forall tran'TranCommand &  (not (tran(<X>) <> <Zero>) =>    (not (tran(<Y>) <> <Zero>) =>      ((tran(<Z>) <> <Zero>) =>        <Z> in set dom tran))))Proof Obligation 10' (Unproved)PrioritizedTranCmd' subtype obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 27'3(forall tran'TranCommand &  inv_TranCommand((if (tran(<X>) <> <Zero>)  then (AUX`null_tran_command ++ {<X> |-> tran(<X>)})  elseif (tran(<Y>) <> <Zero>)  then (AUX`null_tran_command ++ {<Y> |-> tran(<Y>)})  elseif (tran(<Z>) <> <Zero>)  then (AUX`null_tran_command ++ {<Z> |-> tran(<Z>)})  else AUX`null_tran_command)) and (is_((if (tran(<X>) <> <Zero>)  then (AUX`null_tran_command ++ {<X> |-> tran(<X>)})  elseif (tran(<Y>) <> <Zero>)  then (AUX`null_tran_command ++ {<Y> |-> tran(<Y>)})  elseif (tran(<Z>) <> <Zero>)  then (AUX`null_tran_command ++ {<Z> |-> tran(<Z>)})  else AUX`null_tran_command), map (TranAxis) to (AxisCommand))))Proof Obligation 11' (Unproved)CombinedRotCmds, aah_axes' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 41'53(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  (forall a in set AUX`rot_axis_set &    a in set dom hcm_rot))Proof Obligation 12' (Unproved)CombinedRotCmds' map set compatible obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 42'8(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  (let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in    forall m1, m2 in set {{a |-> aah(a)} | a in set aah_axes} &      forall d3 in set dom m1, d4 in set dom m2 &        d3 = d4 => m1(d3) = m2(d4)))Proof Obligation 13' (Unproved)CombinedRotCmds' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 42'15(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  (let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in    (forall a in set aah_axes &      a in set dom aah)))Proof Obligation 14' (Unproved)CombinedRotCmds' map set compatible obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 43'8(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  (let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in    forall m1, m2 in set {{a |-> hcm_rot(a)} | a in set (AUX`rot_axis_set \ aah_axes)} &      forall d3 in set dom m1, d4 in set dom m2 &        d3 = d4 => m1(d3) = m2(d4)))Proof Obligation 15' (Unproved)CombinedRotCmds' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 43'15(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  (let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in    (forall a in set (AUX`rot_axis_set \ aah_axes) &      a in set dom hcm_rot)))Proof Obligation 16' (Unproved)CombinedRotCmds' map compatible obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 42'8(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  (let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in    forall ldom1 in set dom {a |-> aah(a) | a in set aah_axes}, rdom2 in set dom {a |-> hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)} &    ldom1 = rdom2 => {a |-> aah(a) | a in set aah_axes}(ldom1) = {a |-> hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)}(rdom2)))Proof Obligation 17' (Unproved)CombinedRotCmds' subtype obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 37'3(forall hcm_rot'RotCommand, aah'RotCommand, ignore_hcm'set of (RotAxis) &  inv_RotCommand(let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in ({a |-> aah(a) | a in set aah_axes} munion {a |-> hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)})) and (is_(let aah_axes'set of (RotAxis) = (ignore_hcm union {a | [a in set AUX`rot_axis_set] & (hcm_rot(a) = <Zero>)}) in ({a |-> aah(a) | a in set aah_axes} munion {a |-> hcm_rot(a) | a in set (AUX`rot_axis_set \ aah_axes)}), map (RotAxis) to (AxisCommand))))Proof Obligation 18' (Unproved)BFThrusters' cases exhaustive obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 63'5(forall A'AxisCommand, B'AxisCommand, C'AxisCommand &  mk_(A, B, C) = mk_(<Neg>, <Neg>, <Neg>) or mk_(A, B, C) = mk_(<Neg>, <Neg>, <Zero>) or mk_(A, B, C) = mk_(<Neg>, <Neg>, <Pos>) or mk_(A, B, C) = mk_(<Neg>, <Zero>, <Neg>) or mk_(A, B, C) = mk_(<Neg>, <Zero>, <Zero>) or mk_(A, B, C) = mk_(<Neg>, <Zero>, <Pos>) or mk_(A, B, C) = mk_(<Neg>, <Pos>, <Neg>) or mk_(A, B, C) = mk_(<Neg>, <Pos>, <Zero>) or mk_(A, B, C) = mk_(<Neg>, <Pos>, <Pos>) or mk_(A, B, C) = mk_(<Zero>, <Neg>, <Neg>) or mk_(A, B, C) = mk_(<Zero>, <Neg>, <Zero>) or mk_(A, B, C) = mk_(<Zero>, <Neg>, <Pos>) or mk_(A, B, C) = mk_(<Zero>, <Zero>, <Neg>) or mk_(A, B, C) = mk_(<Zero>, <Zero>, <Zero>) or mk_(A, B, C) = mk_(<Zero>, <Zero>, <Pos>) or mk_(A, B, C) = mk_(<Zero>, <Pos>, <Neg>) or mk_(A, B, C) = mk_(<Zero>, <Pos>, <Zero>) or mk_(A, B, C) = mk_(<Zero>, <Pos>, <Pos>) or mk_(A, B, C) = mk_(<Pos>, <Neg>, <Neg>) or mk_(A, B, C) = mk_(<Pos>, <Neg>, <Zero>) or mk_(A, B, C) = mk_(<Pos>, <Neg>, <Pos>) or mk_(A, B, C) = mk_(<Pos>, <Zero>, <Neg>) or mk_(A, B, C) = mk_(<Pos>, <Zero>, <Zero>) or mk_(A, B, C) = mk_(<Pos>, <Zero>, <Pos>) or mk_(A, B, C) = mk_(<Pos>, <Pos>, <Neg>) or mk_(A, B, C) = mk_(<Pos>, <Pos>, <Zero>) or mk_(A, B, C) = mk_(<Pos>, <Pos>, <Pos>))Proof Obligation 19' (Unproved)LRUDThrusters' cases exhaustive obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 104'5(forall A'AxisCommand, B'AxisCommand, C'AxisCommand &  mk_(A, B, C) = mk_(<Neg>, <Neg>, <Neg>) or mk_(A, B, C) = mk_(<Neg>, <Neg>, <Zero>) or mk_(A, B, C) = mk_(<Neg>, <Neg>, <Pos>) or mk_(A, B, C) = mk_(<Neg>, <Zero>, <Neg>) or mk_(A, B, C) = mk_(<Neg>, <Zero>, <Zero>) or mk_(A, B, C) = mk_(<Neg>, <Zero>, <Pos>) or mk_(A, B, C) = mk_(<Neg>, <Pos>, <Neg>) or mk_(A, B, C) = mk_(<Neg>, <Pos>, <Zero>) or mk_(A, B, C) = mk_(<Neg>, <Pos>, <Pos>) or mk_(A, B, C) = mk_(<Zero>, <Neg>, <Neg>) or mk_(A, B, C) = mk_(<Zero>, <Neg>, <Zero>) or mk_(A, B, C) = mk_(<Zero>, <Neg>, <Pos>) or mk_(A, B, C) = mk_(<Zero>, <Zero>, <Neg>) or mk_(A, B, C) = mk_(<Zero>, <Zero>, <Zero>) or mk_(A, B, C) = mk_(<Zero>, <Zero>, <Pos>) or mk_(A, B, C) = mk_(<Zero>, <Pos>, <Neg>) or mk_(A, B, C) = mk_(<Zero>, <Pos>, <Zero>) or mk_(A, B, C) = mk_(<Zero>, <Pos>, <Pos>) or mk_(A, B, C) = mk_(<Pos>, <Neg>, <Neg>) or mk_(A, B, C) = mk_(<Pos>, <Neg>, <Zero>) or mk_(A, B, C) = mk_(<Pos>, <Neg>, <Pos>) or mk_(A, B, C) = mk_(<Pos>, <Zero>, <Neg>) or mk_(A, B, C) = mk_(<Pos>, <Zero>, <Zero>) or mk_(A, B, C) = mk_(<Pos>, <Zero>, <Pos>) or mk_(A, B, C) = mk_(<Pos>, <Pos>, <Neg>) or mk_(A, B, C) = mk_(<Pos>, <Pos>, <Zero>) or mk_(A, B, C) = mk_(<Pos>, <Pos>, <Pos>))Proof Obligation 20' (Unproved)SelectedThrusters, bf_mandatory, bf_optional' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 148'28(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <X> in set dom tran)Proof Obligation 21' (Unproved)SelectedThrusters, bf_mandatory, bf_optional' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 148'38(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Pitch> in set dom rot)Proof Obligation 22' (Unproved)SelectedThrusters, bf_mandatory, bf_optional' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 148'51(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Yaw> in set dom rot)Proof Obligation 23' (Unproved)SelectedThrusters, lrud_mandatory, lrud_optional' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 150'30(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Y> in set dom tran)Proof Obligation 24' (Unproved)SelectedThrusters, lrud_mandatory, lrud_optional' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 150'40(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Z> in set dom tran)Proof Obligation 25' (Unproved)SelectedThrusters, lrud_mandatory, lrud_optional' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 150'50(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Roll> in set dom rot)Proof Obligation 26' (Unproved)SelectedThrusters, bf_thr' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 151'21(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Roll> in set dom rot)Proof Obligation 27' (Unproved)SelectedThrusters, lrud_thr' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 154'23(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  <Pitch> in set dom rot)Proof Obligation 28' (Unproved)SelectedThrusters, lrud_thr' map apply obligation in 'TS' (../../documentation/examples/VDMSL/SAFER/ts.vdmsl) at line 154'49(forall hcm'SixDofCommand, aah'RotCommand, active_axes'set of (RotAxis), ignore_hcm'set of (RotAxis) &  ((rot(<Pitch>) = <Zero>) =>    <Yaw> in set dom rot))Proof Obligation 29' (Unproved)Transition' map apply obligation in 'AAH' (../../documentation/examples/VDMSL/SAFER/aah.vdmsl) at line 42'29(forall a in set AUX`rot_axis_set &  (not starting =>    ((engage <> <AAH_off>) =>      ((a in set active_axes) =>        a in set dom (hcm_cmd.rot)))))Proof Obligation 30' (Unproved)Transition' map apply obligation in 'AAH' (../../documentation/examples/VDMSL/SAFER/aah.vdmsl) at line 44'40(forall a in set AUX`rot_axis_set &  (starting =>    a in set dom (hcm_cmd.rot)))Proof Obligation 31' (Unproved)ButtonTransition' cases exhaustive obligation in 'AAH' (../../documentation/examples/VDMSL/SAFER/aah.vdmsl) at line 68'5(forall estate'EngageState, button'ControlButton, active'set of (RotAxis), clock'nat, timeout'nat &  mk_(estate, button) = mk_(<AAH_off>, <Up>) or mk_(estate, button) = mk_(<AAH_off>, <Down>) or mk_(estate, button) = mk_(<AAH_started>, <Up>) or mk_(estate, button) = mk_(<AAH_started>, <Down>) or mk_(estate, button) = mk_(<AAH_on>, <Up>) or mk_(estate, button) = mk_(<AAH_on>, <Down>) or mk_(estate, button) = mk_(<pressed_once>, <Up>) or mk_(estate, button) = mk_(<pressed_once>, <Down>) or mk_(estate, button) = mk_(<AAH_closing>, <Up>) or mk_(estate, button) = mk_(<AAH_closing>, <Down>) or mk_(estate, button) = mk_(<pressed_twice>, <Up>) or mk_(estate, button) = mk_(<pressed_twice>, <Down>))Proof Obligation 32' (Unproved)ThrusterMatrix' sequence apply obligation in 'WorkSpace' (../../documentation/examples/VDMSL/SAFER/workspace.vdmsl) at line 18'56(forall tm'seq of (seq of (bool)) &  (((len tm) = 4) =>    (forall i in set (inds tm) &      i in set inds tm)))Proof Obligation 33' (Unproved)TransformInput, rcom' map sequence compatible obligation in 'WorkSpace' (../../documentation/examples/VDMSL/SAFER/workspace.vdmsl) at line 40'15(forall input'Input &  (let [mode, aah, horiz, trans, vert, twist, roll, pitch, yaw]'Input = input in    forall m1, m2 in set {{<Roll> |-> ConvertAxisCmd(roll)}, {<Pitch> |-> ConvertAxisCmd(pitch)}, {<Yaw> |-> ConvertAxisCmd(yaw)}} &      forall d3 in set dom m1, d4 in set dom m2 &        d3 = d4 => m1(d3) = m2(d4)))Proof Obligation 34' (Unproved)TransformInput' subtype obligation in 'WorkSpace' (../../documentation/examples/VDMSL/SAFER/workspace.vdmsl) at line 28'1(forall input'Input &  is_(let [mode, aah, horiz, trans, vert, twist, roll, pitch, yaw]'Input = input in let swpos'HCM`SwitchPositions = mk_HCM`SwitchPositions((if (mode = 1)  then <Tran>  else <Rot>), (if (aah = 0)  then <Up>  else <Down>)), hgpos'HCM`HandGripPosition = mk_HCM`HandGripPosition(ConvertAxisCmd(vert), ConvertAxisCmd(horiz), ConvertAxisCmd(trans), ConvertAxisCmd(twist)), rcom'map ((<Pitch> | <Roll> | <Yaw>)) to (AxisCommand) = {<Roll> |-> ConvertAxisCmd(roll), <Pitch> |-> ConvertAxisCmd(pitch), <Yaw> |-> ConvertAxisCmd(yaw)} in mk_(swpos, hgpos, rcom), (SwitchPositions * HandGripPosition * RotCommand)))Proof Obligation 35' (Unproved)GenerateThrusterMatrix' subtype obligation in 'WorkSpace' (../../documentation/examples/VDMSL/SAFER/workspace.vdmsl) at line 54'1(forall ts'ThrusterSet &  inv_ThrusterMatrix(let tson'set of ((nat * nat)) = {GenerateThrusterLabel(t) | [t in set ts]} in [[(mk_(j, i) in set tson) | i in set {1, ... ,6}] | j in set {1, ... ,4}]) and (is_(let tson'set of ((nat * nat)) = {GenerateThrusterLabel(t) | [t in set ts]} in [[(mk_(j, i) in set tson) | i in set {1, ... ,6}] | j in set {1, ... ,4}], seq of (seq of (bool)))))Proof Obligation 36' (Unproved)GenerateThrusterLabel' cases exhaustive obligation in 'WorkSpace' (../../documentation/examples/VDMSL/SAFER/workspace.vdmsl) at line 62'3(forall tnm'ThrusterName &  tnm = <B1> or tnm = <B2> or tnm = <B3> or tnm = <B4> or tnm = <F1> or tnm = <F2> or tnm = <F3> or tnm = <F4> or tnm = <L1R> or tnm = <L1F> or tnm = <R2R> or tnm = <R2F> or tnm = <L3R> or tnm = <L3F> or tnm = <R4R> or tnm = <R4F> or tnm = <D1R> or tnm = <D1F> or tnm = <D2R> or tnm = <D2F> or tnm = <U3R> or tnm = <U3F> or tnm = <U4R> or tnm = <U4F>)Proof Obligation 37' (Unproved)rotcomm' map sequence compatible obligation in 'WorkSpace' (../../documentation/examples/VDMSL/SAFER/workspace.vdmsl) at line 93'11forall m1, m2 in set {{<Roll> |-> <Zero>}, {<Pitch> |-> <Zero>}, {<Yaw> |-> <Zero>}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 38' (Unproved)all_rot_commands' map sequence compatible obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 42'6(forall a, b, c in set AUX`axis_command_set &  forall m1, m2 in set {{<Roll> |-> a}, {<Pitch> |-> b}, {<Yaw> |-> c}} &    forall d3 in set dom m1, d4 in set dom m2 &      d3 = d4 => m1(d3) = m2(d4))Proof Obligation 39' (Unproved)all_rot_commands' subtype obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 42'5is_({{<Roll> |-> a, <Pitch> |-> b, <Yaw> |-> c} | [a, b, c in set AUX`axis_command_set]}, set of (RotCommand))Proof Obligation 40' (Unproved)BigTest' map set compatible obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 67'5forall m1, m2 in set {{mk_(switch, grip, aah_law) |-> SAFER`ControlCycle(switch, grip, aah_law)} | switch in set switch_positions, grip in set grip_positions, aah_law in set all_rot_commands} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 41' (Unproved)HugeTest' map set compatible obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 75'4forall m1, m2 in set {{mk_(switch, grip, aah_law) |-> SAFER`ControlCycle(switch, grip, aah_law)} | switch in set switch_positions, grip in set all_grip_positions, aah_law in set all_rot_commands} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 42' (Unproved)ConvertTIds' let be st existence obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 92'14(forall ts'ThrusterSet &  (not (ts = {}) =>    exists t in set ts))Proof Obligation 43' (Unproved)ConvertTId' cases exhaustive obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 98'5(forall tnm'ThrusterName &  tnm = <B1> or tnm = <B2> or tnm = <B3> or tnm = <B4> or tnm = <F1> or tnm = <F2> or tnm = <F3> or tnm = <F4> or tnm = <L1R> or tnm = <L1F> or tnm = <R2R> or tnm = <R2F> or tnm = <L3R> or tnm = <L3F> or tnm = <R4R> or tnm = <R4F> or tnm = <D1R> or tnm = <D1F> or tnm = <D2R> or tnm = <D2F> or tnm = <U3R> or tnm = <U3F> or tnm = <U4R> or tnm = <U4F>)Proof Obligation 44' (Unproved)RunTest, ts' map sequence compatible obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 145'20forall m1, m2 in set {{<Roll> |-> ConvertAxisCmd(roll)}, {<Pitch> |-> ConvertAxisCmd(pitch)}, {<Yaw> |-> ConvertAxisCmd(yaw)}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 45' (Unproved)Loop' while loop termination obligation in 'TEST' (../../documentation/examples/VDMSL/SAFER/test.vdmsl) at line 157'5while RunTest() do ...Proof Obligation 46' (Unproved)ControlCycle' operation post condition obligation in 'SAFER' (../../documentation/examples/VDMSL/SAFER/safer.vdmsl) at line 24'3(((card RESULT) <= 4) and ThrusterConsistency(RESULT))Proof Obligation 47' (Unproved)null_tran_command' map set compatible obligation in 'AUX' (../../documentation/examples/VDMSL/SAFER/auxilary.vdmsl) at line 18'37forall m1, m2 in set {{a |-> <Zero>} | a in set tran_axis_set} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 48' (Unproved)null_tran_command' subtype obligation in 'AUX' (../../documentation/examples/VDMSL/SAFER/auxilary.vdmsl) at line 18'37inv_TranCommand({a |-> <Zero> | a in set tran_axis_set}) and (is_({a |-> <Zero> | a in set tran_axis_set}, map (TranAxis) to (AxisCommand)))Proof Obligation 49' (Unproved)null_rot_command' map set compatible obligation in 'AUX' (../../documentation/examples/VDMSL/SAFER/auxilary.vdmsl) at line 20'35forall m1, m2 in set {{a |-> <Zero>} | a in set rot_axis_set} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 50' (Unproved)null_rot_command' subtype obligation in 'AUX' (../../documentation/examples/VDMSL/SAFER/auxilary.vdmsl) at line 20'35inv_RotCommand({a |-> <Zero> | a in set rot_axis_set}) and (is_({a |-> <Zero> | a in set rot_axis_set}, map (RotAxis) to (AxisCommand)))

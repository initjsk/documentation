RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)sizeof' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 38'1(forall m'M &  (((m.stop) - (m.start)) + 1) > 0)Proof Obligation 2' (Unproved)spacefor' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 48'1(forall size'nat1, Q'Quadrant &  (not [] = Q =>    (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>    let [h] ^ tail = Q in      (not (((h.type) = <FREE>) and (sizeof(h) >= size)) =>        QuadrantLen(size, Q) > QuadrantLen(size, tail)))))Proof Obligation 3' (Unproved)spacefor' cases exhaustive obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 50'3(forall size'nat1, Q'Quadrant &  Q = [] or (exists [h] ^ tail'Quadrant & Q = [h] ^ tail))Proof Obligation 4' (Unproved)bestfit' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 62'1(forall size'nat1, Q'Quadrant &  (not [] = Q =>    (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>    let [h] ^ tail = Q in      ((((h.type) = <FREE>) and (sizeof(h) >= size)) =>        QuadrantLen(size, Q) > QuadrantLen(size, tail)))))Proof Obligation 5' (Unproved)bestfit' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 62'1(forall size'nat1, Q'Quadrant &  (not [] = Q =>    (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>    let [h] ^ tail = Q in      (not (((h.type) = <FREE>) and (sizeof(h) >= size)) =>        QuadrantLen(size, Q) > QuadrantLen(size, tail)))))Proof Obligation 6' (Unproved)bestfit' cases exhaustive obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 64'3(forall size'nat1, Q'Quadrant &  Q = [] or (exists [h] ^ tail'Quadrant & Q = [h] ^ tail))Proof Obligation 7' (Unproved)add' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 78'31(forall size'nat1, hole'nat1, Q'Quadrant & (hole >= size) =>  (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>  let [h] ^ tail = Q in    ((((h.type) = <FREE>) and (sizeof(h) = hole)) =>      ((hole = size) =>        inv_M(mk_M(<USED>, (h.start), (h.stop)))))))Proof Obligation 8' (Unproved)add' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 79'68(forall size'nat1, hole'nat1, Q'Quadrant & (hole >= size) =>  (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>  let [h] ^ tail = Q in    ((((h.type) = <FREE>) and (sizeof(h) = hole)) =>      (not (hole = size) =>        (((h.start) + size) - 1) >= 0))))Proof Obligation 9' (Unproved)add' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 79'31(forall size'nat1, hole'nat1, Q'Quadrant & (hole >= size) =>  (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>  let [h] ^ tail = Q in    ((((h.type) = <FREE>) and (sizeof(h) = hole)) =>      (not (hole = size) =>        inv_M(mk_M(<USED>, (h.start), (((h.start) + size) - 1))) and ((((h.start) + size) - 1) >= 0)))))Proof Obligation 10' (Unproved)add' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 80'31(forall size'nat1, hole'nat1, Q'Quadrant & (hole >= size) =>  (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>  let [h] ^ tail = Q in    ((((h.type) = <FREE>) and (sizeof(h) = hole)) =>      (not (hole = size) =>        inv_M(mk_M(<FREE>, ((h.start) + size), (h.stop)))))))Proof Obligation 11' (Unproved)add' function apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 81'31(forall size'nat1, hole'nat1, Q'Quadrant & (hole >= size) =>  (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>  let [h] ^ tail = Q in    (not (((h.type) = <FREE>) and (sizeof(h) = hole)) =>      pre_add(size, hole, tail))))Proof Obligation 12' (Unproved)add' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 73'1(forall size'nat1, hole'nat1, Q'Quadrant & (hole >= size) =>  (exists [h] ^ tail'Quadrant & [h] ^ tail = Q =>  let [h] ^ tail = Q in    (not (((h.type) = <FREE>) and (sizeof(h) = hole)) =>      QuadrantLen2(size, hole, Q) > QuadrantLen2(size, hole, tail))))Proof Obligation 13' (Unproved)combine' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 91'1(forall Q'Quadrant &  (exists [h1, h2] ^ tail'Quadrant & [h1, h2] ^ tail = Q =>  let [h1, h2] ^ tail = Q in    ((((h1.type) = <FREE>) and ((h2.type) = <FREE>)) =>      QuadrantLen0(Q) > QuadrantLen0(([mk_M(<FREE>, (h1.start), (h2.stop))] ^ tail)))))Proof Obligation 14' (Unproved)combine' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 96'22(forall Q'Quadrant &  (exists [h1, h2] ^ tail'Quadrant & [h1, h2] ^ tail = Q =>  let [h1, h2] ^ tail = Q in    ((((h1.type) = <FREE>) and ((h2.type) = <FREE>)) =>      inv_M(mk_M(<FREE>, (h1.start), (h2.stop))))))Proof Obligation 15' (Unproved)combine' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 91'1(forall Q'Quadrant &  (exists [h1, h2] ^ tail'Quadrant & [h1, h2] ^ tail = Q =>  let [h1, h2] ^ tail = Q in    (not (((h1.type) = <FREE>) and ((h2.type) = <FREE>)) =>      QuadrantLen0(Q) > QuadrantLen0((tl Q)))))Proof Obligation 16' (Unproved)combine' non-empty sequence obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 97'31(forall Q'Quadrant &  (exists [h1, h2] ^ tail'Quadrant & [h1, h2] ^ tail = Q =>  let [h1, h2] ^ tail = Q in    (not (((h1.type) = <FREE>) and ((h2.type) = <FREE>)) =>      Q <> [])))Proof Obligation 17' (Unproved)delete' non-empty sequence obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 108'9(forall item'M, Q'Quadrant &  Q <> [])Proof Obligation 18' (Unproved)delete' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 109'17(forall item'M, Q'Quadrant &  (((hd Q) = item) =>    inv_M(mk_M(<FREE>, (item.start), (item.stop)))))Proof Obligation 19' (Unproved)delete' non-empty sequence obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 109'59(forall item'M, Q'Quadrant &  (((hd Q) = item) =>    Q <> []))Proof Obligation 20' (Unproved)delete' non-empty sequence obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 110'12(forall item'M, Q'Quadrant &  (not ((hd Q) = item) =>    Q <> []))Proof Obligation 21' (Unproved)delete' recursive function obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 106'1(forall item'M, Q'Quadrant &  (not ((hd Q) = item) =>    MQuadrantLen(item, Q) > MQuadrantLen(item, (tl Q))))Proof Obligation 22' (Unproved)delete' non-empty sequence obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 110'33(forall item'M, Q'Quadrant &  (not ((hd Q) = item) =>    Q <> []))Proof Obligation 23' (Unproved)fragments' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 117'1(forall Q'Quadrant &  ((card {x | [x in set (elems Q)] & ((x.type) = <FREE>)}) - 1) >= 0)Proof Obligation 24' (Unproved)seed' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 125'3-- After rseed '= nlet mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 25' (Unproved)inc' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 131'5-- After rseed '= (((rseed * 69069) + 5) mod 4294967296)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 26' (Unproved)FirstFit' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 144'10-- After Q4 '= add(size, q4, Q4)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 27' (Unproved)FirstFit' function apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 144'16pre_add(size, q4, Q4)Proof Obligation 28' (Unproved)FirstFit' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 148'17-- After Q3 '= add(size, q3, Q3)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 29' (Unproved)FirstFit' function apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 148'23pre_add(size, q3, Q3)Proof Obligation 30' (Unproved)BestFit' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 158'10-- After Q4 '= add(size, q4, Q4)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 31' (Unproved)BestFit' function apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 158'16pre_add(size, q4, Q4)Proof Obligation 32' (Unproved)BestFit' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 162'17-- After Q3 '= add(size, q3, Q3)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 33' (Unproved)BestFit' function apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 162'23pre_add(size, q3, Q3)Proof Obligation 34' (Unproved)Reset' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 169'3-- After Q3 '= [mk_M(<FREE>, 0, (MAXMEM - 1))]let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 35' (Unproved)Reset' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 169'32(MAXMEM - 1) >= 0Proof Obligation 36' (Unproved)Reset' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 169'10inv_M(mk_M(<FREE>, 0, (MAXMEM - 1))) and ((MAXMEM - 1) >= 0)Proof Obligation 37' (Unproved)Reset' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 170'3-- After Q4 '= [mk_M(<FREE>, 0, (MAXMEM - 1))]let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 38' (Unproved)Reset' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 170'32(MAXMEM - 1) >= 0Proof Obligation 39' (Unproved)Reset' subtype obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 170'10inv_M(mk_M(<FREE>, 0, (MAXMEM - 1))) and ((MAXMEM - 1) >= 0)Proof Obligation 40' (Unproved)DeleteOne' sequence apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 178'13i in set inds Q3Proof Obligation 41' (Unproved)DeleteOne' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 179'15-- After Q3 '= delete(Q3(i), Q3)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 42' (Unproved)DeleteOne' sequence apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 179'28i in set inds Q3Proof Obligation 43' (Unproved)DeleteOne' sequence apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 183'13i in set inds Q4Proof Obligation 44' (Unproved)DeleteOne' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 184'15-- After Q4 '= delete(Q4(i), Q4)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 45' (Unproved)DeleteOne' sequence apply obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 184'28i in set inds Q4Proof Obligation 46' (Unproved)TryFirst' while loop termination obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 194'3while ((count < loops) and FirstFit(rand(CHUNK))) do ...Proof Obligation 47' (Unproved)TryFirst' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 198'6-- After count '= (count + 1)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 48' (Unproved)TryBest' while loop termination obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 209'3while ((count < loops) and BestFit(rand(CHUNK))) do ...Proof Obligation 49' (Unproved)TryBest' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 213'6-- After count '= (count + 1)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 50' (Unproved)main' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 230'6-- After best '= TryBest(loops)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 51' (Unproved)main' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 234'6-- After first '= TryFirst(loops)let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 52' (Unproved)main' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 237'11-- After result '= (result ^ [<SAME>])let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 53' (Unproved)main' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 239'11-- After result '= (result ^ [<BEST>])let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))Proof Obligation 54' (Unproved)main' state invariant obligation in 'M' (../../documentation/examples/VDMSL/shmem/shmem.vdmsl) at line 240'11-- After result '= (result ^ [<FIRST>])let mk_Memory(-, q3, q4) = Memory in (((len q3) > 0) and ((len q4) > 0))

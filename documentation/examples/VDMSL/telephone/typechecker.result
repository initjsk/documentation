WARNING:telephone.vdmsl:5000:107,12:Definition 'ClearWait' not used.
WARNING:telephone.vdmsl:5000:117,13:Definition 'ClearSpeak' not used.
WARNING:telephone.vdmsl:5000:131,10:Definition 'Suspend' not used.
WARNING:telephone.vdmsl:5000:45,7:Definition 'Lift' not used.
WARNING:telephone.vdmsl:5000:141,10:Definition 'ClearUn' not used.
WARNING:telephone.vdmsl:5000:72,9:Definition 'MakeUn' not used.
WARNING:telephone.vdmsl:5000:84,9:Definition 'Answer' not used.
WARNING:telephone.vdmsl:5000:99,15:Definition 'ClearAttempt' not used.
WARNING:telephone.vdmsl:5000:57,10:Definition 'Connect' not used.
RESULT:result:-1:-1,-1:module EXCHexports alldefinitionsstatic private Subscriber = tokenstatic private Initiator = (<AI> | <SI> | <WI>)static private Recipient = (<SR> | <WR>)static private Status = (<fr> | <un> | Initiator | Recipient)state Exchangeof[status'map (Subscriber) to (Status), calls'inmap of (Subscriber) to (Subscriber)]	inv mk_Exchange(status, calls) == (forall i in set (dom calls) & (((status(i) = <WI>) and (status(calls(i)) = <WR>)) or ((status(i) = <SI>) and (status(calls(i)) = <SR>))))Lift((s'Subscriber))	ext [wr status'?]	pre (s in set (dom (status '> {<fr>})))	post (status = (status~ ++ {s |-> <AI>}))Connect((i'Subscriber), (r'Subscriber))	ext [wr status'?, wr calls'?]	pre ((i in set (dom (status '> {<AI>}))) and (r in set (dom (status '> {<fr>}))))	post ((status = (status~ ++ {i |-> <WI>, r |-> <WR>})) and (calls = (calls~ ++ {i |-> r})))MakeUn((i'Subscriber))	ext [wr status'?]	pre (i in set (dom (status '> {<AI>})))	post (status = (status~ ++ {i |-> <un>}))Answer((r'Subscriber))	ext [rd calls'?, wr status'?]	pre (r in set (dom (status '> {<WR>})))	post (status = (status~ ++ {r |-> <SR>, (inverse calls)(r) |-> <SI>}))ClearAttempt((i'Subscriber))	ext [wr status'?]	pre (i in set (dom (status '> {<AI>})))	post (status = (status~ ++ {i |-> <fr>}))ClearWait((i'Subscriber))	ext [wr status'?, wr calls'?]	pre (i in set (dom (status '> {<WI>})))	post ((status = (status~ ++ {i |-> <fr>, calls(i) |-> <fr>})) and (calls = ({i} <-' calls~)))ClearSpeak((i'Subscriber))	ext [wr status'?, wr calls'?]	pre (i in set (dom (status '> {<SI>})))	post ((status = (status~ ++ {i |-> <fr>, calls(i) |-> <un>})) and (calls = ({i} <-' calls~)))Suspend((r'Subscriber))	ext [rd calls'?, wr status'?]	pre (r in set (dom (status '> {<SR>})))	post (status = (status~ ++ {r |-> <WR>, (inverse calls)(r) |-> <WI>}))ClearUn((s'Subscriber))	ext [wr status'?]	pre (s in set (dom (status '> {<un>})))	post (status = (status~ ++ {s |-> <fr>}))end EXCH

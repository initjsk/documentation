RESULT:result:-1:-1,-1:module EXCHexports alldefinitionsstatic private Subscriber = tokenstatic private Initiator = (<AI> | <SI> | <WI>)static private Recipient = (<SR> | <WR>)static private Status = ((unresolved EXCH`Initiator) | (unresolved EXCH`Recipient) | <fr> | <un>)state Exchangeof[status'map ((unresolved EXCH`Subscriber)) to ((unresolved EXCH`Status)), calls'inmap of ((unresolved EXCH`Subscriber)) to ((unresolved EXCH`Subscriber))]	inv mk_(unresolved EXCH`Exchange)(status, calls) == (forall i in set (dom calls) & (((status(i) = <WI>) and (status(calls(i)) = <WR>)) or ((status(i) = <SI>) and (status(calls(i)) = <SR>))))Lift((s'(unresolved EXCH`Subscriber)))	ext [wr status'?]	pre (s in set (dom (status '> {<fr>})))	post (status = (status~ ++ {s |-> <AI>}))Connect((i'(unresolved EXCH`Subscriber)), (r'(unresolved EXCH`Subscriber)))	ext [wr status'?, wr calls'?]	pre ((i in set (dom (status '> {<AI>}))) and (r in set (dom (status '> {<fr>}))))	post ((status = (status~ ++ {i |-> <WI>, r |-> <WR>})) and (calls = (calls~ ++ {i |-> r})))MakeUn((i'(unresolved EXCH`Subscriber)))	ext [wr status'?]	pre (i in set (dom (status '> {<AI>})))	post (status = (status~ ++ {i |-> <un>}))Answer((r'(unresolved EXCH`Subscriber)))	ext [rd calls'?, wr status'?]	pre (r in set (dom (status '> {<WR>})))	post (status = (status~ ++ {r |-> <SR>, (inverse calls)(r) |-> <SI>}))ClearAttempt((i'(unresolved EXCH`Subscriber)))	ext [wr status'?]	pre (i in set (dom (status '> {<AI>})))	post (status = (status~ ++ {i |-> <fr>}))ClearWait((i'(unresolved EXCH`Subscriber)))	ext [wr status'?, wr calls'?]	pre (i in set (dom (status '> {<WI>})))	post ((status = (status~ ++ {i |-> <fr>, calls(i) |-> <fr>})) and (calls = ({i} <-' calls~)))ClearSpeak((i'(unresolved EXCH`Subscriber)))	ext [wr status'?, wr calls'?]	pre (i in set (dom (status '> {<SI>})))	post ((status = (status~ ++ {i |-> <fr>, calls(i) |-> <un>})) and (calls = ({i} <-' calls~)))Suspend((r'(unresolved EXCH`Subscriber)))	ext [rd calls'?, wr status'?]	pre (r in set (dom (status '> {<SR>})))	post (status = (status~ ++ {r |-> <WR>, (inverse calls)(r) |-> <WI>}))ClearUn((s'(unresolved EXCH`Subscriber)))	ext [wr status'?]	pre (s in set (dom (status '> {<un>})))	post (status = (status~ ++ {s |-> <fr>}))end EXCH

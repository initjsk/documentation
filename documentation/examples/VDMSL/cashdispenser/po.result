RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)accounts, accounts~, illegalCards, illegalCards~, curCard, curCard~, cardOk, cardOk~, retainedCards, retainedCards~, System' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 11'13(forall mk_System(accs, -, curCard, cardOk, -)'System &  (((curCard = nil) => (not cardOk)) =>    (forall id1, id2 in set (dom accs) &      id1 in set dom accs)))Proof Obligation 2' (Unproved)accounts, accounts~, illegalCards, illegalCards~, curCard, curCard~, cardOk, cardOk~, retainedCards, retainedCards~, System' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 11'39(forall mk_System(accs, -, curCard, cardOk, -)'System &  (((curCard = nil) => (not cardOk)) =>    (forall id1, id2 in set (dom accs) &      id2 in set dom accs)))Proof Obligation 3' (Trivial by <forall x in set s & x in set s>)TransactionsInvariant' sequence apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 42'25(forall ts'seq of (Transaction) &  (forall i in set (inds ts) &    i in set inds ts))Proof Obligation 4' (Trivial by <forall x in set s & x in set s>)DateTotal' sequence apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 47'10(forall date'Date, ts'seq of (Transaction) &  (forall i in set (inds ts) & ((ts(i).date) = date) =>    i in set inds ts))Proof Obligation 5' (Trivial by <forall x in set s & x in set s>)DateTotal' sequence apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 47'44(forall date'Date, ts'seq of (Transaction) &  (forall i in set (inds ts) &    i in set inds ts))Proof Obligation 6' (Unproved)DateTotal' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 45'3(forall date'Date, ts'seq of (Transaction) &  Sum([(ts(i).amount) | i in set (inds ts) & ((ts(i).date) = date)]) >= 0)Proof Obligation 7' (Unproved)InsertCard' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 56'5-- After curCard '= clet mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 8' (Unproved)Validate, cardLegal' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 62'33is_(curCard, Card)Proof Obligation 9' (Unproved)Validate' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 65'10-- After retainedCards '= (retainedCards union {curCard})let mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 10' (Unproved)Validate' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 65'41is_((retainedCards union {curCard}), set of (Card))Proof Obligation 11' (Unproved)Validate' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 66'10-- After cardOk '= falselet mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 12' (Unproved)Validate' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 67'10-- After curCard '= nillet mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 13' (Unproved)Validate' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 70'10-- After cardOk '= codeOklet mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 14' (Unproved)ReturnCard' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 78'6-- After cardOk '= falselet mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 15' (Unproved)ReturnCard' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 79'6-- After curCard '= nillet mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 16' (Unproved)GetBalance' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 85'49((curCard <> nil) =>  (cardOk =>    is_(curCard, Card)))Proof Obligation 17' (Unproved)GetBalance' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 84'12(curCard.accountId) in set dom accountsProof Obligation 18' (Unproved)MakeWithdrawal' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 103'49((curCard <> nil) =>  (cardOk =>    is_(curCard, Card)))Proof Obligation 19' (Unproved)MakeWithdrawal' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 92'10accountId in set dom accountsProof Obligation 20' (Unproved)MakeWithdrawal' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 93'24((((accounts(accountId).balance) - amount) >= 0) =>  accountId in set dom accounts)Proof Obligation 21' (Unproved)MakeWithdrawal' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 96'10-- After accounts(accountId).balance '= ((accounts(accountId).balance) - amount)let mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 22' (Unproved)MakeWithdrawal' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 97'12accountId in set dom accountsProof Obligation 23' (Unproved)MakeWithdrawal' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 97'40((accounts(accountId).balance) - amount) >= 0Proof Obligation 24' (Unproved)MakeWithdrawal' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 98'10-- After accounts(accountId).transactions '= ((accounts(accountId).transactions) ^ [transaction])let mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 25' (Unproved)MakeWithdrawal' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 99'12accountId in set dom accountsProof Obligation 26' (Unproved)RequestStatement' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 111'49((curCard <> nil) =>  (cardOk =>    is_(curCard, Card)))Proof Obligation 27' (Unproved)RequestStatement, cards, balance, transactions' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 108'50accountId in set dom accountsProof Obligation 28' (Unproved)RequestStatement' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 110'18cardId in set dom cardsProof Obligation 29' (Unproved)IsLegalCard' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 119'24(forall mk_Card(-, cardId, accountId)'Card, pillegalcards'set of (CardId), paccounts'map (AccountId) to (Account) &  ((cardId not in set pillegalcards) =>    ((accountId in set (dom paccounts)) =>      accountId in set dom paccounts)))Proof Obligation 30' (Unproved)ReportIllegalCard' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 125'5-- After illegalCards '= (illegalCards union {cardId})let mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 31' (Unproved)AddAccount' state invariant obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 129'5-- After accounts '= (accounts munion {accountId |-> account})let mk_System(accs, -, curCard, cardOk, -) = System in (((curCard = nil) => (not cardOk)) and (forall id1, id2 in set (dom accs) & ((id1 <> id2) => (((dom (accs(id1).cards)) inter (dom (accs(id2).cards))) = {}))))Proof Obligation 32' (Unproved)AddAccount' map compatible obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 129'17forall ldom1 in set dom accounts, rdom2 in set dom {accountId |-> account} &ldom1 = rdom2 => accounts(ldom1) = {accountId |-> account}(rdom2)Proof Obligation 33' (Trivial by <not x = y => x <> y>)Sum' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 141'10(forall rs'seq of (real) &  (not (rs = []) =>    rs <> []))Proof Obligation 34' (Unproved)Sum' recursive function obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 137'3(forall rs'seq of (real) &  (not (rs = []) =>    Len(rs) > Len((tl rs))))Proof Obligation 35' (Trivial by <not x = y => x <> y>)Sum' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/cashdispenser/cashdispenser.vdmsl) at line 141'22(forall rs'seq of (real) &  (not (rs = []) =>    rs <> []))

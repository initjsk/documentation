RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)BOM' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 7'43(forall bom'map (Pn) to (set of (Pn)) &  ((forall ps in set (rng bom) & (ps subset (dom bom))) =>    (forall p in set (dom bom) &      pre_Parts(p, bom))))Proof Obligation 2' (Unproved)bom' map sequence compatible obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 13'7forall m1, m2 in set {{1 |-> {2, 4}}, {2 |-> {3, 4, 5}}, {3 |-> {5, 6}}, {4 |-> {6}}, {5 |-> {4}}, {6 |-> {}}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 3' (Unproved)cycle' map sequence compatible obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 16'9forall m1, m2 in set {{1 |-> {2, 4}}, {2 |-> {3, 4, 5}}, {3 |-> {5, 6}}, {4 |-> {6}}, {5 |-> {4}}, {6 |-> {1}}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 4' (Unproved)Parts' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 23'3(forall p'Pn, bom'map (Pn) to (set of (Pn)) & (p in set (dom bom)) =>  pre_TransClos(bom, bom(p)))Proof Obligation 5' (Trivial by <x in set s => x in set s>)Parts' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 23'18(forall p'Pn, bom'map (Pn) to (set of (Pn)) & (p in set (dom bom)) =>  p in set dom bom)Proof Obligation 6' (Unproved)TransClos' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 28'27(forall bom'map (Pn) to (set of (Pn)), ps'set of (Pn) & (ps subset (dom bom)) =>  (forall p in set ps &    p in set dom bom))Proof Obligation 7' (Unproved)TransClos, newps' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 30'29(forall bom'map (Pn) to (set of (Pn)), ps'set of (Pn) & (ps subset (dom bom)) =>  (not (forall p in set ps & (bom(p) subset ps)) =>    (forall p in set ps &      p in set dom bom)))Proof Obligation 8' (Unproved)TransClos' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 32'10(forall bom'map (Pn) to (set of (Pn)), ps'set of (Pn) & (ps subset (dom bom)) =>  (not (forall p in set ps & (bom(p) subset ps)) =>    (let newps'set of (Pn) = (dunion {bom(p) | [p in set ps]}) in      pre_TransClos(bom, (ps union newps)))))Proof Obligation 9' (Unproved)TransClos' recursive function obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 26'1(forall bom'map (Pn) to (set of (Pn)), ps'set of (Pn) & (ps subset (dom bom)) =>  (not (forall p in set ps & (bom(p) subset ps)) =>    (let newps'set of (Pn) = (dunion {bom(p) | [p in set ps]}) in      IncrAcc(bom, ps) > IncrAcc(bom, (ps union newps)))))Proof Obligation 10' (Unproved)IncrAcc' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 36'1(forall bom'map (Pn) to (set of (Pn)), pns'set of (Pn) &  ((card (dom bom)) - (card pns)) >= 0)Proof Obligation 11' (Trivial by <x in set s => x in set s>)Explode' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 42'3(forall p'Pn, bom'BOM & (p in set (dom bom)) =>  p in set dom bom)Proof Obligation 12' (Unproved)Explode' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 42'16(forall p'Pn, bom'BOM & (p in set (dom bom)) =>  pre_Exps(bom, bom(p)))Proof Obligation 13' (Trivial by <x in set s => x in set s>)Explode' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 42'26(forall p'Pn, bom'BOM & (p in set (dom bom)) =>  p in set dom bom)Proof Obligation 14' (Unproved)Exps' let be st existence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 49'12(forall bom'BOM, ps'set of (Pn) & (ps subset (dom bom)) =>  (not (ps = {}) =>    exists p1 in set ps))Proof Obligation 15' (Unproved)Exps' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 51'10(forall bom'BOM, ps'set of (Pn) & (ps subset (dom bom)) =>  (not (ps = {}) =>    (forall p1 in set ps &      pre_Explode(p1, bom))))Proof Obligation 16' (Unproved)Exps' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 51'33(forall bom'BOM, ps'set of (Pn) & (ps subset (dom bom)) =>  (not (ps = {}) =>    (forall p1 in set ps &      pre_Exps(bom, (ps \ {p1})))))Proof Obligation 17' (Unproved)Enter' map compatible obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 56'3(forall bom'BOM, p'Pn, ps'set of (Pn) & ((p not in set (dom bom)) and (ps subset (dom bom))) =>  forall ldom1 in set dom bom, rdom2 in set dom {p |-> ps} &  ldom1 = rdom2 => bom(ldom1) = {p |-> ps}(rdom2))Proof Obligation 18' (Unproved)Enter' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 54'1(forall bom'BOM, p'Pn, ps'set of (Pn) & ((p not in set (dom bom)) and (ps subset (dom bom))) =>  inv_BOM((bom munion {p |-> ps})) and (is_((bom munion {p |-> ps}), map (Pn) to (set of (Pn)))))Proof Obligation 19' (Unproved)Add' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 68'20(forall p1'Pn, p2'Pn, bom'BOM &  ((p1 in set (dom bom)) =>    ((p2 in set (dom bom)) =>      p1 in set dom bom)))Proof Obligation 20' (Unproved)Add' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 68'48(forall p1'Pn, p2'Pn, bom'BOM &  ((p1 in set (dom bom)) =>    ((p2 in set (dom bom)) =>      ((p2 not in set bom(p1)) =>        pre_Explode(p2, bom)))))Proof Obligation 21' (Unproved)Add' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 66'18(forall p1'Pn, p2'Pn, bom'BOM & ((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom))))) =>  p1 in set dom bom)Proof Obligation 22' (Unproved)Add' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 64'1(forall p1'Pn, p2'Pn, bom'BOM & ((p1 in set (dom bom)) and ((p2 in set (dom bom)) and ((p2 not in set bom(p1)) and (p1 not in set Explode(p2, bom))))) =>  inv_BOM((bom ++ {p1 |-> (bom(p1) union {p2})})) and (is_((bom ++ {p1 |-> (bom(p1) union {p2})}), map (Pn) to (set of (Pn)))))Proof Obligation 23' (Unproved)Erase' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 74'16(forall p1'Pn, p2'Pn, bom'BOM &  ((p1 in set (dom bom)) =>    ((p2 in set (dom bom)) =>      p1 in set dom bom)))Proof Obligation 24' (Unproved)Erase' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 72'19(forall p1'Pn, p2'Pn, bom'BOM & ((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1)))) =>  p1 in set dom bom)Proof Obligation 25' (Unproved)Erase' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/BOM/bom.vdmsl) at line 70'1(forall p1'Pn, p2'Pn, bom'BOM & ((p1 in set (dom bom)) and ((p2 in set (dom bom)) and (p2 in set bom(p1)))) =>  inv_BOM((bom ++ {p1 |-> (bom(p1) \ {p2})})) and (is_((bom ++ {p1 |-> (bom(p1) \ {p2})}), map (Pn) to (set of (Pn)))))

RESULT:result:-1:-1,-1:module GRAPHexportsexport alldefinitionsstatic private Point = compose Point of xcoord'nat, ycoord'nat endstatic private LineSegment = compose LineSegment of end1'(unresolved GRAPH`Point), end2'(unresolved GRAPH`Point) end	inv mk_(unresolved GRAPH`LineSegment)(end1, end2) == (end1 <> end2)static private Circle = compose Circle of center'(unresolved GRAPH`Point), radius'nat1 endstatic private Ellipse = compose Ellipse of center'(unresolved GRAPH`Point), xradius'nat1, yradius'nat1 endstatic private Polygon = compose Polygon of vertices'seq1 of ((unresolved GRAPH`Point)) end	inv mk_(unresolved GRAPH`Polygon)(points) == ((len points) > 2)static private Polyline = compose Polyline of vertices'seq1 of ((unresolved GRAPH`Point)) end	inv mk_(unresolved GRAPH`Polyline)(points) == ((len points) > 1)static private Box = compose Box of corner1'(unresolved GRAPH`Point), corner2'(unresolved GRAPH`Point) end	inv mk_(unresolved GRAPH`Box)(corner1, corner2) == (((corner1.xcoord) <> (corner2.xcoord)) and ((corner1.ycoord) <> (corner2.ycoord)))static private ArcBox = compose ArcBox of box'(unresolved GRAPH`Box), cornerradius'nat1 endstatic private Text = compose Text of frame'(unresolved GRAPH`Box), startpoint'(unresolved GRAPH`Point), string'seq of (char) end	inv mk_(unresolved GRAPH`Text)(frame, startpoint, string) == (((abs (((frame.corner1).ycoord) - ((frame.corner2).ycoord))) >= 20) and (point_within_box(startpoint, frame) and (((((frame.corner1).ycoord) < ((frame.corner2).ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) <= ((frame.corner2).ycoord))) or ((((frame.corner1).ycoord) > ((frame.corner2).ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) <= ((frame.corner1).ycoord))))))static private Compound = compose Compound of frame'(unresolved GRAPH`Box), components'seq1 of ((unresolved GRAPH`Object)) end	inv mk_(unresolved GRAPH`Compound)(frame, components) == (forall obj in set (elems components) & object_within_box(obj, frame))static private Object = ((unresolved GRAPH`ArcBox) | (unresolved GRAPH`Box) | (unresolved GRAPH`Circle) | (unresolved GRAPH`Compound) | (unresolved GRAPH`Ellipse) | (unresolved GRAPH`Polygon) | (unresolved GRAPH`Polyline) | (unresolved GRAPH`Text))static private Message = (<ERROR_FRAME_SIZE> | <ERROR_NUM_VERTICES> | <ERROR_START_POINT> | <NOT_COMPOUND> | <NOT_FIT> | <NO_COMPONENT> | <SUCCESS> | <TEXT_NOT_FIT>)state GraphEditorof[DRAWING_AREA'(unresolved GRAPH`Box), OBJECTS'seq of ((unresolved GRAPH`Object))]	inv mk_(unresolved GRAPH`GraphEditor)(drawing_area, objects) == ((((drawing_area.corner1).xcoord) = 0) and ((((drawing_area.corner1).ycoord) = 0) and ((((drawing_area.corner2).xcoord) = 500) and ((((drawing_area.corner2).ycoord) = 350) and (forall object in set (elems objects) & object_within_box(object, drawing_area))))))	init mk_(unresolved GRAPH`GraphEditor)(drawing_area, objects) == ((((drawing_area.corner1).xcoord) = 0) and ((((drawing_area.corner1).ycoord) = 0) and ((((drawing_area.corner2).xcoord) = 500) and ((((drawing_area.corner2).ycoord) = 350) and (objects = [])))))point_on_line' ((unresolved GRAPH`Point) * (unresolved GRAPH`LineSegment) +> bool)	point_on_line(point, line) ==(((((point.xcoord) - ((line.end2).xcoord)) * (((line.end1).xcoord) - ((line.end2).xcoord))) > 0) and ((((point.xcoord) - ((line.end2).xcoord)) < (((line.end1).xcoord) - ((line.end2).xcoord))) and ((((point.xcoord) - ((line.end2).xcoord)) * (((line.end1).ycoord) - ((line.end2).ycoord))) = ((((line.end1).xcoord) - ((line.end2).xcoord)) * ((point.ycoord) - ((line.end2).ycoord))))))point_on_circle' ((unresolved GRAPH`Point) * (unresolved GRAPH`Circle) +> bool)	point_on_circle(point, circle) ==((((((circle.center).xcoord) - (point.xcoord)) ** 2) + ((((circle.center).ycoord) - (point.ycoord)) ** 2)) = ((circle.radius) ** 2))point_on_ellipse' ((unresolved GRAPH`Point) * (unresolved GRAPH`Ellipse) +> bool)	point_on_ellipse(point, ellipse) ==(((((ellipse.yradius) ** 2) * ((((ellipse.center).xcoord) - (point.xcoord)) ** 2)) + (((ellipse.xradius) ** 2) * ((((ellipse.center).ycoord) - (point.ycoord)) ** 2))) = (((ellipse.xradius) ** 2) * ((ellipse.yradius) ** 2)))point_on_polygon' ((unresolved GRAPH`Point) * (unresolved GRAPH`Polygon) +> bool)	point_on_polygon(point, polygon) ==(exists [index in set (inds (polygon.vertices))] & point_on_line(point, mk_LineSegment((polygon.vertices)(index), (polygon.vertices)(((index mod (len (polygon.vertices))) + 1)))))point_on_polyline' ((unresolved GRAPH`Point) * (unresolved GRAPH`Polyline) +> bool)	point_on_polyline(point, polyline) ==(exists [index in set {i | [i'nat1] & ((i in set (inds (polyline.vertices))) and (i <> (len (polyline.vertices))))}] & point_on_line(point, mk_LineSegment((polyline.vertices)(index), (polyline.vertices)((index + 1)))))point_on_box' ((unresolved GRAPH`Point) * (unresolved GRAPH`Box) +> bool)	point_on_box(point, box) ==((((((point.xcoord) >= ((box.corner1).xcoord)) and ((point.xcoord) <= ((box.corner2).xcoord))) or (((point.xcoord) >= ((box.corner2).xcoord)) and ((point.xcoord) <= ((box.corner1).xcoord)))) and (((point.ycoord) = ((box.corner1).ycoord)) or ((point.ycoord) = ((box.corner2).ycoord)))) or (((((point.ycoord) >= ((box.corner1).ycoord)) and ((point.ycoord) <= ((box.corner2).ycoord))) or (((point.ycoord) >= ((box.corner2).ycoord)) and ((point.ycoord) <= ((box.corner1).ycoord)))) and (((point.xcoord) = ((box.corner1).xcoord)) or ((point.xcoord) = ((box.corner2).xcoord)))))point_on_arcbox' ((unresolved GRAPH`Point) * (unresolved GRAPH`ArcBox) +> bool)	point_on_arcbox(point, arcbox) ==point_on_box(point, (arcbox.box))point_on_text' ((unresolved GRAPH`Point) * (unresolved GRAPH`Text) +> bool)	point_on_text(point, text) ==point_within_box(point, (text.frame))point_on_compound' ((unresolved GRAPH`Point) * (unresolved GRAPH`Compound) +> bool)	point_on_compound(point, compound) ==point_on_box(point, (compound.frame))point_on_object' ((unresolved GRAPH`Point) * (unresolved GRAPH`Object) +> bool)	point_on_object(point, object) ==((is_(object, Circle) and point_on_circle(point, object)) or ((is_(object, Ellipse) and point_on_ellipse(point, object)) or ((is_(object, Polygon) and point_on_polygon(point, object)) or ((is_(object, Polyline) and point_on_polyline(point, object)) or ((is_(object, Box) and point_on_box(point, object)) or ((is_(object, ArcBox) and point_on_box(point, (object.box))) or ((is_(object, Text) and point_within_box(point, (object.frame))) or (is_(object, Compound) and point_on_box(point, (object.frame))))))))))point_within_box' ((unresolved GRAPH`Point) * (unresolved GRAPH`Box) +> bool)	point_within_box(point, box) ==(((((point.xcoord) > ((box.corner1).xcoord)) and ((point.xcoord) < ((box.corner2).xcoord))) or (((point.xcoord) > ((box.corner2).xcoord)) and ((point.xcoord) < ((box.corner1).xcoord)))) and ((((point.ycoord) > ((box.corner1).ycoord)) and ((point.ycoord) < ((box.corner2).ycoord))) or (((point.ycoord) > ((box.corner2).ycoord)) and ((point.ycoord) < ((box.corner1).ycoord)))))circle_within_box' ((unresolved GRAPH`Circle) * (unresolved GRAPH`Box) +> bool)	circle_within_box(circle, box) ==(point_within_box(mk_Point((((circle.center).xcoord) + (circle.radius)), ((circle.center).ycoord)), box) and (point_within_box(mk_Point((((circle.center).xcoord) - (circle.radius)), ((circle.center).ycoord)), box) and (point_within_box(mk_Point(((circle.center).xcoord), (((circle.center).ycoord) + (circle.radius))), box) and point_within_box(mk_Point(((circle.center).xcoord), (((circle.center).ycoord) - (circle.radius))), box))))ellipse_within_box' ((unresolved GRAPH`Ellipse) * (unresolved GRAPH`Box) +> bool)	ellipse_within_box(ellipse, box) ==(point_within_box(mk_Point((((ellipse.center).xcoord) + (ellipse.xradius)), ((ellipse.center).ycoord)), box) and (point_within_box(mk_Point((((ellipse.center).xcoord) - (ellipse.xradius)), ((ellipse.center).ycoord)), box) and (point_within_box(mk_Point(((ellipse.center).xcoord), (((ellipse.center).ycoord) + (ellipse.yradius))), box) and point_within_box(mk_Point(((ellipse.center).xcoord), (((ellipse.center).ycoord) - (ellipse.yradius))), box))))polygon_within_box' ((unresolved GRAPH`Polygon) * (unresolved GRAPH`Box) +> bool)	polygon_within_box(polygon, box) ==(forall vertex in set (elems (polygon.vertices)) & point_within_box(vertex, box))polyline_within_box' ((unresolved GRAPH`Polyline) * (unresolved GRAPH`Box) +> bool)	polyline_within_box(polyline, box) ==(forall vertex in set (elems (polyline.vertices)) & point_within_box(vertex, box))box_within_box' ((unresolved GRAPH`Box) * (unresolved GRAPH`Box) +> bool)	box_within_box(box1, box2) ==(point_within_box((box1.corner1), box2) and point_within_box((box1.corner2), box2))object_within_box' ((unresolved GRAPH`Object) * (unresolved GRAPH`Box) +> bool)	object_within_box(object, box) ==((is_(object, Circle) and circle_within_box(object, box)) or ((is_(object, Ellipse) and ellipse_within_box(object, box)) or ((is_(object, Polygon) and polygon_within_box(object, box)) or ((is_(object, Polyline) and polyline_within_box(object, box)) or ((is_(object, Box) and box_within_box(object, box)) or ((is_(object, ArcBox) and box_within_box((object.box), box)) or ((is_(object, Text) and box_within_box((object.frame), box)) or (is_(object, Compound) and box_within_box((object.frame), box)))))))))private copy_point((point'(unresolved GRAPH`Point)), (vector'(unresolved GRAPH`LineSegment)))newpoint'(unresolved GRAPH`Point)	post (((newpoint.xcoord) = (((point.xcoord) + ((vector.end2).xcoord)) - ((vector.end1).xcoord))) and ((newpoint.ycoord) = (((point.ycoord) + ((vector.end2).ycoord)) - ((vector.end1).ycoord))))private copy_points((points'seq1 of ((unresolved GRAPH`Point))), (vector'(unresolved GRAPH`LineSegment)))newpoints'seq1 of ((unresolved GRAPH`Point))	post (((len points) = (len newpoints)) and (forall i in set (inds points) & (newpoints(i) = copy_point(points(i), vector))))private make_copy_object((obj'(unresolved GRAPH`Object)), (vector'(unresolved GRAPH`LineSegment)))newobj'(unresolved GRAPH`Object)	post ((is_(obj, Circle) and (newobj = mk_Circle(copy_point((obj.center), vector), (obj.radius)))) or ((is_(obj, Ellipse) and (newobj = mk_Ellipse(copy_point((obj.center), vector), (obj.xradius), (obj.yradius)))) or ((is_(obj, Polygon) and (newobj = mk_Polygon(copy_points((obj.vertices), vector)))) or ((is_(obj, Polyline) and (newobj = mk_Polyline(copy_points((obj.vertices), vector)))) or ((is_(obj, Box) and (newobj = mk_Box(copy_point((obj.corner1), vector), copy_point((obj.corner2), vector)))) or ((is_(obj, ArcBox) and (newobj = mk_ArcBox(mk_Box(copy_point(((obj.box).corner1), vector), copy_point(((obj.box).corner2), vector)), (obj.cornerradius)))) or ((is_(obj, Text) and (newobj = mk_Text(mk_Box(copy_point(((obj.frame).corner1), vector), copy_point(((obj.frame).corner2), vector)), copy_point((obj.startpoint), vector), (obj.string)))) or (is_(obj, Compound) and (newobj = mk_Compound(mk_Box(copy_point(((obj.frame).corner1), vector), copy_point(((obj.frame).corner2), vector)), make_copy_objects((obj.components), vector)))))))))))private make_copy_objects((objs'seq1 of ((unresolved GRAPH`Object))), (vector'(unresolved GRAPH`LineSegment)))newobjs'seq1 of ((unresolved GRAPH`Object))	post (((len newobjs) = (len objs)) and (newobjs = [make_copy_object(objs(i), vector) | i in set (inds objs)]))create_circle((center'(unresolved GRAPH`Point)), (radius'nat1)) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre circle_within_box(mk_Circle(center, radius), DRAWING_AREA)	post ((OBJECTS = ([mk_Circle(center, radius)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not circle_within_box(mk_Circle(center, radius), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]create_ellipse((center'(unresolved GRAPH`Point)), (xradius'nat1), (yradius'nat1)) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ellipse_within_box(mk_Ellipse(center, xradius, yradius), DRAWING_AREA)	post ((OBJECTS = ([mk_Ellipse(center, xradius, yradius)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not ellipse_within_box(mk_Ellipse(center, xradius, yradius), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]create_polygon((vertices'seq1 of ((unresolved GRAPH`Point)))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre polygon_within_box(mk_Polygon(vertices), DRAWING_AREA)	post ((OBJECTS = ([mk_Polygon(vertices)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not polygon_within_box(mk_Polygon(vertices), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]create_polyline((vertices'seq1 of ((unresolved GRAPH`Point)))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre polyline_within_box(mk_Polyline(vertices), DRAWING_AREA)	post ((OBJECTS = ([mk_Polyline(vertices)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not polyline_within_box(mk_Polyline(vertices), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]create_box((corner1'(unresolved GRAPH`Point)), (corner2'(unresolved GRAPH`Point))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre box_within_box(mk_Box(corner1, corner2), DRAWING_AREA)	post ((OBJECTS = ([mk_Box(corner1, corner2)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]create_arcbox((corner1'(unresolved GRAPH`Point)), (corner2'(unresolved GRAPH`Point)), (cornerradius'nat1)) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre box_within_box(mk_Box(corner1, corner2), DRAWING_AREA)	post ((OBJECTS = ([mk_ArcBox(mk_Box(corner1, corner2), cornerradius)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]create_text((corner1'(unresolved GRAPH`Point)), (corner2'(unresolved GRAPH`Point)), (startpoint'(unresolved GRAPH`Point)), (string'seq of (char))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre (box_within_box(mk_Box(corner1, corner2), DRAWING_AREA) and (((abs ((corner1.ycoord) - (corner2.ycoord))) >= 20) and (point_within_box(startpoint, mk_Box(corner1, corner2)) and ((((corner1.ycoord) < (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) <= (corner2.ycoord))) or (((corner1.ycoord) > (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) <= (corner1.ycoord)))))))	post ((OBJECTS = ([mk_Text(mk_Box(corner1, corner2), startpoint, string)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>))), (FRAME_SIZE' ((abs ((corner1.ycoord) - (corner2.ycoord))) < 20)->((OBJECTS = OBJECTS~) and (msg = <ERROR_FRAME_SIZE>))), (START_POINT' (not point_within_box(startpoint, mk_Box(corner1, corner2)))->((OBJECTS = OBJECTS~) and (msg = <ERROR_START_POINT>))), (TEXT_NOT_FIT' ((((corner1.ycoord) < (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) > (corner2.ycoord))) or (((corner1.ycoord) > (corner2.ycoord)) and (((startpoint.ycoord) + ((len string) * 10)) > (corner1.ycoord))))->((OBJECTS = OBJECTS~) and (msg = <TEXT_NOT_FIT>)))]create_compound_object((corner1'(unresolved GRAPH`Point)), (corner2'(unresolved GRAPH`Point))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre (box_within_box(mk_Box(corner1, corner2), DRAWING_AREA) and (exists [object in set (elems OBJECTS)] & object_within_box(object, mk_Box(corner1, corner2))))	post let components'seq1 of ((unresolved GRAPH`Object)) = [OBJECTS~(i) | i in set (inds OBJECTS~) & object_within_box(OBJECTS~(i), mk_Box(corner1, corner2))] in ((OBJECTS = ([mk_Compound(mk_Box(corner1, corner2), components)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (not object_within_box(OBJECTS~(i), mk_Box(corner1, corner2)))])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(corner1, corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>))), (NO_COMPONENT' (not (exists [object in set (elems OBJECTS)] & object_within_box(object, mk_Box(corner1, corner2))))->((OBJECTS = OBJECTS~) and (msg = <NO_COMPONENT>)))]select_object((click'(unresolved GRAPH`Point))) object'[(unresolved GRAPH`Object)]	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), rd OBJECTS'seq of ((unresolved GRAPH`Object))]	pre point_within_box(click, DRAWING_AREA)	post ((object in set (elems OBJECTS)) and (point_on_object(click, object) and (forall i in set {index | [index'nat1, j'nat1] & ((index in set (inds OBJECTS)) and ((index < j) and (OBJECTS(j) = object)))} & (not point_on_object(click, OBJECTS(i))))))	errs [(NO_SELECT' (not (exists [obj in set (elems OBJECTS)] & point_on_object(click, obj)))->(object = nil))]decompose_compound_object((object'(unresolved GRAPH`Object))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre (is_(object, Compound) and (object in set (elems OBJECTS)))	post ((OBJECTS = ((object.components) ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> object)])) and (msg = <SUCCESS>))	errs [(NOT_COMPOUND' (not is_(object, Compound))->(msg = <NOT_COMPOUND>))]delete_object((object'(unresolved GRAPH`Object)))	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre (object in set (elems OBJECTS))	post (OBJECTS = [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> object)])move_object((object'(unresolved GRAPH`Object)), (vector'(unresolved GRAPH`LineSegment))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre (object in set (elems OBJECTS))	post ((is_(object, Compound) and (msg = move_compound_object(object, vector))) or ((not is_(object, Compound)) and (msg = move_simple_object(object, vector))))move_simple_object((object'(unresolved GRAPH`Object)), (vector'(unresolved GRAPH`LineSegment))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((object in set (elems OBJECTS)) and ((not is_(object, Compound)) and object_within_box(make_copy_object(object, vector), DRAWING_AREA)))	post ((OBJECTS = ([make_copy_object(object, vector)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> object)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not object_within_box(make_copy_object(object, vector), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]move_compound_object((compound'(unresolved GRAPH`Compound)), (vector'(unresolved GRAPH`LineSegment))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((compound in set (elems OBJECTS)) and object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA))	post ((OBJECTS = ([make_copy_object(compound, vector)] ^ [OBJECTS(i) | i in set (inds OBJECTS) & (OBJECTS(i) <> compound)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]copy_object((object'(unresolved GRAPH`Object)), (vector'(unresolved GRAPH`LineSegment))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre (object in set (elems OBJECTS))	post ((is_(object, Compound) and (msg = copy_compound_object(object, vector))) or ((not is_(object, Compound)) and (msg = copy_simple_object(object, vector))))copy_simple_object((object'(unresolved GRAPH`Object)), (vector'(unresolved GRAPH`LineSegment))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((object in set (elems OBJECTS)) and ((not is_(object, Compound)) and object_within_box(make_copy_object(object, vector), DRAWING_AREA)))	post ((OBJECTS = ([make_copy_object(object, vector)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not object_within_box(make_copy_object(object, vector), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]copy_compound_object((compound'(unresolved GRAPH`Compound)), (vector'(unresolved GRAPH`LineSegment))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((compound in set (elems OBJECTS)) and (is_(compound, Compound) and object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA)))	post ((OBJECTS = ([make_copy_object(compound, vector)] ^ OBJECTS~)) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not object_within_box(make_copy_object((compound.frame), vector), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]resize_circle((circle'(unresolved GRAPH`Circle)), (new_radius'nat1)) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((circle in set (elems OBJECTS)) and circle_within_box(mk_Circle((circle.center), new_radius), DRAWING_AREA))	post ((OBJECTS = ([mk_Circle((circle.center), new_radius)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> circle)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not circle_within_box(mk_Circle((circle.center), new_radius), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]resize_ellipse((ellipse'(unresolved GRAPH`Ellipse)), (new_xradius'nat1), (new_yradius'nat1)) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((ellipse in set (elems OBJECTS)) and ellipse_within_box(mk_Ellipse((ellipse.center), new_xradius, new_yradius), DRAWING_AREA))	post ((OBJECTS = ([mk_Ellipse((ellipse.center), new_xradius, new_yradius)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> ellipse)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not ellipse_within_box(mk_Ellipse((ellipse.center), new_xradius, new_yradius), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]resize_polygon((polygon'(unresolved GRAPH`Polygon)), (new_vertices'seq1 of ((unresolved GRAPH`Point)))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((polygon in set (elems OBJECTS)) and (((len new_vertices) = (len (polygon.vertices))) and polygon_within_box(mk_Polygon(new_vertices), DRAWING_AREA)))	post ((OBJECTS = ([mk_Polygon(new_vertices)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> polygon)])) and (msg = <SUCCESS>))	errs [(NUM_VERTICES' ((len new_vertices) <> (len (polygon.vertices)))->((OBJECTS = OBJECTS~) and (msg = <ERROR_NUM_VERTICES>))), (NOT_FIT' (not polygon_within_box(mk_Polygon(new_vertices), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]resize_polyline((polyline'(unresolved GRAPH`Polyline)), (new_vertices'seq1 of ((unresolved GRAPH`Point)))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((polyline in set (elems OBJECTS)) and (((len new_vertices) = (len (polyline.vertices))) and polyline_within_box(mk_Polyline(new_vertices), DRAWING_AREA)))	post ((OBJECTS = ([mk_Polyline(new_vertices)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> polyline)])) and (msg = <SUCCESS>))	errs [(NUM_VERTICES' ((len new_vertices) <> (len (polyline.vertices)))->((OBJECTS = OBJECTS~) and (msg = <ERROR_NUM_VERTICES>))), (NOT_FIT' (not polyline_within_box(mk_Polyline(new_vertices), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]resize_box((box'(unresolved GRAPH`Box)), (new_corner1'(unresolved GRAPH`Point)), (new_corner2'(unresolved GRAPH`Point))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((box in set (elems OBJECTS)) and box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))	post ((OBJECTS = ([mk_Box(new_corner1, new_corner2)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> box)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]resize_arcbox((arcbox'(unresolved GRAPH`ArcBox)), (new_corner1'(unresolved GRAPH`Point)), (new_corner2'(unresolved GRAPH`Point)), (new_corner_radius'nat1)) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((arcbox in set (elems OBJECTS)) and box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))	post ((OBJECTS = ([mk_ArcBox(mk_Box(new_corner1, new_corner2), new_corner_radius)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> arcbox)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>)))]edit_text((text'(unresolved GRAPH`Text)), (new_corner1'(unresolved GRAPH`Point)), (new_corner2'(unresolved GRAPH`Point)), (new_start_point'(unresolved GRAPH`Point)), (new_string'seq of (char))) msg'(unresolved GRAPH`Message)	ext [rd DRAWING_AREA'(unresolved GRAPH`Box), wr OBJECTS'seq of ((unresolved GRAPH`Object))]	pre ((text in set (elems OBJECTS)) and (box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA) and (((abs ((new_corner1.ycoord) - (new_corner2.ycoord))) >= 20) and (point_within_box(new_start_point, mk_Box(new_corner1, new_corner2)) and ((((new_corner1.ycoord) < (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) <= (new_corner2.ycoord))) or (((new_corner1.ycoord) > (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) <= (new_corner1.ycoord))))))))	post ((OBJECTS = ([mk_Text(mk_Box(new_corner1, new_corner2), new_start_point, new_string)] ^ [OBJECTS~(i) | i in set (inds OBJECTS~) & (OBJECTS~(i) <> text)])) and (msg = <SUCCESS>))	errs [(NOT_FIT' (not box_within_box(mk_Box(new_corner1, new_corner2), DRAWING_AREA))->((OBJECTS = OBJECTS~) and (msg = <NOT_FIT>))), (FRAME_SIZE' ((abs ((new_corner1.ycoord) - (new_corner2.ycoord))) < 20)->((OBJECTS = OBJECTS~) and (msg = <ERROR_FRAME_SIZE>))), (START_POINT' (not point_within_box(new_start_point, mk_Box(new_corner1, new_corner2)))->((OBJECTS = OBJECTS~) and (msg = <ERROR_START_POINT>))), (TEXT_NOT_FIT' ((((new_corner1.ycoord) < (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) <= (new_corner2.ycoord))) or (((new_corner1.ycoord) > (new_corner2.ycoord)) and (((new_start_point.ycoord) + ((len new_string) * 10)) <= (new_corner1.ycoord))))->((OBJECTS = OBJECTS~) and (msg = <TEXT_NOT_FIT>)))]end GRAPH

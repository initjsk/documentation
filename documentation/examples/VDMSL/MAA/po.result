RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)Message_in_bits' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 47'18(forall M'seq of (Bit) &  ((((len M) mod Word_Length) = 0) =>    Word_Length <> 0))Proof Obligation 2' (Unproved)Message_in_bits' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 49'17(forall M'seq of (Bit) &  (not (((len M) mod Word_Length) = 0) =>    Word_Length <> 0))Proof Obligation 3' (Unproved)Pad_out_Message' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 92'16(forall M'Message_in_bits &  (let No_Extra_bits'int = (Word_Length - ((len M) mod Word_Length)) in    (not (No_Extra_bits = Word_Length) =>      pre_Get_Application_defined_bits(M, No_Extra_bits))))Proof Obligation 4' (Unproved)Pad_out_Message' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 92'47(forall M'Message_in_bits &  (let No_Extra_bits'int = (Word_Length - ((len M) mod Word_Length)) in    (not (No_Extra_bits = Word_Length) =>      No_Extra_bits >= 0)))Proof Obligation 5' (Unproved)Pad_out_Message' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 87'4(forall M'Message_in_bits &  inv_Message_in_bits(let No_Extra_bits'int = (Word_Length - ((len M) mod Word_Length)) in (if (No_Extra_bits = Word_Length)  then M  else (M ^ Get_Application_defined_bits(M, No_Extra_bits)))) and (is_(let No_Extra_bits'int = (Word_Length - ((len M) mod Word_Length)) in (if (No_Extra_bits = Word_Length)  then M  else (M ^ Get_Application_defined_bits(M, No_Extra_bits))), seq of (Bit))))Proof Obligation 6' (Unproved)Get_Application_defined_bits' function satisfiability obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 94'4(forall M'Message_in_bits, No_bits'nat &  pre_Get_Application_defined_bits(M, No_bits) => exists Extra'Message_in_bits & post_Get_Application_defined_bits(M, No_bits, Extra))Proof Obligation 7' (Unproved)Form_Message_into_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 102'11(forall M'Message_in_bits & (((len M) >= Word_Length) and (((len M) mod Word_Length) = 0)) =>  (((len M) = Word_Length) =>    pre_Form_Number(M)))Proof Obligation 8' (Unproved)Form_Message_into_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 103'11(forall M'Message_in_bits & (((len M) >= Word_Length) and (((len M) mod Word_Length) = 0)) =>  (not ((len M) = Word_Length) =>    pre_Form_Number(Get_head_in_bits(M, Word_Length))))Proof Obligation 9' (Unproved)Form_Message_into_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 103'23(forall M'Message_in_bits & (((len M) >= Word_Length) and (((len M) mod Word_Length) = 0)) =>  (not ((len M) = Word_Length) =>    pre_Get_head_in_bits(M, Word_Length)))Proof Obligation 10' (Unproved)Form_Message_into_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 104'10(forall M'Message_in_bits & (((len M) >= Word_Length) and (((len M) mod Word_Length) = 0)) =>  (not ((len M) = Word_Length) =>    pre_Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))Proof Obligation 11' (Unproved)Form_Message_into_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 104'35(forall M'Message_in_bits & (((len M) >= Word_Length) and (((len M) mod Word_Length) = 0)) =>  (not ((len M) = Word_Length) =>    pre_Get_tail_in_bits(M, Word_Length)))Proof Obligation 12' (Unproved)Form_Message_into_blocks' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 99'4(forall M'Message_in_bits & (((len M) >= Word_Length) and (((len M) mod Word_Length) = 0)) =>  inv_Message_in_blocks((if ((len M) = Word_Length)  then [Form_Number(M)]  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))) and (inv_Message_in_blocks_plus_empty_Message((if ((len M) = Word_Length)  then [Form_Number(M)]  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length))))) and (is_((if ((len M) = Word_Length)  then [Form_Number(M)]  else ([Form_Number(Get_head_in_bits(M, Word_Length))] ^ Form_Message_into_blocks(Get_tail_in_bits(M, Word_Length)))), seq of (Number)))))Proof Obligation 13' (Unproved)Form_Number' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 109'29(forall M'Message_in_bits & ((len M) <= Word_Length) =>  (((len M) = 1) =>    M <> []))Proof Obligation 14' (Unproved)Form_Number' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 110'14(forall M'Message_in_bits & ((len M) <= Word_Length) =>  (not ((len M) = 1) =>    M <> []))Proof Obligation 15' (Unproved)Form_Number' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 110'22(forall M'Message_in_bits & ((len M) <= Word_Length) =>  (not ((len M) = 1) =>    pre_Form_Number((tl M))))Proof Obligation 16' (Unproved)Form_Number' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 110'38(forall M'Message_in_bits & ((len M) <= Word_Length) =>  (not ((len M) = 1) =>    M <> []))Proof Obligation 17' (Unproved)Form_Number' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 107'4(forall M'Message_in_bits & ((len M) <= Word_Length) =>  inv_Number((if ((len M) = 1)  then (hd M)  else ((hd M) + (2 * Form_Number((tl M)))))) and (is_nat((if ((len M) = 1)  then (hd M)  else ((hd M) + (2 * Form_Number((tl M))))))))Proof Obligation 18' (Unproved)CYC' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 120'4(forall X'Number &  inv_Number((ADD(X, X) + CAR(X, X))) and (is_nat((ADD(X, X) + CAR(X, X)))))Proof Obligation 19' (Unproved)AND' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 128'40(forall X'Number, Y'Number &  (not ((X = 0) or (Y = 0)) =>    inv_Number((X div 2)) and (is_nat((X div 2)))))Proof Obligation 20' (Unproved)AND' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 128'48(forall X'Number, Y'Number &  (not ((X = 0) or (Y = 0)) =>    inv_Number((Y div 2)) and (is_nat((Y div 2)))))Proof Obligation 21' (Unproved)AND' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 124'4(forall X'Number, Y'Number &  inv_Number((if ((X = 0) or (Y = 0))  then 0  else ((((X mod 2) * Y) mod 2) + (2 * AND((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))  then 0  else ((((X mod 2) * Y) mod 2) + (2 * AND((X div 2), (Y div 2))))))))Proof Obligation 22' (Unproved)OR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 134'42(forall X'Number, Y'Number &  (not ((X = 0) or (Y = 0)) =>    inv_Number((X div 2)) and (is_nat((X div 2)))))Proof Obligation 23' (Unproved)OR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 134'50(forall X'Number, Y'Number &  (not ((X = 0) or (Y = 0)) =>    inv_Number((Y div 2)) and (is_nat((Y div 2)))))Proof Obligation 24' (Unproved)OR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 130'4(forall X'Number, Y'Number &  inv_Number((if ((X = 0) or (Y = 0))  then (X + Y)  else (max((X mod 2), (Y mod 2)) + (2 * OR((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))  then (X + Y)  else (max((X mod 2), (Y mod 2)) + (2 * OR((X div 2), (Y div 2))))))))Proof Obligation 25' (Unproved)XOR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 146'36(forall X'Number, Y'Number &  (not ((X = 0) or (Y = 0)) =>    inv_Number((X div 2)) and (is_nat((X div 2)))))Proof Obligation 26' (Unproved)XOR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 146'44(forall X'Number, Y'Number &  (not ((X = 0) or (Y = 0)) =>    inv_Number((Y div 2)) and (is_nat((Y div 2)))))Proof Obligation 27' (Unproved)XOR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 142'4(forall X'Number, Y'Number &  inv_Number((if ((X = 0) or (Y = 0))  then (X + Y)  else (((X + Y) mod 2) + (2 * XOR((X div 2), (Y div 2)))))) and (is_nat((if ((X = 0) or (Y = 0))  then (X + Y)  else (((X + Y) mod 2) + (2 * XOR((X div 2), (Y div 2))))))))Proof Obligation 28' (Unproved)ADD' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 148'4(forall X'Number, Y'Number &  inv_Number(((X + Y) mod Maximum_Number_Size_plus_1)) and (is_nat(((X + Y) mod Maximum_Number_Size_plus_1))))Proof Obligation 29' (Unproved)CAR' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 154'12(forall X'Number, Y'Number &  Maximum_Number_Size_plus_1 <> 0)Proof Obligation 30' (Unproved)CAR' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 152'4(forall X'Number, Y'Number &  inv_Number(((X + Y) div Maximum_Number_Size_plus_1)) and (is_nat(((X + Y) div Maximum_Number_Size_plus_1))))Proof Obligation 31' (Unproved)MUL1, U' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 165'14(forall X'Number, Y'Number &  Maximum_Number_Size_plus_1 <> 0)Proof Obligation 32' (Unproved)MUL1, S' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 166'16(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 33' (Unproved)MUL1, S' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 166'18(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(L) and (is_nat(L))))Proof Obligation 34' (Unproved)MUL1, C' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 167'12(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 35' (Unproved)MUL1, C' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 167'14(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(L) and (is_nat(L))))Proof Obligation 36' (Unproved)MUL2, U' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 177'14(forall X'Number, Y'Number &  Maximum_Number_Size_plus_1 <> 0)Proof Obligation 37' (Unproved)MUL2, D' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 177'60(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 38' (Unproved)MUL2, D' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 177'62(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 39' (Unproved)MUL2, E' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 178'12(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 40' (Unproved)MUL2, E' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 178'14(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 41' (Unproved)MUL2, F' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 178'36(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U), E'Number = CAR(U, U) in      inv_Number((2 * E)) and (is_nat((2 * E))))))Proof Obligation 42' (Unproved)MUL2, S' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 178'58(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U), E'Number = CAR(U, U) in      (let F'Number = ADD(D, (2 * E)) in        inv_Number(L) and (is_nat(L))))))Proof Obligation 43' (Unproved)MUL2, C' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 179'14(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U), E'Number = CAR(U, U) in      (let F'Number = ADD(D, (2 * E)) in        inv_Number(L) and (is_nat(L))))))Proof Obligation 44' (Unproved)MUL2' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 179'28(forall X'Number, Y'Number &  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U), E'Number = CAR(U, U) in      (let F'Number = ADD(D, (2 * E)) in        (let S'Number = ADD(F, L), C'Number = CAR(F, L) in          inv_Number((2 * C)) and (is_nat((2 * C))))))))Proof Obligation 45' (Unproved)MUL2A' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 194'11(forall X'Number, Y'Number &  Maximum_Number_Size_plus_1_div_2 <> 0)Proof Obligation 46' (Unproved)MUL2A' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 195'11(forall X'Number, Y'Number &  (not ((X div Maximum_Number_Size_plus_1_div_2) = 0) =>    Maximum_Number_Size_plus_1_div_2 <> 0))Proof Obligation 47' (Unproved)MUL2A, U' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 190'14(forall X'Number, Y'Number & (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =>  Maximum_Number_Size_plus_1 <> 0)Proof Obligation 48' (Unproved)MUL2A, D' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 191'16(forall X'Number, Y'Number & (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =>  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 49' (Unproved)MUL2A, D' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 191'18(forall X'Number, Y'Number & (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =>  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    inv_Number(U) and (is_nat(U))))Proof Obligation 50' (Unproved)MUL2A, S' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 192'18(forall X'Number, Y'Number & (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =>  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U) in      inv_Number(L) and (is_nat(L)))))Proof Obligation 51' (Unproved)MUL2A, C' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 193'14(forall X'Number, Y'Number & (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =>  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U) in      inv_Number(L) and (is_nat(L)))))Proof Obligation 52' (Unproved)MUL2A' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 193'28(forall X'Number, Y'Number & (((X div Maximum_Number_Size_plus_1_div_2) = 0) or ((Y div Maximum_Number_Size_plus_1_div_2) = 0)) =>  (let L'nat = ((X * Y) mod Maximum_Number_Size_plus_1), U'int = ((X * Y) div Maximum_Number_Size_plus_1) in    (let D'Number = ADD(U, U) in      (let S'Number = ADD(D, L), C'Number = CAR(D, L) in        inv_Number((2 * C)) and (is_nat((2 * C)))))))Proof Obligation 53' (Unproved)BYT, X' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 204'16(forall K'Double_Number &  K <> [])Proof Obligation 54' (Unproved)BYT, Y' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 205'20(forall K'Double_Number &  K <> [])Proof Obligation 55' (Unproved)BYT, Y' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 205'17(forall K'Double_Number &  (tl K) <> [])Proof Obligation 56' (Unproved)BYT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 206'14(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(X, 3)))Proof Obligation 57' (Unproved)BYT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 206'24(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(X, 2)))Proof Obligation 58' (Unproved)BYT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 206'34(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(X, 1)))Proof Obligation 59' (Unproved)BYT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 206'44(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(X, 0)))Proof Obligation 60' (Unproved)BYT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 207'14(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(Y, 3)))Proof Obligation 61' (Unproved)BYT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 207'24(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(Y, 2)))Proof Obligation 62' (Unproved)BYT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 207'34(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(Y, 1)))Proof Obligation 63' (Unproved)BYT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 207'44(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    pre_Byte(X, 0)))Proof Obligation 64' (Unproved)BYT, XY'' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 210'33(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    (let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in      (let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in        inv_Message_in_blocks(XY) and (inv_Message_in_blocks_plus_empty_Message(XY) and (is_(XY, seq of (Number))))))))Proof Obligation 65' (Unproved)BYT, XY'' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 210'36(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    (let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in      (let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in        inv_Number(P) and (is_nat(P))))))Proof Obligation 66' (Unproved)BYT, X''' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 211'14(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    (let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in      (let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in        (let XY''Message_in_blocks = Condition_Sequence(XY, P) in          pre_Get_head_in_blocks(XY', 4))))))Proof Obligation 67' (Unproved)BYT, Y''' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 212'14(forall K'Double_Number &  (let X'Number = (hd K), Y'Number = (hd (tl K)) in    (let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in      (let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in        (let XY''Message_in_blocks = Condition_Sequence(XY, P) in          pre_Get_tail_in_blocks(XY', 4))))))Proof Obligation 68' (Unproved)BYT' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 202'4(forall K'Double_Number &  inv_Double_Number(let X'Number = (hd K), Y'Number = (hd (tl K)) in let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in let XY''Message_in_blocks = Condition_Sequence(XY, P) in let X'''Message_in_blocks = Get_head_in_blocks(XY', 4), Y'''Message_in_blocks = Get_tail_in_blocks(XY', 4) in ([Convert_Bytes_to_Number(X'')] ^ [Convert_Bytes_to_Number(Y'')])) and (is_(let X'Number = (hd K), Y'Number = (hd (tl K)) in let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(X, 1), Byte(X, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(X, 0)] in let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in let XY''Message_in_blocks = Condition_Sequence(XY, P) in let X'''Message_in_blocks = Get_head_in_blocks(XY', 4), Y'''Message_in_blocks = Get_tail_in_blocks(XY', 4) in ([Convert_Bytes_to_Number(X'')] ^ [Convert_Bytes_to_Number(Y'')]), seq of (Number))))Proof Obligation 69' (Unproved)Byte' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 219'10(forall N'Number, B'nat & ((B >= 0) and (B <= 3)) =>  (not (B = 0) =>    pre_Byte((N div (2 ** 8)), (B - 1))))Proof Obligation 70' (Unproved)Byte' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 219'17(forall N'Number, B'nat & ((B >= 0) and (B <= 3)) =>  (not (B = 0) =>    inv_Number((N div (2 ** 8))) and (is_nat((N div (2 ** 8))))))Proof Obligation 71' (Unproved)Byte' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 219'29(forall N'Number, B'nat & ((B >= 0) and (B <= 3)) =>  (not (B = 0) =>    (B - 1) >= 0))Proof Obligation 72' (Unproved)Byte' non-zero obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 219'17(forall N'Number, B'nat & ((B >= 0) and (B <= 3)) =>  (not (B = 0) =>    (2 ** 8) <> 0))Proof Obligation 73' (Unproved)Byte' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 215'4(forall N'Number, B'nat & ((B >= 0) and (B <= 3)) =>  inv_Number((if (B = 0)  then (N mod (2 ** 8))  else Byte((N div (2 ** 8)), (B - 1)))) and (is_nat((if (B = 0)  then (N mod (2 ** 8))  else Byte((N div (2 ** 8)), (B - 1))))))Proof Obligation 74' (Unproved)Condition_Sequence' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 225'31(forall M'Message_in_blocks, P'Number &  (((len M) = 1) =>    M <> []))Proof Obligation 75' (Unproved)Condition_Sequence' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 226'31(forall M'Message_in_blocks, P'Number &  (not ((len M) = 1) =>    M <> []))Proof Obligation 76' (Unproved)Condition_Sequence' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 227'33(forall M'Message_in_blocks, P'Number &  (not ((len M) = 1) =>    M <> []))Proof Obligation 77' (Unproved)Condition_Sequence' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 227'47(forall M'Message_in_blocks, P'Number &  (not ((len M) = 1) =>    M <> []))Proof Obligation 78' (Unproved)Condition_Sequence' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 222'4(forall M'Message_in_blocks, P'Number &  inv_Message_in_blocks((if ((len M) = 1)  then [Condition_value((hd M), P)]  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P))))) and (inv_Message_in_blocks_plus_empty_Message((if ((len M) = 1)  then [Condition_value((hd M), P)]  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P))))) and (is_((if ((len M) = 1)  then [Condition_value((hd M), P)]  else ([Condition_value((hd M), P)] ^ Condition_Sequence((tl M), Changes((hd M), P)))), seq of (Number)))))Proof Obligation 79' (Unproved)Condition_value' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 229'4(forall B'Number, P'Number &  inv_Number(let P''nat1 = (2 * P) in let P'''nat1 = (P' + 1) in (if (B = 0)  then P''  else (if (B = ((2 ** 8) - 1))  then (((2 ** 8) - 1) - P'')  else B))) and (is_nat(let P''nat1 = (2 * P) in let P'''nat1 = (P' + 1) in (if (B = 0)  then P''  else (if (B = ((2 ** 8) - 1))  then (((2 ** 8) - 1) - P'')  else B)))))Proof Obligation 80' (Unproved)Changes' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 238'4(forall B'Number, P'Number &  inv_Number(let P''nat1 = (2 * P) in let P'''nat1 = (P' + 1) in (if ((B = 0) or (B = ((2 ** 8) - 1)))  then P''  else P')) and (is_nat(let P''nat1 = (2 * P) in let P'''nat1 = (P' + 1) in (if ((B = 0) or (B = ((2 ** 8) - 1)))  then P''  else P'))))Proof Obligation 81' (Unproved)Convert_Bytes_to_Number' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 249'14(forall M'Message_in_blocks &  (((len M) = 1) =>    M <> []))Proof Obligation 82' (Unproved)Convert_Bytes_to_Number' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 250'38(forall M'Message_in_blocks &  (not ((len M) = 1) =>    M <> []))Proof Obligation 83' (Unproved)Convert_Bytes_to_Number' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 250'47(forall M'Message_in_blocks &  (not ((len M) = 1) =>    M <> []))Proof Obligation 84' (Unproved)Convert_Bytes_to_Number' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 246'4(forall M'Message_in_blocks &  inv_Number((if ((len M) = 1)  then (hd M)  else (Convert_Bytes_to_Number((tl M)) + ((hd M) * (2 ** (8 * ((len M) - 1))))))) and (is_nat((if ((len M) = 1)  then (hd M)  else (Convert_Bytes_to_Number((tl M)) + ((hd M) * (2 ** (8 * ((len M) - 1)))))))))Proof Obligation 85' (Unproved)PAT, X' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 254'16(forall D'Double_Number &  D <> [])Proof Obligation 86' (Unproved)PAT, Y' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 255'20(forall D'Double_Number &  D <> [])Proof Obligation 87' (Unproved)PAT, Y' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 255'17(forall D'Double_Number &  (tl D) <> [])Proof Obligation 88' (Unproved)PAT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 256'14(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(X, 3)))Proof Obligation 89' (Unproved)PAT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 256'24(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(X, 2)))Proof Obligation 90' (Unproved)PAT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 256'34(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(Y, 1)))Proof Obligation 91' (Unproved)PAT, X'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 256'44(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(Y, 0)))Proof Obligation 92' (Unproved)PAT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 257'14(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(Y, 3)))Proof Obligation 93' (Unproved)PAT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 257'24(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(Y, 2)))Proof Obligation 94' (Unproved)PAT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 257'34(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(Y, 1)))Proof Obligation 95' (Unproved)PAT, Y'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 257'44(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    pre_Byte(Y, 0)))Proof Obligation 96' (Unproved)PAT' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 260'19(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    (let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(Y, 1), Byte(Y, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(Y, 0)] in      (let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in        inv_Message_in_blocks(XY) and (inv_Message_in_blocks_plus_empty_Message(XY) and (is_(XY, seq of (Number))))))))Proof Obligation 97' (Unproved)PAT' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 260'22(forall D'Double_Number &  (let X'Number = (hd D), Y'Number = (hd (tl D)) in    (let X''seq1 of (Number) = [Byte(X, 3), Byte(X, 2), Byte(Y, 1), Byte(Y, 0)], Y''seq1 of (Number) = [Byte(Y, 3), Byte(Y, 2), Byte(Y, 1), Byte(Y, 0)] in      (let XY'seq1 of (Number) = (X' ^ Y'), P'nat = 0 in        inv_Number(P) and (is_nat(P))))))Proof Obligation 98' (Unproved)Record_Changes' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 265'22(forall M'Message_in_blocks, P'Number &  (((len M) = 1) =>    M <> []))Proof Obligation 99' (Unproved)Record_Changes' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 266'29(forall M'Message_in_blocks, P'Number &  (not ((len M) = 1) =>    M <> []))Proof Obligation 100' (Unproved)Record_Changes' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 266'43(forall M'Message_in_blocks, P'Number &  (not ((len M) = 1) =>    M <> []))Proof Obligation 101' (Unproved)Prelude, J1' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 278'17(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    J1K1 <> []))Proof Obligation 102' (Unproved)Prelude, K1' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 279'21(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    J1K1 <> []))Proof Obligation 103' (Unproved)Prelude, K1' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 279'18(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (tl J1K1) <> []))Proof Obligation 104' (Unproved)Prelude, H5' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 304'21(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            inv_Number(Q) and (is_nat(Q))))))))))))))))Proof Obligation 105' (Unproved)Prelude, X0Y0' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 307'19(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              inv_Double_Number([H4, H5]))))))))))))))))Proof Obligation 106' (Unproved)Prelude, V0W' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 308'18(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              inv_Double_Number([H6, H7]))))))))))))))))Proof Obligation 107' (Unproved)Prelude, ST' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 309'17(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              inv_Double_Number([H8, H9]))))))))))))))))Proof Obligation 108' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'24(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                X0Y0 <> []))))))))))))))))Proof Obligation 109' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'37(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                X0Y0 <> []))))))))))))))))Proof Obligation 110' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'34(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                (tl X0Y0) <> []))))))))))))))))Proof Obligation 111' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'46(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                V0W <> []))))))))))))))))Proof Obligation 112' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'58(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                V0W <> []))))))))))))))))Proof Obligation 113' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'55(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                (tl V0W) <> []))))))))))))))))Proof Obligation 114' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'66(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                ST <> []))))))))))))))))Proof Obligation 115' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'77(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                ST <> []))))))))))))))))Proof Obligation 116' (Unproved)Prelude' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 310'74(forall K'Key &  (let J1K1'Double_Number = BYT(K) in    (let J1'Number = (hd J1K1), K1'Number = (hd (tl J1K1)), P'Number = PAT(K), Q'nat1 = ((1 + P) * (1 + P)) in      (let J12'Number = MUL1(J1, J1), J22'Number = MUL2(J1, J1) in        (let J14'Number = MUL1(J12, J12), J24'Number = MUL2(J22, J22) in          (let J16'Number = MUL1(J12, J14), J26'Number = MUL2(J22, J24) in            (let J18'Number = MUL1(J12, J16), J28'Number = MUL2(J22, J26) in              (let H4'Number = XOR(J14, J28), H6'Number = XOR(J16, J26), H8'Number = XOR(J18, J28) in                (let K12'Number = MUL1(K1, K1), K22'Number = MUL2(K1, K1) in                  (let K14'Number = MUL1(K12, K12), K24'Number = MUL2(K22, K22) in                    (let K15'Number = MUL1(K1, K14), K25'Number = MUL2(K1, K24) in                      (let K17'Number = MUL1(K12, K15), K27'Number = MUL2(K22, K25) in                        (let K19'Number = MUL1(K12, K17), K29'Number = MUL2(K22, K27) in                          (let H''Number = XOR(K15, K25) in                            (let H5'Number = MUL2(H', Q), H7'Number = XOR(K17, K27), H9'Number = XOR(K19, K29) in                              (let X0Y0'Double_Number = BYT([H4, H5]), V0W'Double_Number = BYT([H6, H7]), ST'Double_Number = BYT([H8, H9]) in                                (tl ST) <> []))))))))))))))))Proof Obligation 117' (Unproved)Main_loop, Mi' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 323'23(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      M <> [])))Proof Obligation 118' (Unproved)Main_loop, F'' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 330'24(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      (let Mi'Number = (hd M) in        (let V''Number = CYC(V) in          (let E'Number = XOR(V', W), X''Number = XOR(X, Mi), Y''Number = XOR(Y, Mi) in            (let F'Number = ADD(E, Y'), G'Number = ADD(E, X') in              inv_Number(A) and (is_nat(A)))))))))Proof Obligation 119' (Unproved)Main_loop, G'' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 331'24(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      (let Mi'Number = (hd M) in        (let V''Number = CYC(V) in          (let E'Number = XOR(V', W), X''Number = XOR(X, Mi), Y''Number = XOR(Y, Mi) in            (let F'Number = ADD(E, Y'), G'Number = ADD(E, X') in              inv_Number(B) and (is_nat(B)))))))))Proof Obligation 120' (Unproved)Main_loop, F''' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 332'27(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      (let Mi'Number = (hd M) in        (let V''Number = CYC(V) in          (let E'Number = XOR(V', W), X''Number = XOR(X, Mi), Y''Number = XOR(Y, Mi) in            (let F'Number = ADD(E, Y'), G'Number = ADD(E, X') in              (let F''Number = OR(F, A), G''Number = OR(G, B) in                inv_Number(C) and (is_nat(C))))))))))Proof Obligation 121' (Unproved)Main_loop, G''' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 333'27(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      (let Mi'Number = (hd M) in        (let V''Number = CYC(V) in          (let E'Number = XOR(V', W), X''Number = XOR(X, Mi), Y''Number = XOR(Y, Mi) in            (let F'Number = ADD(E, Y'), G'Number = ADD(E, X') in              (let F''Number = OR(F, A), G''Number = OR(G, B) in                inv_Number(D) and (is_nat(D))))))))))Proof Obligation 122' (Unproved)Main_loop, Y''' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 335'20(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      (let Mi'Number = (hd M) in        (let V''Number = CYC(V) in          (let E'Number = XOR(V', W), X''Number = XOR(X, Mi), Y''Number = XOR(Y, Mi) in            (let F'Number = ADD(E, Y'), G'Number = ADD(E, X') in              (let F''Number = OR(F, A), G''Number = OR(G, B) in                (let F'''Number = AND(F', C), G'''Number = AND(G', D) in                  pre_MUL2A(Y', G''))))))))))Proof Obligation 123' (Unproved)Main_loop' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 336'18(forall M'Message_in_blocks_plus_empty_Message, KC'Key_Constant &  (let mk_Key_Constant(X, Y, V, W, S, T)'Key_Constant = KC in    (not ((len M) = 0) =>      (let Mi'Number = (hd M) in        (let V''Number = CYC(V) in          (let E'Number = XOR(V', W), X''Number = XOR(X, Mi), Y''Number = XOR(Y, Mi) in            (let F'Number = ADD(E, Y'), G'Number = ADD(E, X') in              (let F''Number = OR(F, A), G''Number = OR(G, B) in                (let F'''Number = AND(F', C), G'''Number = AND(G', D) in                  (let X'''Number = MUL1(X', F''), Y'''Number = MUL2A(Y', G'') in                    M <> []))))))))))Proof Obligation 124' (Unproved)Z' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 350'14(forall M'Message_in_blocks, K'Key &  (let KC'Key_Constant = Prelude(K) in    (let S'Number = (KC.S), T'Number = (KC.T) in      (let M''seq1 of (Number) = ((M ^ [S]) ^ [T]) in        inv_Message_in_blocks_plus_empty_Message(M') and (is_(M', seq of (Number)))))))Proof Obligation 125' (Unproved)MAC, M''' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 360'14(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    pre_Form_Message_into_blocks(M')))Proof Obligation 126' (Unproved)MAC, M'''' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 364'19(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    (let M'''Message_in_blocks = Form_Message_into_blocks(M') in      (not ((len M'') <= Maximum_No_of_blocks_for_MAC) =>        pre_Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC)))))Proof Obligation 127' (Unproved)MAC, M'''' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 364'42(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    (let M'''Message_in_blocks = Form_Message_into_blocks(M') in      (not ((len M'') <= Maximum_No_of_blocks_for_MAC) =>        Maximum_No_of_blocks_for_MAC >= 0))))Proof Obligation 128' (Unproved)MAC, M'''' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 365'21(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    (let M'''Message_in_blocks = Form_Message_into_blocks(M') in      (not ((len M'') <= Maximum_No_of_blocks_for_MAC) =>        pre_Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)))))Proof Obligation 129' (Unproved)MAC, M'''' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 365'44(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    (let M'''Message_in_blocks = Form_Message_into_blocks(M') in      (not ((len M'') <= Maximum_No_of_blocks_for_MAC) =>        Maximum_No_of_blocks_for_MAC >= 0))))Proof Obligation 130' (Unproved)MAC' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 366'17(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    (let M'''Message_in_blocks = Form_Message_into_blocks(M') in      (not ((len M'') <= Maximum_No_of_blocks_for_MAC) =>        (let M''''seq1 of (Number) = ([Z(Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC), K)] ^ Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)) in          inv_Message_in_blocks(M''') and (inv_Message_in_blocks_plus_empty_Message(M''') and (is_(M''', seq of (Number)))))))))Proof Obligation 131' (Unproved)MAC' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 366'24(forall M'Message_in_bits, K'Key &  (let M''Message_in_bits = Pad_out_Message(M) in    (let M'''Message_in_blocks = Form_Message_into_blocks(M') in      (not ((len M'') <= Maximum_No_of_blocks_for_MAC) =>        (let M''''seq1 of (Number) = ([Z(Get_head_in_blocks(M'', Maximum_No_of_blocks_for_MAC), K)] ^ Get_tail_in_blocks(M'', Maximum_No_of_blocks_for_MAC)) in          Maximum_No_of_blocks_for_MAC_plus_1 >= 0)))))Proof Obligation 132' (Unproved)Z_of_SEG, M'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 372'22(forall M'Message_in_blocks, K'Key, No_blocks'nat &  (not ((len M) <= No_blocks) =>    pre_Get_head_in_blocks(M, No_blocks)))Proof Obligation 133' (Unproved)Z_of_SEG, M'' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 373'16(forall M'Message_in_blocks, K'Key, No_blocks'nat &  (not ((len M) <= No_blocks) =>    pre_Get_tail_in_blocks(M, No_blocks)))Proof Obligation 134' (Unproved)Z_of_SEG' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 374'17(forall M'Message_in_blocks, K'Key, No_blocks'nat &  (not ((len M) <= No_blocks) =>    (let M''seq1 of (Number) = ([Z(Get_head_in_blocks(M, No_blocks), K)] ^ Get_tail_in_blocks(M, No_blocks)) in      inv_Message_in_blocks(M') and (inv_Message_in_blocks_plus_empty_Message(M') and (is_(M', seq of (Number)))))))Proof Obligation 135' (Unproved)Get_tail_in_bits' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 386'10(forall M'Message_in_bits, No_bits'nat & ((len M) >= No_bits) =>  (not (No_bits = 0) =>    pre_Get_tail_in_bits((tl M), (No_bits - 1))))Proof Obligation 136' (Unproved)Get_tail_in_bits' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 386'41(forall M'Message_in_bits, No_bits'nat & ((len M) >= No_bits) =>  (not (No_bits = 0) =>    (No_bits - 1) >= 0))Proof Obligation 137' (Unproved)Get_tail_in_bits' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 386'31(forall M'Message_in_bits, No_bits'nat & ((len M) >= No_bits) =>  (not (No_bits = 0) =>    M <> []))Proof Obligation 138' (Unproved)Get_head_in_bits' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 392'15(forall M'Message_in_bits, No_bits'nat & (((len M) >= No_bits) and (No_bits >= 1)) =>  ((No_bits = 0) =>    M <> []))Proof Obligation 139' (Unproved)Get_head_in_bits' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 393'15(forall M'Message_in_bits, No_bits'nat & (((len M) >= No_bits) and (No_bits >= 1)) =>  (not (No_bits = 0) =>    M <> []))Proof Obligation 140' (Unproved)Get_head_in_bits' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 393'22(forall M'Message_in_bits, No_bits'nat & (((len M) >= No_bits) and (No_bits >= 1)) =>  (not (No_bits = 0) =>    pre_Get_head_in_bits((tl M), (No_bits - 1))))Proof Obligation 141' (Unproved)Get_head_in_bits' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 393'53(forall M'Message_in_bits, No_bits'nat & (((len M) >= No_bits) and (No_bits >= 1)) =>  (not (No_bits = 0) =>    (No_bits - 1) >= 0))Proof Obligation 142' (Unproved)Get_head_in_bits' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 393'43(forall M'Message_in_bits, No_bits'nat & (((len M) >= No_bits) and (No_bits >= 1)) =>  (not (No_bits = 0) =>    M <> []))Proof Obligation 143' (Unproved)Get_head_in_bits' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 389'4(forall M'Message_in_bits, No_bits'nat & (((len M) >= No_bits) and (No_bits >= 1)) =>  inv_Message_in_bits((if (No_bits = 0)  then [(hd M)]  else ([(hd M)] ^ Get_head_in_bits((tl M), (No_bits - 1))))) and (is_((if (No_bits = 0)  then [(hd M)]  else ([(hd M)] ^ Get_head_in_bits((tl M), (No_bits - 1)))), seq of (Bit))))Proof Obligation 144' (Unproved)Get_tail_in_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 400'10(forall M'Message_in_blocks, No_blocks'nat & ((len M) >= No_blocks) =>  (not (No_blocks = 0) =>    pre_Get_tail_in_blocks((tl M), (No_blocks - 1))))Proof Obligation 145' (Unproved)Get_tail_in_blocks' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 400'45(forall M'Message_in_blocks, No_blocks'nat & ((len M) >= No_blocks) =>  (not (No_blocks = 0) =>    (No_blocks - 1) >= 0))Proof Obligation 146' (Unproved)Get_tail_in_blocks' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 400'33(forall M'Message_in_blocks, No_blocks'nat & ((len M) >= No_blocks) =>  (not (No_blocks = 0) =>    M <> []))Proof Obligation 147' (Unproved)Get_head_in_blocks' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 406'15(forall M'Message_in_blocks, No_blocks'nat & (((len M) >= No_blocks) and (No_blocks >= 1)) =>  ((No_blocks = 0) =>    M <> []))Proof Obligation 148' (Unproved)Get_head_in_blocks' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 407'15(forall M'Message_in_blocks, No_blocks'nat & (((len M) >= No_blocks) and (No_blocks >= 1)) =>  (not (No_blocks = 0) =>    M <> []))Proof Obligation 149' (Unproved)Get_head_in_blocks' function apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 407'22(forall M'Message_in_blocks, No_blocks'nat & (((len M) >= No_blocks) and (No_blocks >= 1)) =>  (not (No_blocks = 0) =>    pre_Get_head_in_blocks((tl M), (No_blocks - 1))))Proof Obligation 150' (Unproved)Get_head_in_blocks' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 407'57(forall M'Message_in_blocks, No_blocks'nat & (((len M) >= No_blocks) and (No_blocks >= 1)) =>  (not (No_blocks = 0) =>    (No_blocks - 1) >= 0))Proof Obligation 151' (Unproved)Get_head_in_blocks' non-empty sequence obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 407'45(forall M'Message_in_blocks, No_blocks'nat & (((len M) >= No_blocks) and (No_blocks >= 1)) =>  (not (No_blocks = 0) =>    M <> []))Proof Obligation 152' (Unproved)Get_head_in_blocks' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/MAA/maa.vdmsl) at line 403'4(forall M'Message_in_blocks, No_blocks'nat & (((len M) >= No_blocks) and (No_blocks >= 1)) =>  inv_Message_in_blocks((if (No_blocks = 0)  then [(hd M)]  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1))))) and (inv_Message_in_blocks_plus_empty_Message((if (No_blocks = 0)  then [(hd M)]  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1))))) and (is_((if (No_blocks = 0)  then [(hd M)]  else ([(hd M)] ^ Get_head_in_blocks((tl M), (No_blocks - 1)))), seq of (Number)))))

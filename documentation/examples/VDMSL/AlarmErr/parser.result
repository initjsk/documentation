ERROR:alarmerr.vdmsl:2154:45,35:Expecting '&' after bind list in exists
ERROR:alarmerr.vdmsl:2079:37,15:Missing ';' after function definition
ERROR:alarmerr.vdmsl:2078:21,32:Missing ';' after type definition
RESULT:result:-1:-1,-1:module DEFAULTexports alldefinitionsstatic private Plant = compose Plant of schedule'(unresolved DEFAULT`Schedule), alarms'set of ((unresolved DEFAULT`Alarm)) end	inv mk_(unresolved DEFAULT`Plant)(schedule, alarms) == (forall a in set alarms & (forall per in set (dom schedule) & QualificationOK(schedule(per), (a.quali), a)))static private Schedule = map ((unresolved DEFAULT`Period)) to (set of ((unresolved DEFAULT`Expert)))	inv schedule == (forall exs in set (rng schedule) & (exss <> {}))static private Period = tokenstatic private Expert = compose Expert of expertid'(unresolved DEFAULT`ExpertId), quali'set of ((unresolved DEFAULT`Qualification)) end	inv ex == ((ex.quali) <> {})static private ExpertId = tokenstatic private Qualification = <Elec>static private Alarm = compose Alarm of alarmtext'seq of (char), quali'(unresolved DEFAULT`Qualification) endNumberOfExperts' ((unresolved DEFAULT`Period) * (unresolved DEFAULT`Plant) -> nat)	NumberOfExperts(per, plant) ==(card (plant.schedule)(per))	pre (per in set (dom (plant.schedule)))ExpertIsOnDuty' ((unresolved DEFAULT`Expert) * (unresolved DEFAULT`Plant) -> set of ((unresolved DEFAULT`Period)))	ExpertIsOnDuty(ex, mk_(unresolved DEFAULT`Plant)(sch, -)) =={per | [per in set (dom sch)] & (ex in set sch(per))}end DEFAULT

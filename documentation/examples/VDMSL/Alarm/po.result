RESULT:result:-1:-1,-1:Proof Obligation 1' (Unproved)e1' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 19'15inv_Expert(mk_Expert(eid1, {<Elec>}))Proof Obligation 2' (Unproved)e2' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 20'15inv_Expert(mk_Expert(eid2, {<Mech>, <Chem>}))Proof Obligation 3' (Unproved)e3' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 21'15inv_Expert(mk_Expert(eid3, {<Bio>, <Chem>, <Elec>}))Proof Obligation 4' (Unproved)e4' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 22'15inv_Expert(mk_Expert(eid4, {<Bio>}))Proof Obligation 5' (Unproved)e5' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 23'15inv_Expert(mk_Expert(eid5, {<Chem>, <Bio>}))Proof Obligation 6' (Unproved)e6' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 24'15inv_Expert(mk_Expert(eid6, {<Elec>, <Chem>, <Bio>, <Mech>}))Proof Obligation 7' (Unproved)e7' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 25'15inv_Expert(mk_Expert(eid7, {<Elec>, <Mech>}))Proof Obligation 8' (Unproved)e8' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 26'15inv_Expert(mk_Expert(eid8, {<Mech>, <Bio>}))Proof Obligation 9' (Unproved)s' map sequence compatible obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 30'8forall m1, m2 in set {{p1 |-> {e7, e5, e1}}, {p2 |-> {e6}}, {p3 |-> {e1, e3, e8}}, {p4 |-> {e6}}} &  forall d3 in set dom m1, d4 in set dom m2 &    d3 = d4 => m1(d3) = m2(d4)Proof Obligation 10' (Unproved)plant1' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 41'29inv_Schedule(s) and (is_(s, map (Period) to (set of (Expert))))Proof Obligation 11' (Unproved)plant1' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/testalarm.vdmsl) at line 41'20inv_Plant(mk_Plant(s, {a1, a2, a3})) and (inv_Schedule(s) and (is_(s, map (Period) to (set of (Expert)))))Proof Obligation 12' (Trivial by <forall x in set s & x in set s>)Plant' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/alarm.vdmsl) at line 8'26(forall mk_Plant(schedule, alarms)'Plant &  (forall a in set alarms &    (forall peri in set (dom schedule) &      peri in set dom schedule)))Proof Obligation 13' (Trivial by <x in set s => x in set s>)NumberOfExperts' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/alarm.vdmsl) at line 34'10(forall peri'Period, plant'Plant & (peri in set (dom (plant.schedule))) =>  peri in set dom (plant.schedule))Proof Obligation 14' (Trivial by <forall x in set s & x in set s>)ExpertIsOnDuty' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/alarm.vdmsl) at line 39'44(forall ex'Expert, mk_Plant(sch, -)'Plant &  (forall peri in set (dom sch) &    peri in set dom sch))Proof Obligation 15' (Unproved)ExpertToPage' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/alarm.vdmsl) at line 44'17(((peri in set (dom (plant.schedule))) and (a in set (plant.alarms))) => forall r'Expert &   peri in set dom (plant.schedule))Proof Obligation 16' (Unproved)ExpertToPage' function satisfiability obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/alarm.vdmsl) at line 41'3(forall a'Alarm, peri'Period, plant'Plant &  pre_ExpertToPage(a, peri, plant) => exists r'Expert & post_ExpertToPage(a, peri, plant, r))Proof Obligation 17' (Unproved)ChangeExpert' map apply obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/changeexpert.vdmsl) at line 6'30(forall mk_Plant(plan, alarms)'Plant, ex1'Expert, ex2'Expert, peri'Period &  peri in set dom plan)Proof Obligation 18' (Unproved)ChangeExpert' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/changeexpert.vdmsl) at line 6'17(forall mk_Plant(plan, alarms)'Plant, ex1'Expert, ex2'Expert, peri'Period &  inv_Schedule((plan ++ {peri |-> ((plan(peri) \ {ex1}) union {ex2})})) and (is_((plan ++ {peri |-> ((plan(peri) \ {ex1}) union {ex2})}), map (Period) to (set of (Expert)))))Proof Obligation 19' (Unproved)ChangeExpert' subtype obligation in 'DEFAULT' (../../documentation/examples/VDMSL/Alarm/changeexpert.vdmsl) at line 6'3(forall mk_Plant(plan, alarms)'Plant, ex1'Expert, ex2'Expert, peri'Period &  inv_Plant(mk_Plant((plan ++ {peri |-> ((plan(peri) \ {ex1}) union {ex2})}), alarms)) and (inv_Schedule((plan ++ {peri |-> ((plan(peri) \ {ex1}) union {ex2})})) and (is_((plan ++ {peri |-> ((plan(peri) \ {ex1}) union {ex2})}), map (Period) to (set of (Expert))))))
